{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js!/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js!/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider-stg.hera.health/src/views/clients/ReviewAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/views/clients/ReviewAdd.vue","mtime":1592235030405},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFJhdGluZyBmcm9tICcuLi8uLi9jb21wb25lbnRzL1JhdGluZyc7CmltcG9ydCByZiBmcm9tICIuLi8uLi9hcGkvUmVxdWVzdEZhY3RvcnkiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgUmF0aW5nOiBSYXRpbmcKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBub3RlOiBudWxsLAogICAgICByYXRpbmc6IDAsCiAgICAgIHJldmlldzogbnVsbAogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgc2VsZiA9IHRoaXM7CiAgICB2YXIgaWQgPSBwYXJzZUludCh0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpOwogICAgcmYuZ2V0UmVxdWVzdCgnVXNlclJlcXVlc3QnKS5nZXRSZXZpZXcoaWQpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICBzZWxmLnJldmlldyA9IHJlcy5kYXRhOwogICAgICBzZWxmLnJhdGluZyA9IHJlcy5kYXRhLnN0YXI7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGlzUmVhZE9ubHk6IGZ1bmN0aW9uIGlzUmVhZE9ubHkoKSB7CiAgICAgIHZhciBzZWxmID0gdGhpczsKICAgICAgcmV0dXJuIHNlbGYucmF0aW5nICE9IDAgPyB0cnVlIDogZmFsc2U7CiAgICB9LAogICAgc3VibWl0UmV2aWV3OiBmdW5jdGlvbiBzdWJtaXRSZXZpZXcoKSB7CiAgICAgIHZhciBzZWxmID0gdGhpczsKICAgICAgdmFyIGlkID0gcGFyc2VJbnQodGhpcy4kcm91dGUucGFyYW1zLmlkKTsKICAgICAgdmFyIHBhcmFtcyA9IHsKICAgICAgICBjbGluaWNfaWQ6IGlkLAogICAgICAgIHRpdGxlOiAnJywKICAgICAgICBzdGFydDogc2VsZi5ub3RlLAogICAgICAgIGNvbnRlbnQ6IHNlbGYucmF0aW5nCiAgICAgIH07CiAgICAgIHJmLmdldFJlcXVlc3QoJ1VzZXJSZXF1ZXN0JykucG9zdFJldmlldyhwYXJhbXMpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHNlbGYuJHN0b3JlLmRpc3BhdGNoKCdhcHAvc2hvd01vZGFsJywgewogICAgICAgICAgbWVzc2FnZTogcmVzLm1lc3NhZ2UKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["ReviewAdd.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,OAAA,MAAA,MAAA,yBAAA;AACA,OAAA,EAAA,MAAA,0BAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,MAAA,EAAA,CAFA;AAGA,MAAA,MAAA,EAAA;AAHA,KAAA;AAKA,GAVA;AAWA,EAAA,OAXA,qBAWA;AACA,QAAA,IAAA,GAAA,IAAA;AACA,QAAA,EAAA,GAAA,QAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CAAA;AAEA,IAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,SAAA,CAAA,EAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,MAAA,IAAA,CAAA,MAAA,GAAA,GAAA,CAAA,IAAA;AACA,MAAA,IAAA,CAAA,MAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,KAHA;AAIA,GAnBA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,aAAA,IAAA,CAAA,MAAA,IAAA,CAAA,GAAA,IAAA,GAAA,KAAA;AACA,KAJA;AAKA,IAAA,YALA,0BAKA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,UAAA,EAAA,GAAA,QAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CAAA;AACA,UAAA,MAAA,GAAA;AACA,QAAA,SAAA,EAAA,EADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA,IAAA,CAAA,IAHA;AAIA,QAAA,OAAA,EAAA,IAAA,CAAA;AAJA,OAAA;AAOA,MAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,UAAA,CAAA,MAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,IAAA,CAAA,MAAA,CAAA,QAAA,CAAA,eAAA,EAAA;AAAA,UAAA,OAAA,EAAA,GAAA,CAAA;AAAA,SAAA;AACA,OAFA;AAGA;AAlBA;AApBA,CAAA","sourcesContent":["<template>\n    <div>\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <router-link to=\"/reviews\"><h4 class=\"page-title\"><i class=\"fa fa-arrow-left mr-3\"></i>Back to Reviews\n                </h4></router-link>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"card\" v-if=\"review\">\n                    <div class=\"card-body\">\n                        <div class=\"title-22 mb-4\">Write a review for Clinic {{ review.clinic.name }}</div>\n                        <div class=\"mb-5\">\n                            <label>Overall rating</label>\n                            <rating :maxStars=\"5\" v-model=\"rating\" :readOnly=\"isReadOnly\"/>\n                        </div>\n                        <div class=\"form-group\">\n                            <label label=\"note\">Your review</label>\n                            <p v-if=\"isReadOnly\">{{ review.content }}</p>\n                            <textarea v-else class=\"form-control hera-textarea\" rows=\"30\" id=\"note\" v-model=\"note\"\n                                      placeholder=\"Write your review here...\"></textarea>\n                        </div>\n                        <div v-if=\"! isReadOnly\" class=\"form-group\">\n                            <button class=\"btn btn-rounded btn-primary\">Submit Review</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n  import Rating from '../../components/Rating'\n  import rf from \"../../api/RequestFactory\";\n\n  export default {\n    components: {\n      Rating\n    },\n    data() {\n      return {\n        note: null,\n        rating: 0,\n        review: null\n      }\n    },\n    mounted() {\n      let self = this\n      let id = parseInt(this.$route.params.id)\n\n      rf.getRequest('UserRequest').getReview(id).then((res) => {\n        self.review = res.data\n        self.rating = res.data.star\n      })\n    },\n    methods: {\n      isReadOnly() {\n        let self = this\n        return self.rating != 0 ? true : false\n      },\n      submitReview() {\n        let self = this\n        let id = parseInt(this.$route.params.id)\n        let params = {\n          clinic_id: id,\n          title: '',\n          start: self.note,\n          content: self.rating\n        }\n\n        rf.getRequest('UserRequest').postReview(params).then((res) => {\n          self.$store.dispatch('app/showModal', {message: res.message})\n        })\n      }\n    }\n  }\n</script>\n\n<style>\n    .hera-textarea {\n        border: 0.5px solid #434343;\n        border-radius: 5px;\n    }\n</style>"],"sourceRoot":"src/views/clients"}]}