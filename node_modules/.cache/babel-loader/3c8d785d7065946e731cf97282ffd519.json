{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js!/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js!/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider-stg.hera.health/src/components/PaymentListing.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/components/PaymentListing.vue","mtime":1595075613773},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc2VhcmNoIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHJmIGZyb20gIi4uL2FwaS9SZXF1ZXN0RmFjdG9yeSI7CmltcG9ydCBQYWdpbmF0aW9uIGZyb20gIi4uL2NvbW1vbi9QYWdpbmF0aW9uIjsKaW1wb3J0IENvbnN0IGZyb20gIi4vLi4vdXRpbHMvY29uc3QiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgUGFnaW5hdGlvbjogUGFnaW5hdGlvbgogIH0sCiAgcHJvcHM6IFsnaXNfY2xpZW50J10sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIENvbnN0OiBDb25zdCwKICAgICAgcGF5bWVudHM6IFtdLAogICAgICBwYWdlOiBudWxsLAogICAgICBzb3J0Q3JlYXRlZDogJ2Rlc2MnLAogICAgICBjdXJyZW50UGFnZTogMCwKICAgICAgdG90YWxQYWdlOiAwLAogICAgICBpZDogbnVsbCwKICAgICAgc2VhcmNoOiB7CiAgICAgICAgaWQ6IG51bGwsCiAgICAgICAgZnJvbTogbnVsbCwKICAgICAgICB0bzogbnVsbAogICAgICB9CiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBzZWxmID0gdGhpczsKICAgIHNlbGYuZ2V0UGF5bWVudHMoc2VsZi5jdXJyZW50UGFnZSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRQYXltZW50czogZnVuY3Rpb24gZ2V0UGF5bWVudHMocGFnZSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHNlbGYgPSB0aGlzOwogICAgICBzZWxmLmN1cnJlbnRQYWdlID0gcGFnZTsKICAgICAgdmFyIHBhcmFtcyA9IHsKICAgICAgICBwYWdlOiBwYWdlLAogICAgICAgIHNvcnRfY3JlYXRlZDogc2VsZi5zb3J0Q3JlYXRlZCwKICAgICAgICBpZDogc2VsZi5zZWFyY2guaWQsCiAgICAgICAgZnJvbTogc2VsZi5zZWFyY2guZnJvbSwKICAgICAgICB0bzogc2VsZi5zZWFyY2gudG8KICAgICAgfTsKCiAgICAgIGlmIChzZWxmLmlzX2NsaWVudCkgewogICAgICAgIHBhcmFtcy50eXBlID0gJ2NsaWVudCc7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcGFyYW1zLnR5cGUgPSAnY2xpbmljJzsKICAgICAgfQoKICAgICAgcmYuZ2V0UmVxdWVzdCgnQWRtaW5SZXF1ZXN0JykuZ2V0UGF5bWVudHMocGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpcy5wYXltZW50cyA9IHJlcy5kYXRhLmRhdGFzOwogICAgICAgIF90aGlzLnRvdGFsUGFnZSA9IHJlcy5kYXRhLnRvdGFsX3BhZ2U7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["PaymentListing.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA,OAAA,EAAA,MAAA,uBAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AACA,OAAA,KAAA,MAAA,kBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GADA;AAIA,EAAA,KAAA,EAAA,CAAA,WAAA,CAJA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,IAAA,EAAA,IAHA;AAIA,MAAA,WAAA,EAAA,MAJA;AAKA,MAAA,WAAA,EAAA,CALA;AAMA,MAAA,SAAA,EAAA,CANA;AAOA,MAAA,EAAA,EAAA,IAPA;AAQA,MAAA,MAAA,EAAA;AACA,QAAA,EAAA,EAAA,IADA;AAEA,QAAA,IAAA,EAAA,IAFA;AAGA,QAAA,EAAA,EAAA;AAHA;AARA,KAAA;AAcA,GApBA;AAqBA,EAAA,OArBA,qBAqBA;AACA,QAAA,IAAA,GAAA,IAAA;AACA,IAAA,IAAA,CAAA,WAAA,CAAA,IAAA,CAAA,WAAA;AACA,GAxBA;AAyBA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,IADA,EACA;AAAA;;AACA,UAAA,IAAA,GAAA,IAAA;AACA,MAAA,IAAA,CAAA,WAAA,GAAA,IAAA;AACA,UAAA,MAAA,GAAA;AACA,QAAA,IAAA,EAAA,IADA;AAEA,QAAA,YAAA,EAAA,IAAA,CAAA,WAFA;AAGA,QAAA,EAAA,EAAA,IAAA,CAAA,MAAA,CAAA,EAHA;AAIA,QAAA,IAAA,EAAA,IAAA,CAAA,MAAA,CAAA,IAJA;AAKA,QAAA,EAAA,EAAA,IAAA,CAAA,MAAA,CAAA;AALA,OAAA;;AAOA,UAAA,IAAA,CAAA,SAAA,EAAA;AACA,QAAA,MAAA,CAAA,IAAA,GAAA,QAAA;AACA,OAFA,MAEA;AACA,QAAA,MAAA,CAAA,IAAA,GAAA,QAAA;AACA;;AAEA,MAAA,EAAA,CAAA,UAAA,CAAA,cAAA,EAAA,WAAA,CAAA,MAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,GAAA,CAAA,IAAA,CAAA,UAAA;AACA,OAHA;AAIA;AArBA;AAzBA,CAAA","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-sm-3\">\n        <input type=\"text\" class=\"form-control\" v-model=\"search.id\" placeholder=\"Hera ID\">\n      </div>\n      <div class=\"col-sm-3\">\n        <input type=\"date\" class=\"form-control\" v-model=\"search.from\" placeholder=\"From\">\n      </div>\n      <div class=\"col-sm-3\">\n        <input type=\"date\" class=\"form-control\" v-model=\"search.to\" placeholder=\"To\">\n      </div>\n      <div class=\"col-sm-3\">\n        <button class=\"btn btn-pink btn-block btn-rounded\" @click=\"getPayments\">Search</button>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-sm-6\"></div>\n      <div class=\"col-sm-6 text-right\">\n        <router-link to=\"/payments-add\" class=\"btn btn-dark\">Create Invoice</router-link>\n      </div>\n    </div>\n\n    <div class=\"row list-content\">\n      <div class=\"col-md-12\">\n        <div class=\"table-responsive\">\n          <table class=\"m-t-25 table table-striped custom-table\">\n            <thead>\n            <tr>\n              <th>Invoice No.</th>\n              <th>Order Date</th>\n              <th>Client</th>\n              <th>Clinic</th>\n              <th>Amount</th>\n              <th>Status</th>\n              <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr :key=\"payment.id\" v-for=\"payment in payments\">\n              <td>\n                <router-link :to=\"'/payments/' + payment.id\">\n                  <span class=\"text-blue desc-12\">{{ payment.id | convertInvoiceID }}</span>\n                </router-link>\n              </td>\n              <td>{{ payment.created_at | convertTimeSecondToDate }}</td>\n              <td>{{ payment.client.name }}</td>\n              <td>{{ payment.clinic.name }}</td>\n              <td>{{ payment.paid_amount }}</td>\n              <td>\n                <p :class=\"Const.STATUS.intToPaymentStatus(payment.status)\" class=\"alert appt--status\">\n                  {{Const.STATUS.paymentStatusString( payment.status )}}\n                </p>\n              </td>\n              <td>\n                <router-link :to=\"'/payments/' + payment.id\">\n                  <i class=\"fa fa-pencil\"></i> Edit\n                </router-link>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"page\">\n      <Pagination :current-page=\"currentPage\" :total-page=\"totalPage\"\n                  @pageData=\"getPayments\"></Pagination>\n    </div>\n  </div>\n</template>\n\n<script>\n  import rf from \"../api/RequestFactory\"\n  import Pagination from \"../common/Pagination\"\n  import Const from \"./../utils/const\"\n\n  export default {\n    components: {\n      Pagination,\n    },\n    props: ['is_client'],\n    data() {\n      return {\n        Const,\n        payments: [],\n        page: null,\n        sortCreated: 'desc',\n        currentPage: 0,\n        totalPage: 0,\n        id: null,\n        search: {\n          id: null,\n          from: null,\n          to: null\n        }\n      }\n    },\n    mounted() {\n      let self = this\n      self.getPayments(self.currentPage)\n    },\n    methods: {\n      getPayments(page) {\n        let self = this\n        self.currentPage = page;\n        let params = {\n          page: page,\n          sort_created: self.sortCreated,\n          id: self.search.id,\n          from: self.search.from,\n          to: self.search.to\n        }\n        if (self.is_client) {\n          params.type = 'client'\n        } else {\n          params.type = 'clinic'\n        }\n\n        rf.getRequest('AdminRequest').getPayments(params).then((res) => {\n          this.payments = res.data.datas;\n          this.totalPage = res.data.total_page;\n        });\n      }\n    }\n  }\n</script>\n"],"sourceRoot":"src/components"}]}