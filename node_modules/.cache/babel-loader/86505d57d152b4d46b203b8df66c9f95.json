{"remainingRequest":"/var/www/provider.voycare.com/node_modules/thread-loader/dist/cjs.js!/var/www/provider.voycare.com/node_modules/babel-loader/lib/index.js!/var/www/provider.voycare.com/node_modules/eslint-loader/index.js??ref--13-0!/var/www/provider.voycare.com/src/api/RequestFactory.js","dependencies":[{"path":"/var/www/provider.voycare.com/src/api/RequestFactory.js","mtime":1596630773539},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/thread-loader/dist/cjs.js","mtime":1596630678838},{"path":"/var/www/provider.voycare.com/node_modules/babel-loader/lib/index.js","mtime":1596630688999},{"path":"/var/www/provider.voycare.com/node_modules/eslint-loader/index.js","mtime":1596630671553}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvdmFyL3d3dy9wcm92aWRlci52b3ljYXJlLmNvbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi92YXIvd3d3L3Byb3ZpZGVyLnZveWNhcmUuY29tL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBVc2VyUmVxdWVzdCBmcm9tICIuL3JlcXVlc3QvVXNlclJlcXVlc3QiOwppbXBvcnQgdXRpbHMgZnJvbSAiLi4vdXRpbHMvdXRpbHMiOwppbXBvcnQgQ29tbW9uUmVxdWVzdCBmcm9tICIuL3JlcXVlc3QvQ29tbW9uUmVxdWVzdCI7CmltcG9ydCBBZG1pblJlcXVlc3QgZnJvbSAnLi9yZXF1ZXN0L0FkbWluUmVxdWVzdCc7CmltcG9ydCBDbGluaWNSZXF1ZXN0IGZyb20gJy4vcmVxdWVzdC9DbGluaWNSZXF1ZXN0JzsKaW1wb3J0IHsgYXBwSGVscGVyIH0gZnJvbSAiLi8uLi91dGlscy9hcHBIZWxwZXIiOwp2YXIgcmVxdWVzdE1hcCA9IHsKICBBZG1pblJlcXVlc3Q6IEFkbWluUmVxdWVzdCwKICBVc2VyUmVxdWVzdDogVXNlclJlcXVlc3QsCiAgQ29tbW9uUmVxdWVzdDogQ29tbW9uUmVxdWVzdCwKICBDbGluaWNSZXF1ZXN0OiBDbGluaWNSZXF1ZXN0Cn07CnZhciBpbnN0YW5jZXMgPSB7fTsKCnZhciBSZXF1ZXN0RmFjdG9yeSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gUmVxdWVzdEZhY3RvcnkoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmVxdWVzdEZhY3RvcnkpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFJlcXVlc3RGYWN0b3J5LCBudWxsLCBbewogICAga2V5OiAiZ2V0UmVxdWVzdCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0UmVxdWVzdChjbGFzc25hbWUpIHsKICAgICAgaWYgKHV0aWxzLmdldExvY2FsVXNlcigpICYmIGFwcEhlbHBlci5pc0NsaWVudCgpKSB7CiAgICAgICAgd2luZG93LmF4aW9zLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uWydBdXRob3JpemF0aW9uJ10gPSB1dGlscy5nZXRMb2NhbFVzZXIoKS50b2tlbjsKICAgICAgfQoKICAgICAgaWYgKHV0aWxzLmdldExvY2FsQWRtaW4oKSAmJiBhcHBIZWxwZXIuaXNBZG1pbigpKSB7CiAgICAgICAgd2luZG93LmF4aW9zLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uWydBdXRob3JpemF0aW9uJ10gPSB1dGlscy5nZXRMb2NhbEFkbWluKCkudG9rZW47CiAgICAgIH0KCiAgICAgIGlmICh1dGlscy5nZXRMb2NhbENsaW5pYygpICYmIGFwcEhlbHBlci5pc0NsaW5pYygpKSB7CiAgICAgICAgd2luZG93LmF4aW9zLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uWydBdXRob3JpemF0aW9uJ10gPSB1dGlscy5nZXRMb2NhbENsaW5pYygpLnRva2VuOwogICAgICB9CgogICAgICB3aW5kb3cuYXhpb3MuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bJ0NvbnRlbnQtVHlwZSddID0gJ2FwcGxpY2F0aW9uL2pzb24nOwogICAgICB2YXIgUmVxdWVzdENsYXNzID0gcmVxdWVzdE1hcFtjbGFzc25hbWVdOwoKICAgICAgaWYgKCFSZXF1ZXN0Q2xhc3MpIHsKICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgcmVxdWVzdCBjbGFzcyBuYW1lOiAnICsgY2xhc3NuYW1lKTsKICAgICAgfQoKICAgICAgdmFyIHJlcXVlc3RJbnN0YW5jZSA9IGluc3RhbmNlc1tjbGFzc25hbWVdOwoKICAgICAgaWYgKCFyZXF1ZXN0SW5zdGFuY2UpIHsKICAgICAgICByZXF1ZXN0SW5zdGFuY2UgPSBuZXcgUmVxdWVzdENsYXNzKCk7CiAgICAgICAgaW5zdGFuY2VzW2NsYXNzbmFtZV0gPSByZXF1ZXN0SW5zdGFuY2U7CiAgICAgIH0KCiAgICAgIHJldHVybiByZXF1ZXN0SW5zdGFuY2U7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gUmVxdWVzdEZhY3Rvcnk7Cn0oKTsKCmV4cG9ydCB7IFJlcXVlc3RGYWN0b3J5IGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["/var/www/provider.voycare.com/src/api/RequestFactory.js"],"names":["UserRequest","utils","CommonRequest","AdminRequest","ClinicRequest","appHelper","requestMap","instances","RequestFactory","classname","getLocalUser","isClient","window","axios","defaults","headers","common","token","getLocalAdmin","isAdmin","getLocalClinic","isClinic","RequestClass","Error","requestInstance"],"mappings":";;AAAA,OAAOA,WAAP,MAAwB,uBAAxB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,SAAQC,SAAR,QAAwB,sBAAxB;AAEA,IAAMC,UAAU,GAAG;AACjBH,EAAAA,YAAY,EAAZA,YADiB;AAEjBH,EAAAA,WAAW,EAAXA,WAFiB;AAGjBE,EAAAA,aAAa,EAAbA,aAHiB;AAIjBE,EAAAA,aAAa,EAAbA;AAJiB,CAAnB;AAMA,IAAMG,SAAS,GAAG,EAAlB;;IAGqBC,c;;;;;;;+BAEDC,S,EAAW;AAC3B,UAAIR,KAAK,CAACS,YAAN,MAAwBL,SAAS,CAACM,QAAV,EAA5B,EAAkD;AAChDC,QAAAA,MAAM,CAACC,KAAP,CAAaC,QAAb,CAAsBC,OAAtB,CAA8BC,MAA9B,CAAqC,eAArC,IAAwDf,KAAK,CAACS,YAAN,GAAqBO,KAA7E;AACD;;AACD,UAAIhB,KAAK,CAACiB,aAAN,MAAyBb,SAAS,CAACc,OAAV,EAA7B,EAAkD;AAChDP,QAAAA,MAAM,CAACC,KAAP,CAAaC,QAAb,CAAsBC,OAAtB,CAA8BC,MAA9B,CAAqC,eAArC,IAAwDf,KAAK,CAACiB,aAAN,GAAsBD,KAA9E;AACD;;AACD,UAAIhB,KAAK,CAACmB,cAAN,MAA0Bf,SAAS,CAACgB,QAAV,EAA9B,EAAoD;AAClDT,QAAAA,MAAM,CAACC,KAAP,CAAaC,QAAb,CAAsBC,OAAtB,CAA8BC,MAA9B,CAAqC,eAArC,IAAwDf,KAAK,CAACmB,cAAN,GAAuBH,KAA/E;AACD;;AAEDL,MAAAA,MAAM,CAACC,KAAP,CAAaC,QAAb,CAAsBC,OAAtB,CAA8BC,MAA9B,CAAqC,cAArC,IAAuD,kBAAvD;AACA,UAAIM,YAAY,GAAGhB,UAAU,CAACG,SAAD,CAA7B;;AACA,UAAI,CAACa,YAAL,EAAmB;AACjB,cAAM,IAAIC,KAAJ,CAAU,iCAAiCd,SAA3C,CAAN;AACD;;AAED,UAAIe,eAAe,GAAGjB,SAAS,CAACE,SAAD,CAA/B;;AACA,UAAI,CAACe,eAAL,EAAsB;AACpBA,QAAAA,eAAe,GAAG,IAAIF,YAAJ,EAAlB;AACAf,QAAAA,SAAS,CAACE,SAAD,CAAT,GAAuBe,eAAvB;AACD;;AACD,aAAOA,eAAP;AACD;;;;;;SAzBkBhB,c","sourcesContent":["import UserRequest from \"./request/UserRequest\";\nimport utils from \"../utils/utils\";\nimport CommonRequest from \"./request/CommonRequest\";\nimport AdminRequest from './request/AdminRequest'\nimport ClinicRequest from './request/ClinicRequest'\nimport {appHelper} from \"./../utils/appHelper\";\n\nconst requestMap = {\n  AdminRequest,\n  UserRequest,\n  CommonRequest,\n  ClinicRequest\n}\nconst instances = {};\n\n\nexport default class RequestFactory {\n\n  static getRequest(classname) {\n    if (utils.getLocalUser() && appHelper.isClient()) {\n      window.axios.defaults.headers.common['Authorization'] = utils.getLocalUser().token;\n    }\n    if (utils.getLocalAdmin() && appHelper.isAdmin()) {\n      window.axios.defaults.headers.common['Authorization'] = utils.getLocalAdmin().token;\n    }\n    if (utils.getLocalClinic() && appHelper.isClinic()) {\n      window.axios.defaults.headers.common['Authorization'] = utils.getLocalClinic().token;\n    }\n\n    window.axios.defaults.headers.common['Content-Type'] = 'application/json';\n    let RequestClass = requestMap[classname];\n    if (!RequestClass) {\n      throw new Error('Invalid request class name: ' + classname);\n    }\n\n    let requestInstance = instances[classname];\n    if (!requestInstance) {\n      requestInstance = new RequestClass();\n      instances[classname] = requestInstance;\n    }\n    return requestInstance;\n  }\n\n}\n"]}]}