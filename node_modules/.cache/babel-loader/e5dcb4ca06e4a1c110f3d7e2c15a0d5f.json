{"remainingRequest":"/var/www/provider.voycare.com/node_modules/thread-loader/dist/cjs.js!/var/www/provider.voycare.com/node_modules/babel-loader/lib/index.js!/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider.voycare.com/src/views/admin/ClinicDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider.voycare.com/src/views/admin/ClinicDetail.vue","mtime":1597939243772},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/thread-loader/dist/cjs.js","mtime":1596630678838},{"path":"/var/www/provider.voycare.com/node_modules/babel-loader/lib/index.js","mtime":1596630688999},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js","mtime":1596630687836}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgQ29uc3QgZnJvbSAiLi8uLi8uLi91dGlscy9jb25zdCI7CmltcG9ydCByZiBmcm9tICIuLi8uLi9hcGkvUmVxdWVzdEZhY3RvcnkiOwppbXBvcnQgQ2xpbmljRGV0YWlsRm9ybSBmcm9tICcuLi8uLi9jb21wb25lbnRzL0NsaW5pY0RldGFpbEZvcm0nOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQ2xpbmljRGV0YWlsRm9ybTogQ2xpbmljRGV0YWlsRm9ybQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIENvbnN0OiBDb25zdCwKICAgICAgaWQ6IG51bGwsCiAgICAgIGNsaW5pYzogbnVsbAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldERldGFpbDogZnVuY3Rpb24gZ2V0RGV0YWlsKCkgewogICAgICB2YXIgc2VsZiA9IHRoaXM7CiAgICAgIHJmLmdldFJlcXVlc3QoJ0FkbWluUmVxdWVzdCcpLmdldENsaW5pYyhzZWxmLmlkKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBzZWxmLmNsaW5pYyA9IHJlcy5kYXRhOwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgc2VsZiA9IHRoaXM7CiAgICBzZWxmLmlkID0gc2VsZi4kcm91dGUucGFyYW1zLmlkOwogICAgc2VsZi4kc3RvcmUuZGlzcGF0Y2goJ2dldENvdW50cmllcycpOwogICAgc2VsZi4kc3RvcmUuZGlzcGF0Y2goJ2dldEFwcG9pbnRtZW50TWV0YXMnKTsKCiAgICBpZiAoc2VsZi5pZCkgewogICAgICBzZWxmLmdldERldGFpbCgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["ClinicDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAoBA,SAAA,UAAA,QAAA,MAAA;AAEA,OAAA,KAAA,MAAA,qBAAA;AACA,OAAA,EAAA,MAAA,0BAAA;AACA,OAAA,gBAAA,MAAA,mCAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,gBAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,KADA;AAEA,MAAA,EAAA,EAAA,IAFA;AAGA,MAAA,MAAA,EAAA;AAHA,KAAA;AAKA,GAVA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,MAAA,EAAA,CAAA,UAAA,CAAA,cAAA,EAAA,SAAA,CAAA,IAAA,CAAA,EAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,IAAA,CAAA,MAAA,GAAA,GAAA,CAAA,IAAA;AACA,OAFA;AAGA;AANA,GAXA;AAoBA,EAAA,OApBA,qBAoBA;AACA,QAAA,IAAA,GAAA,IAAA;AACA,IAAA,IAAA,CAAA,EAAA,GAAA,IAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AAEA,IAAA,IAAA,CAAA,MAAA,CAAA,QAAA,CAAA,cAAA;AACA,IAAA,IAAA,CAAA,MAAA,CAAA,QAAA,CAAA,qBAAA;;AACA,QAAA,IAAA,CAAA,EAAA,EAAA;AACA,MAAA,IAAA,CAAA,SAAA;AACA;AACA;AA7BA,CAAA","sourcesContent":["<template>\n  <div class=\"\" id=\"clinic_profile\">\n    <div >\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <p class=\"title title-22\">Clinic Profile</p>\n        </div>\n        <div class=\"col-6 text-right\">\n          <router-link :to=\"'/clinics/' + id + '/edit'\" class=\"btn btn-round\" id=\"editProfileBtn\">\n            <i class=\"fa fa-plus mr-2\"></i>Edit Profile\n          </router-link>\n        </div>\n      </div>\n\n      <ClinicDetailForm :clinic=\"clinic\"></ClinicDetailForm>\n    </div>\n  </div>\n</template>\n\n<script>\n  import {mapGetters} from 'vuex'\n\n  import Const from \"./../../utils/const\"\n  import rf from \"../../api/RequestFactory\"\n  import ClinicDetailForm from '../../components/ClinicDetailForm'\n\n  export default {\n    components: {\n      ClinicDetailForm\n    },\n    data() {\n      return {\n        Const,\n        id: null,\n        clinic: null\n      }\n    },\n    methods: {\n      getDetail() {\n        let self = this\n        rf.getRequest('AdminRequest').getClinic(self.id).then((res) => {\n          self.clinic = res.data\n        });\n      }\n    },\n\n    mounted() {\n      let self = this\n      self.id = self.$route.params.id\n\n      self.$store.dispatch('getCountries')\n      self.$store.dispatch('getAppointmentMetas')\n      if(self.id) {\n        self.getDetail();\n      }\n    }\n  }\n</script>\n"],"sourceRoot":"src/views/admin"}]}