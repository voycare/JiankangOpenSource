{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js!/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js!/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider-stg.hera.health/src/views/clients/Messages.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/views/clients/Messages.vue","mtime":1593800348670},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHJmIGZyb20gIi4uLy4uL2FwaS9SZXF1ZXN0RmFjdG9yeSI7CmltcG9ydCBQYWdpbmF0aW9uIGZyb20gIi4uLy4uL2NvbW1vbi9QYWdpbmF0aW9uIjsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFBhZ2luYXRpb246IFBhZ2luYXRpb24KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtZXNzYWdlczogW10sCiAgICAgIHBhZ2U6IG51bGwsCiAgICAgIHNvcnRDcmVhdGVkOiAnZGVzYycsCiAgICAgIGN1cnJlbnRQYWdlOiAwLAogICAgICB0b3RhbFBhZ2U6IDAsCiAgICAgIHNlbGVjdGVkSWRzOiBbXSwKICAgICAgc2VsZWN0QWxsOiBbXSwKICAgICAga2V5OiAnJwogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgc2VsZiA9IHRoaXM7CiAgICBzZWxmLmdldE1lc3NhZ2VzKHNlbGYuY3VycmVudFBhZ2UpOwogIH0sCiAgbWV0aG9kczogewogICAgb25Ub2dnbGVTZWxlY3RBbGw6IGZ1bmN0aW9uIG9uVG9nZ2xlU2VsZWN0QWxsKCkgewogICAgICB2YXIgc2VsZiA9IHRoaXM7CgogICAgICBpZiAoIXNlbGYuc2VsZWN0QWxsLmxlbmd0aCkgewogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2VsZi5tZXNzYWdlcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgc2VsZi5zZWxlY3RBbGwucHVzaChzZWxmLm1lc3NhZ2VzW2ldLmlkKTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgc2VsZi5zZWxlY3RBbGwgPSBbXTsKICAgICAgfQoKICAgICAgc2VsZi5zZWxlY3RlZElkcyA9IHNlbGYuc2VsZWN0QWxsOwogICAgfSwKICAgIGdldE1lc3NhZ2VzOiBmdW5jdGlvbiBnZXRNZXNzYWdlcyhwYWdlKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgc2VsZiA9IHRoaXM7CiAgICAgIHNlbGYuY3VycmVudFBhZ2UgPSBwYWdlOwogICAgICB2YXIgcGFyYW1zID0gewogICAgICAgIHBhZ2U6IHBhZ2UsCiAgICAgICAgc29ydF9jcmVhdGVkOiBzZWxmLnNvcnRDcmVhdGVkLAogICAgICAgIGtleTogc2VsZi5rZXkKICAgICAgfTsKICAgICAgcmYuZ2V0UmVxdWVzdCgnVXNlclJlcXVlc3QnKS5nZXRNZXNzYWdlcyhwYXJhbXMpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzLm1lc3NhZ2VzID0gcmVzLmRhdGEuZGF0YXM7CiAgICAgICAgX3RoaXMudG90YWxQYWdlID0gcmVzLmRhdGEudG90YWxfcGFnZTsKICAgICAgfSk7CiAgICB9LAogICAgb25NYXJrUmVhZHM6IGZ1bmN0aW9uIG9uTWFya1JlYWRzKCkgewogICAgICB2YXIgc2VsZiA9IHRoaXM7CiAgICAgIHZhciBwYXJhbXMgPSB7CiAgICAgICAgbWVzc2FnZV9pZHM6IHNlbGYuc2VsZWN0ZWRJZHMKICAgICAgfTsKICAgICAgcmYuZ2V0UmVxdWVzdCgnVXNlclJlcXVlc3QnKS5wb3N0TWFya1JlYWRzKHBhcmFtcykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgc2VsZi5nZXRNZXNzYWdlcygpOwoKICAgICAgICBpZiAocmVzLm1lc3NhZ2UpIHsKICAgICAgICAgIHNlbGYuJHN0b3JlLmRpc3BhdGNoKCdhcHAvc2hvd01vZGFsJywgewogICAgICAgICAgICBtZXNzYWdlOiByZXMubWVzc2FnZQogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBvbk1hcmtVbnJlYWRzOiBmdW5jdGlvbiBvbk1hcmtVbnJlYWRzKCkgewogICAgICB2YXIgc2VsZiA9IHRoaXM7CiAgICAgIHZhciBwYXJhbXMgPSB7CiAgICAgICAgbWVzc2FnZV9pZHM6IHNlbGYuc2VsZWN0ZWRJZHMKICAgICAgfTsKICAgICAgcmYuZ2V0UmVxdWVzdCgnVXNlclJlcXVlc3QnKS5wb3N0TWFya1VuUmVhZHMocGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBzZWxmLmdldE1lc3NhZ2VzKCk7CgogICAgICAgIGlmIChyZXMubWVzc2FnZSkgewogICAgICAgICAgc2VsZi4kc3RvcmUuZGlzcGF0Y2goJ2FwcC9zaG93TW9kYWwnLCB7CiAgICAgICAgICAgIG1lc3NhZ2U6IHJlcy5tZXNzYWdlCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIG9uRGVsZXRlczogZnVuY3Rpb24gb25EZWxldGVzKCkgewogICAgICB2YXIgc2VsZiA9IHRoaXM7CiAgICAgIHZhciBwYXJhbXMgPSB7CiAgICAgICAgbWVzc2FnZV9pZHM6IHNlbGYuc2VsZWN0ZWRJZHMKICAgICAgfTsKICAgICAgcmYuZ2V0UmVxdWVzdCgnVXNlclJlcXVlc3QnKS5wb3N0TWVzc2FnZURlbGV0ZXMocGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBzZWxmLmdldE1lc3NhZ2VzKCk7CgogICAgICAgIGlmIChyZXMubWVzc2FnZSkgewogICAgICAgICAgc2VsZi4kc3RvcmUuZGlzcGF0Y2goJ2FwcC9zaG93TW9kYWwnLCB7CiAgICAgICAgICAgIG1lc3NhZ2U6IHJlcy5tZXNzYWdlCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Messages.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"content\">\n        <p class=\"title title-22 title-color \">Messages</p>\n\n        <div class=\"row list-content\">\n            <div class=\"col-md-12 m-t-25\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-6\">\n                                <ul class=\"list-unstyled list--actions\">\n                                    <li>\n                                        <a @click=\"getMessages\" href=\"#\">\n                                            <img src=\"/assets/img/icon-refresh.svg\">\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <a @click=\"onMarkReads\" href=\"#\">\n                                            <img src=\"/assets/img/icon-mail-box.svg\">\n                                            <span>Mark as Read</span>\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <a @click=\"onMarkUnreads\" href=\"#\">\n                                            <img src=\"/assets/img/icon-mail-box-o.svg\">\n                                            <span>Mark as Unread</span>\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <a @click=\"onDeletes\" href=\"#\">\n                                            <img src=\"/assets/img/icon-trash.svg\">\n                                        </a>\n                                    </li>\n                                </ul>\n                            </div>\n                            <div class=\"col-sm-6\">\n                                <input class=\"hera-control\" placeholder=\"Search\" type=\"text\" v-model=\"key\">\n                            </div>\n                        </div>\n                        <div class=\"table-responsive\">\n                            <table class=\"table custom-table\">\n                                <tbody>\n                                <tr>\n                                    <td><input @click=\"onToggleSelectAll\" type=\"checkbox\"></td>\n                                    <td colspan=\"3\">Select All</td>\n                                </tr>\n                                <tr :class=\"! message.read_at ? 'text-bold' : ''\" :key=\"message.id\"\n                                    v-for=\"message in messages\">\n                                    <td><input :value=\"message.id\" type=\"checkbox\" v-model=\"selectedIds\"></td>\n                                    <td>\n                                        <span v-if=\"message.from\">{{ message.from.name }}</span>\n                                    </td>\n                                    <td>{{ message.content }}</td>\n                                    <td>{{ message.created_at }}</td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"page\">\n            <Pagination :current-page=\"currentPage\" :total-page=\"totalPage\"\n                        @pageData=\"getMessages\"></Pagination>\n        </div>\n    </div>\n</template>\n\n<script>\n  import rf from \"../../api/RequestFactory\"\n  import Pagination from \"../../common/Pagination\"\n\n  export default {\n    components: {\n      Pagination\n    },\n    data() {\n      return {\n        messages: [],\n        page: null,\n        sortCreated: 'desc',\n        currentPage: 0,\n        totalPage: 0,\n        selectedIds: [],\n        selectAll: [],\n        key: ''\n      }\n    },\n    mounted() {\n      let self = this\n      self.getMessages(self.currentPage);\n    },\n    methods: {\n      onToggleSelectAll() {\n        let self = this\n        if (!self.selectAll.length) {\n          for (let i = 0; i < self.messages.length; i++) {\n            self.selectAll.push(self.messages[i].id)\n          }\n        } else {\n          self.selectAll = []\n        }\n\n        self.selectedIds = self.selectAll\n      },\n      getMessages(page) {\n        let self = this\n        self.currentPage = page;\n        let params = {\n          page: page,\n          sort_created: self.sortCreated,\n          key: self.key\n        }\n\n        rf.getRequest('UserRequest').getMessages(params).then((res) => {\n          this.messages = res.data.datas;\n          this.totalPage = res.data.total_page;\n        });\n      },\n\n      onMarkReads() {\n        let self = this\n        let params = {\n          message_ids: self.selectedIds\n        }\n\n        rf.getRequest('UserRequest').postMarkReads(params).then((res) => {\n          self.getMessages()\n\n          if (res.message) {\n            self.$store.dispatch('app/showModal', {message: res.message})\n          }\n        });\n      },\n\n      onMarkUnreads() {\n        let self = this\n        let params = {\n          message_ids: self.selectedIds\n        }\n\n        rf.getRequest('UserRequest').postMarkUnReads(params).then((res) => {\n          self.getMessages()\n\n          if (res.message) {\n            self.$store.dispatch('app/showModal', {message: res.message})\n          }\n        });\n      },\n\n      onDeletes() {\n        let self = this\n        let params = {\n          message_ids: self.selectedIds\n        }\n\n        rf.getRequest('UserRequest').postMessageDeletes(params).then((res) => {\n          self.getMessages()\n\n          if (res.message) {\n            self.$store.dispatch('app/showModal', {message: res.message})\n          }\n        });\n      }\n    }\n  }\n</script>\n\n<style>\n    .list--actions li {\n        display: inline;\n        color: #EB6271;\n        margin-right: 40px;\n        line-height: 40px;\n    }\n\n    .list--actions li a {\n        color: #EB6271;\n    }\n\n    .list--actions img {\n        position: relative;\n        top: -2px;\n        margin-right: 10px;\n    }\n</style>\n"],"sourceRoot":"src/views/clients"}]}