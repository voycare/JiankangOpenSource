{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js!/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js!/var/www/provider-stg.hera.health/node_modules/eslint-loader/index.js??ref--13-0!/var/www/provider-stg.hera.health/src/store.js","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/store.js","mtime":1591274631872},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHJmIGZyb20gIi4vYXBpL1JlcXVlc3RGYWN0b3J5IjsKaW1wb3J0IFZ1ZXggZnJvbSAndnVleCc7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IGFwcCBmcm9tICcuL3N0b3JlL2FwcCc7ClZ1ZS51c2UoVnVleCk7CmV4cG9ydCB2YXIgc3RvcmUgPSBuZXcgVnVleC5TdG9yZSh7CiAgbW9kdWxlczogewogICAgYXBwOiBhcHAKICB9LAogIHN0YXRlOiB7CiAgICBjb3VudHJpZXM6IFtdLAogICAgc2V0dGluZ3M6IFtdCiAgfSwKICBnZXR0ZXJzOiB7CiAgICBjb3VudHJpZXM6IGZ1bmN0aW9uIGNvdW50cmllcyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuY291bnRyaWVzOwogICAgfSwKICAgIHNldHRpbmdzOiBmdW5jdGlvbiBzZXR0aW5ncyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuc2V0dGluZ3M7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHVwZGF0ZVNldHRpbmdzOiBmdW5jdGlvbiB1cGRhdGVTZXR0aW5ncyhzdGF0ZSwgZGF0YSkgewogICAgICBzdGF0ZS5zZXR0aW5ncyA9IGRhdGE7CiAgICB9LAogICAgdXBkYXRlQ291bnRyaWVzOiBmdW5jdGlvbiB1cGRhdGVDb3VudHJpZXMoc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUuY291bnRyaWVzID0gZGF0YTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGdldENvdW50cmllczogZnVuY3Rpb24gZ2V0Q291bnRyaWVzKGNvbnRleHQpIHsKICAgICAgcmYuZ2V0UmVxdWVzdCgnQ291bnRyeVJlcXVlc3QnKS5nZXRDb3VudHJpZXMoKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICB2YXIgY291bnRyaWVzID0gcmVzLmRhdGEuZGF0YXM7CiAgICAgICAgY29udGV4dC5jb21taXQoInVwZGF0ZUNvdW50cmllcyIsIGNvdW50cmllcyk7CiAgICAgIH0pOwogICAgfSwKICAgIGdldFNldHRpbmdzOiBmdW5jdGlvbiBnZXRTZXR0aW5ncyhjb250ZXh0KSB7CiAgICAgIHJmLmdldFJlcXVlc3QoJ1VzZXJSZXF1ZXN0JykuZ2V0U2V0dGluZygpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHZhciBzZXR0aW5ncyA9IHJlcy5kYXRhOwogICAgICAgIGNvbnRleHQuY29tbWl0KCd1cGRhdGVTZXR0aW5ncycsIHNldHRpbmdzKTsKICAgICAgfSk7CiAgICB9LAogICAgaW5pdDogZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgdGhpcy5kaXNwYXRjaCgnZ2V0Q291bnRyaWVzJyk7CiAgICB9CiAgfQp9KTs="},{"version":3,"sources":["/var/www/provider-stg.hera.health/src/store.js"],"names":["rf","Vuex","Vue","app","use","store","Store","modules","state","countries","settings","getters","mutations","updateSettings","data","updateCountries","actions","getCountries","context","getRequest","then","res","datas","commit","getSettings","getSetting","init","dispatch"],"mappings":"AAAA,OAAOA,EAAP,MAAe,sBAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEAD,GAAG,CAACE,GAAJ,CAAQH,IAAR;AACA,OAAO,IAAMI,KAAK,GAAG,IAAIJ,IAAI,CAACK,KAAT,CAAe;AAClCC,EAAAA,OAAO,EAAE;AACPJ,IAAAA,GAAG,EAAHA;AADO,GADyB;AAIlCK,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,EADN;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAJ2B;AAQlCC,EAAAA,OAAO,EAAE;AACPF,IAAAA,SAAS,EAAE,mBAAAD,KAAK,EAAI;AAClB,aAAOA,KAAK,CAACC,SAAb;AACD,KAHM;AAIPC,IAAAA,QAAQ,EAAE,kBAAAF,KAAK,EAAI;AACjB,aAAOA,KAAK,CAACE,QAAb;AACD;AANM,GARyB;AAgBlCE,EAAAA,SAAS,EAAE;AACTC,IAAAA,cADS,0BACML,KADN,EACaM,IADb,EACmB;AAC1BN,MAAAA,KAAK,CAACE,QAAN,GAAiBI,IAAjB;AACD,KAHQ;AAITC,IAAAA,eAJS,2BAIOP,KAJP,EAIcM,IAJd,EAIoB;AAC3BN,MAAAA,KAAK,CAACC,SAAN,GAAkBK,IAAlB;AACD;AANQ,GAhBuB;AAwBlCE,EAAAA,OAAO,EAAE;AACPC,IAAAA,YADO,wBACMC,OADN,EACe;AACpBlB,MAAAA,EAAE,CAACmB,UAAH,CAAc,gBAAd,EAAgCF,YAAhC,GAA+CG,IAA/C,CAAoD,UAACC,GAAD,EAAS;AAC3D,YAAIZ,SAAS,GAAGY,GAAG,CAACP,IAAJ,CAASQ,KAAzB;AACAJ,QAAAA,OAAO,CAACK,MAAR,CAAe,iBAAf,EAAkCd,SAAlC;AACD,OAHD;AAID,KANM;AAOPe,IAAAA,WAPO,uBAOKN,OAPL,EAOc;AACnBlB,MAAAA,EAAE,CAACmB,UAAH,CAAc,aAAd,EAA6BM,UAA7B,GAA0CL,IAA1C,CAA+C,UAACC,GAAD,EAAS;AACtD,YAAIX,QAAQ,GAAGW,GAAG,CAACP,IAAnB;AAEAI,QAAAA,OAAO,CAACK,MAAR,CAAe,gBAAf,EAAiCb,QAAjC;AACD,OAJD;AAKD,KAbM;AAcPgB,IAAAA,IAdO,kBAcA;AACL,WAAKC,QAAL,CAAc,cAAd;AACD;AAhBM;AAxByB,CAAf,CAAd","sourcesContent":["import rf from \"./api/RequestFactory\";\nimport Vuex from 'vuex';\nimport Vue from 'vue'\nimport app from './store/app'\n\nVue.use(Vuex)\nexport const store = new Vuex.Store({\n  modules: {\n    app\n  },\n  state: {\n    countries: [],\n    settings: []\n  },\n  getters: {\n    countries: state => {\n      return state.countries\n    },\n    settings: state => {\n      return state.settings\n    }\n  },\n  mutations: {\n    updateSettings(state, data) {\n      state.settings = data\n    },\n    updateCountries(state, data) {\n      state.countries = data;\n    },\n  },\n  actions: {\n    getCountries(context) {\n      rf.getRequest('CountryRequest').getCountries().then((res) => {\n        let countries = res.data.datas;\n        context.commit(\"updateCountries\", countries);\n      });\n    },\n    getSettings(context) {\n      rf.getRequest('UserRequest').getSetting().then((res) => {\n        let settings = res.data\n\n        context.commit('updateSettings', settings)\n      })\n    },\n    init() {\n      this.dispatch('getCountries');\n    }\n  },\n});"]}]}