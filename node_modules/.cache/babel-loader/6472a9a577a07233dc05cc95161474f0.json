{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js!/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js!/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider-stg.hera.health/src/views/clients/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/views/clients/Dashboard.vue","mtime":1591654825589},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFVUSUxTIGZyb20gIi4vLi4vLi4vdXRpbHMvdXRpbHMiOwppbXBvcnQgcmYgZnJvbSAiLi8uLi8uLi9hcGkvUmVxdWVzdEZhY3RvcnkiOwppbXBvcnQgQXBwb2ludG1lbnRXaWRnZXQgZnJvbSAnLi8uLi8uLi9jb21wb25lbnRzL0FwcG9pbnRtZW50V2lkZ2V0JzsKaW1wb3J0IFRvcFdpZGdldCBmcm9tICcuLy4uLy4uL2NvbXBvbmVudHMvVG9wV2lkZ2V0JzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJDbGllbnREYXNoYm9hcmQiLAogIGNvbXBvbmVudHM6IHsKICAgIEFwcG9pbnRtZW50V2lkZ2V0OiBBcHBvaW50bWVudFdpZGdldCwKICAgIFRvcFdpZGdldDogVG9wV2lkZ2V0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYWNjZXB0X2FwcHRzOiBbXSwKICAgICAgYWNjZXB0X2FwcHRzX3RvdGFsOiAwLAogICAgICBwZW5kaW5nX2FwcHRzOiBbXSwKICAgICAgcGVuZGluZ19hcHB0c190b3RhbDogMCwKICAgICAgdG9wX2NsaW5pY3M6IFtdLAogICAgICB0b3BfZmF2b3VyaXRlczogW10KICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIHNlbGYgPSB0aGlzOyAvLyBDaGVjayBsb2dpbi4KCiAgICBpZiAoIVVUSUxTLmdldExvY2FsVXNlcigpKSB7CiAgICAgIHJldHVybiBzZWxmLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgcGF0aDogJy9sb2dpbicKICAgICAgfSk7CiAgICB9IC8vIEluaXQuCgoKICAgIHNlbGYuZ2V0QWNjZXB0QXBwdHMoKTsKICAgIHNlbGYuZ2V0UGVuZGluZ0FwcHRzKCk7CiAgICBzZWxmLmdldFRvcENsaW5pY3MoKTsKICAgIHNlbGYuZ2V0TXlGYXZvdXJpdGVzKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRBY2NlcHRBcHB0czogZnVuY3Rpb24gZ2V0QWNjZXB0QXBwdHMoKSB7CiAgICAgIHZhciBzZWxmID0gdGhpczsKICAgICAgdmFyIHBhcmFtcyA9IHsKICAgICAgICBsaW1pdDogNQogICAgICB9OwogICAgICBwYXJhbXMuc3RhdHVzX2luID0gJzEsNCc7CiAgICAgIHJmLmdldFJlcXVlc3QoJ1VzZXJSZXF1ZXN0JykuZ2V0QXBwb2ludG1lbnRzKHBhcmFtcykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgc2VsZi5hY2NlcHRfYXBwdHMgPSByZXMuZGF0YS5kYXRhczsKICAgICAgICBzZWxmLmFjY2VwdF9hcHB0c190b3RhbCA9IHJlcy5kYXRhLnRvdGFsX3BhZ2U7CiAgICAgIH0pOwogICAgfSwKICAgIGdldFBlbmRpbmdBcHB0czogZnVuY3Rpb24gZ2V0UGVuZGluZ0FwcHRzKCkgewogICAgICB2YXIgc2VsZiA9IHRoaXM7CiAgICAgIHZhciBwYXJhbXMgPSB7CiAgICAgICAgbGltaXQ6IDUKICAgICAgfTsKICAgICAgcGFyYW1zLnN0YXR1c19pbiA9ICcwLDInOwogICAgICByZi5nZXRSZXF1ZXN0KCdVc2VyUmVxdWVzdCcpLmdldEFwcG9pbnRtZW50cyhwYXJhbXMpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHNlbGYucGVuZGluZ19hcHB0cyA9IHJlcy5kYXRhLmRhdGFzOwogICAgICAgIHNlbGYucGVuZGluZ19hcHB0c190b3RhbCA9IHJlcy5kYXRhLnRvdGFsX3BhZ2U7CiAgICAgIH0pOwogICAgfSwKICAgIGdldFRvcENsaW5pY3M6IGZ1bmN0aW9uIGdldFRvcENsaW5pY3MoKSB7CiAgICAgIHZhciBzZWxmID0gdGhpczsKICAgICAgdmFyIHBhcmFtcyA9IHsKICAgICAgICBsaW1pdDogNQogICAgICB9OwogICAgICByZi5nZXRSZXF1ZXN0KCdVc2VyUmVxdWVzdCcpLmdldFRvcENsaW5pY3MocGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBzZWxmLnRvcF9jbGluaWNzID0gcmVzLmRhdGEuZGF0YXM7CiAgICAgIH0pOwogICAgfSwKICAgIGdldE15RmF2b3VyaXRlczogZnVuY3Rpb24gZ2V0TXlGYXZvdXJpdGVzKCkgewogICAgICB2YXIgc2VsZiA9IHRoaXM7CiAgICAgIHZhciBwYXJhbXMgPSB7CiAgICAgICAgbGltaXQ6IDUKICAgICAgfTsKICAgICAgcmYuZ2V0UmVxdWVzdCgnVXNlclJlcXVlc3QnKS5nZXRNeUZhdm91cml0ZXMocGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBzZWxmLnRvcF9mYXZvdXJpdGVzID0gcmVzLmRhdGEuZGF0YXM7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAiBA,OAAA,KAAA,MAAA,qBAAA;AACA,OAAA,EAAA,MAAA,4BAAA;AACA,OAAA,iBAAA,MAAA,sCAAA;AACA,OAAA,SAAA,MAAA,8BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,iBAAA,EAAA,iBADA;AAEA,IAAA,SAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,EADA;AAEA,MAAA,kBAAA,EAAA,CAFA;AAGA,MAAA,aAAA,EAAA,EAHA;AAIA,MAAA,mBAAA,EAAA,CAJA;AAKA,MAAA,WAAA,EAAA,EALA;AAMA,MAAA,cAAA,EAAA;AANA,KAAA;AAQA,GAfA;AAgBA,EAAA,OAhBA,qBAgBA;AACA,QAAA,IAAA,GAAA,IAAA,CADA,CAGA;;AACA,QAAA,CAAA,KAAA,CAAA,YAAA,EAAA,EAAA;AACA,aAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA,CAAA;AACA,KANA,CAQA;;;AACA,IAAA,IAAA,CAAA,cAAA;AACA,IAAA,IAAA,CAAA,eAAA;AACA,IAAA,IAAA,CAAA,aAAA;AACA,IAAA,IAAA,CAAA,eAAA;AACA,GA7BA;AA8BA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,UAAA,MAAA,GAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA;AACA,MAAA,MAAA,CAAA,SAAA,GAAA,KAAA;AAEA,MAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,eAAA,CAAA,MAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,IAAA,CAAA,YAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA;AACA,QAAA,IAAA,CAAA,kBAAA,GAAA,GAAA,CAAA,IAAA,CAAA,UAAA;AACA,OAHA;AAIA,KAVA;AAWA,IAAA,eAXA,6BAWA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,UAAA,MAAA,GAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA;AACA,MAAA,MAAA,CAAA,SAAA,GAAA,KAAA;AAEA,MAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,eAAA,CAAA,MAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,IAAA,CAAA,aAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA;AACA,QAAA,IAAA,CAAA,mBAAA,GAAA,GAAA,CAAA,IAAA,CAAA,UAAA;AACA,OAHA;AAIA,KApBA;AAqBA,IAAA,aArBA,2BAqBA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,UAAA,MAAA,GAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA;AAEA,MAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,aAAA,CAAA,MAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,IAAA,CAAA,WAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA;AACA,OAFA;AAGA,KA5BA;AA6BA,IAAA,eA7BA,6BA6BA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,UAAA,MAAA,GAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA;AAEA,MAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,eAAA,CAAA,MAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,IAAA,CAAA,cAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA;AACA,OAFA;AAGA;AApCA;AA9BA,CAAA","sourcesContent":["<template>\n    <div>\n        <div class=\"row\">\n            <div class=\"col-12 col-md-6 col-lg-8 col-xl-8\">\n                <appointment-widget :title=\"'Appointment'\" :appts=\"accept_appts\" :disableView=\"true\"></appointment-widget>\n                <appointment-widget :title=\"'My Site Visits'\" :appts=\"pending_appts\" :disableView=\"true\"></appointment-widget>\n            </div>\n            <div class=\"col-12 col-md-6 col-lg-4 col-xl-4\">\n                <top-widget :title=\"'Top Providers'\" :clinics=\"top_clinics\"></top-widget>\n                <top-widget :title=\"'My Favourites'\" :clinic=\"top_favourites\"></top-widget>\n            </div>\n        </div>\n    </div>\n\n</template>\n\n<script>\n  import UTILS from \"./../../utils/utils\"\n  import rf from \"./../../api/RequestFactory\"\n  import AppointmentWidget from './../../components/AppointmentWidget'\n  import TopWidget from './../../components/TopWidget'\n\n  export default {\n    name: \"ClientDashboard\",\n    components: {\n      AppointmentWidget,\n      TopWidget\n    },\n    data() {\n      return {\n        accept_appts: [],\n        accept_appts_total: 0,\n        pending_appts: [],\n        pending_appts_total: 0,\n        top_clinics: [],\n        top_favourites: [],\n      }\n    },\n    mounted() {\n      let self = this\n\n      // Check login.\n      if (!UTILS.getLocalUser()) {\n        return self.$router.push({path: '/login'})\n      }\n\n      // Init.\n      self.getAcceptAppts()\n      self.getPendingAppts()\n      self.getTopClinics()\n      self.getMyFavourites()\n    },\n    methods: {\n      getAcceptAppts() {\n        let self = this\n        let params = {limit: 5}\n        params.status_in = '1,4'\n\n        rf.getRequest('UserRequest').getAppointments(params).then((res) => {\n          self.accept_appts = res.data.datas\n          self.accept_appts_total = res.data.total_page\n        });\n      },\n      getPendingAppts() {\n        let self = this\n        let params = {limit: 5}\n        params.status_in = '0,2'\n\n        rf.getRequest('UserRequest').getAppointments(params).then((res) => {\n          self.pending_appts = res.data.datas\n          self.pending_appts_total = res.data.total_page\n        });\n      },\n      getTopClinics() {\n        let self = this\n        let params = {limit: 5}\n\n        rf.getRequest('UserRequest').getTopClinics(params).then((res) => {\n          self.top_clinics = res.data.datas\n        })\n      },\n      getMyFavourites() {\n        let self = this\n        let params = {limit: 5}\n\n        rf.getRequest('UserRequest').getMyFavourites(params).then((res) => {\n          self.top_favourites = res.data.datas\n        })\n      }\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/views/clients"}]}