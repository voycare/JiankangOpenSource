{"remainingRequest":"/var/www/provider.voycare.com/node_modules/thread-loader/dist/cjs.js!/var/www/provider.voycare.com/node_modules/babel-loader/lib/index.js!/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider.voycare.com/src/views/clinics/ClinicAppoinments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider.voycare.com/src/views/clinics/ClinicAppoinments.vue","mtime":1597188728165},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/thread-loader/dist/cjs.js","mtime":1596630678838},{"path":"/var/www/provider.voycare.com/node_modules/babel-loader/lib/index.js","mtime":1596630688999},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js","mtime":1596630687836}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5yZWR1Y2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi92YXIvd3d3L3Byb3ZpZGVyLnZveWNhcmUuY29tL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgQ29uc3QgZnJvbSAiLi8uLi8uLi91dGlscy9jb25zdCI7CmltcG9ydCByZiBmcm9tICIuLi8uLi9hcGkvUmVxdWVzdEZhY3RvcnkiOwppbXBvcnQgUGFnaW5hdGlvbiBmcm9tICIuLi8uLi9jb21tb24vUGFnaW5hdGlvbiI7CmltcG9ydCBDbGluaWNBcHBvaW50bWVudExpc3RpbmcgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9DbGluaWNBcHBvaW50bWVudExpc3RpbmcnOwppbXBvcnQgQWRtaW5BcHBvaW50bWVudEZpbHRlciBmcm9tICcuLi8uLi9jb21wb25lbnRzL0FkbWluQXBwb2ludG1lbnRGaWx0ZXInOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkNsaW5pY0FwcG9pbm1lbnRzIiwKICBjb21wb25lbnRzOiB7CiAgICBQYWdpbmF0aW9uOiBQYWdpbmF0aW9uLAogICAgQ2xpbmljQXBwb2ludG1lbnRMaXN0aW5nOiBDbGluaWNBcHBvaW50bWVudExpc3RpbmcsCiAgICBBZG1pbkFwcG9pbnRtZW50RmlsdGVyOiBBZG1pbkFwcG9pbnRtZW50RmlsdGVyCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgQ29uc3Q6IENvbnN0LAogICAgICBjb3VudHJ5OiAnJywKICAgICAgYXBwdHM6IFtdLAogICAgICBjdXJyZW50UGFnZTogMSwKICAgICAgc29ydENyZWF0ZWQ6ICdkZXNjJywKICAgICAgbmFtZTogJycsCiAgICAgIHRvdGFsUGFnZTogMSwKICAgICAgZmlsdGVyOiB7CiAgICAgICAgc3RhdHVzX2lkczogW10sCiAgICAgICAgdHlwZV9pZHM6IFtdCiAgICAgIH0KICAgIH07CiAgfSwKICB3YXRjaDogewogICAgY291bnRyeTogZnVuY3Rpb24gY291bnRyeSgpIHsKICAgICAgdGhpcy5nZXRMaXN0aW5nKCk7CiAgICB9LAogICAgc29ydENyZWF0ZWQ6IGZ1bmN0aW9uIHNvcnRDcmVhdGVkKCkgewogICAgICB0aGlzLmdldExpc3RpbmcoMSk7CiAgICB9CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwR2V0dGVycyhbJ2NvdW50cmllcyddKSksCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBzZWxmID0gdGhpczsKICAgIHNlbGYuJHN0b3JlLmRpc3BhdGNoKCdnZXRDb3VudHJpZXMnKTsKICAgIHNlbGYuZ2V0TGlzdGluZyhzZWxmLmN1cnJlbnRQYWdlKTsKICAgIHZhciBmaWx0ZXJlZCA9IE9iamVjdC5rZXlzKHNlbGYuJHJvdXRlLnF1ZXJ5KS5maWx0ZXIoZnVuY3Rpb24gKGtleSkgewogICAgICByZXR1cm4gWydzdGF0dXNfaWRzJywgJ3R5cGVfaWRzJ10uaW5jbHVkZXMoa2V5KTsKICAgIH0pLnJlZHVjZShmdW5jdGlvbiAob2JqLCBrZXkpIHsKICAgICAgb2JqW2tleV0gPSBzZWxmLiRyb3V0ZS5xdWVyeVtrZXldOwogICAgICByZXR1cm4gb2JqOwogICAgfSwge30pOwogICAgc2VsZi5maWx0ZXIgPSBmaWx0ZXJlZDsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldExpc3Rpbmc6IGZ1bmN0aW9uIGdldExpc3RpbmcocGFnZSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHNlbGYgPSB0aGlzOwogICAgICBzZWxmLmN1cnJlbnRQYWdlID0gcGFnZTsKICAgICAgdmFyIHBhcmFtcyA9IHsKICAgICAgICBwYWdlOiBwYWdlLAogICAgICAgIHNvcnRfY3JlYXRlZDogdGhpcy5zb3J0Q3JlYXRlZCwKICAgICAgICBjb3VudHJ5OiB0aGlzLmNvdW50cnkKICAgICAgfTsKICAgICAgcmYuZ2V0UmVxdWVzdCgnQ2xpbmljUmVxdWVzdCcpLmdldEFwcG9pbnRtZW50cyhwYXJhbXMpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzLmFwcHRzID0gcmVzLmRhdGEuZGF0YXM7CiAgICAgICAgX3RoaXMudG90YWxQYWdlID0gcmVzLmRhdGEudG90YWxfcGFnZTsKICAgICAgfSk7CiAgICB9LAogICAgb3JkZXJDcmVhdGVkOiBmdW5jdGlvbiBvcmRlckNyZWF0ZWQoKSB7CiAgICAgIGlmICh0aGlzLnNvcnRDcmVhdGVkID09PSAnZGVzYycpIHsKICAgICAgICB0aGlzLnNvcnRDcmVhdGVkID0gJ2FzYyc7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBpZiAodGhpcy5zb3J0Q3JlYXRlZCA9PT0gJ2FzYycpIHsKICAgICAgICB0aGlzLnNvcnRDcmVhdGVkID0gJ2Rlc2MnOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["ClinicAppoinments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAeA,SAAA,UAAA,QAAA,MAAA;AAEA,OAAA,KAAA,MAAA,qBAAA;AACA,OAAA,EAAA,MAAA,0BAAA;AACA,OAAA,UAAA,MAAA,yBAAA;AACA,OAAA,wBAAA,MAAA,2CAAA;AACA,OAAA,sBAAA,MAAA,yCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,mBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,wBAAA,EAAA,wBAFA;AAGA,IAAA,sBAAA,EAAA;AAHA,GAFA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAIA,MAAA,WAAA,EAAA,CAJA;AAKA,MAAA,WAAA,EAAA,MALA;AAMA,MAAA,IAAA,EAAA,EANA;AAOA,MAAA,SAAA,EAAA,CAPA;AAQA,MAAA,MAAA,EAAA;AACA,QAAA,UAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA;AAFA;AARA,KAAA;AAaA,GArBA;AAsBA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA,mBAAA;AACA,WAAA,UAAA;AACA,KAHA;AAIA,IAAA,WAAA,EAAA,uBAAA;AACA,WAAA,UAAA,CAAA,CAAA;AACA;AANA,GAtBA;AA8BA,EAAA,QAAA,oBACA,UAAA,CAAA,CAAA,WAAA,CAAA,CADA,CA9BA;AAiCA,EAAA,OAjCA,qBAiCA;AACA,QAAA,IAAA,GAAA,IAAA;AAEA,IAAA,IAAA,CAAA,MAAA,CAAA,QAAA,CAAA,cAAA;AACA,IAAA,IAAA,CAAA,UAAA,CAAA,IAAA,CAAA,WAAA;AACA,QAAA,QAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EACA,MADA,CACA,UAAA,GAAA;AAAA,aAAA,CAAA,YAAA,EAAA,UAAA,EAAA,QAAA,CAAA,GAAA,CAAA;AAAA,KADA,EAEA,MAFA,CAEA,UAAA,GAAA,EAAA,GAAA,EAAA;AACA,MAAA,GAAA,CAAA,GAAA,CAAA,GAAA,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,aAAA,GAAA;AACA,KALA,EAKA,EALA,CAAA;AAMA,IAAA,IAAA,CAAA,MAAA,GAAA,QAAA;AACA,GA7CA;AA8CA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,IADA,EACA;AAAA;;AACA,UAAA,IAAA,GAAA,IAAA;AACA,MAAA,IAAA,CAAA,WAAA,GAAA,IAAA;AACA,UAAA,MAAA,GAAA;AACA,QAAA,IAAA,EAAA,IADA;AAEA,QAAA,YAAA,EAAA,KAAA,WAFA;AAGA,QAAA,OAAA,EAAA,KAAA;AAHA,OAAA;AAKA,MAAA,EAAA,CAAA,UAAA,CAAA,eAAA,EAAA,eAAA,CAAA,MAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,GAAA,CAAA,IAAA,CAAA,UAAA;AACA,OAHA;AAIA,KAbA;AAcA,IAAA,YAdA,0BAcA;AACA,UAAA,KAAA,WAAA,KAAA,MAAA,EAAA;AACA,aAAA,WAAA,GAAA,KAAA;AACA;AACA;;AACA,UAAA,KAAA,WAAA,KAAA,KAAA,EAAA;AACA,aAAA,WAAA,GAAA,MAAA;AACA;AACA;AAtBA;AA9CA,CAAA","sourcesContent":["<template>\n  <div>\n    <p class=\"title title-22\">Appointments</p>\n\n    <AdminAppointmentFilter></AdminAppointmentFilter>\n    <ClinicAppointmentListing :appts=\"appts\" @orderCreated=\"orderCreated\"></ClinicAppointmentListing>\n\n    <div class=\"page\">\n      <Pagination :current-page=\"currentPage\" :total-page=\"totalPage\"\n                  @pageData=\"getListing\"></Pagination>\n    </div>\n  </div>\n</template>\n\n<script>\n  import {mapGetters} from 'vuex'\n\n  import Const from \"./../../utils/const\"\n  import rf from \"../../api/RequestFactory\"\n  import Pagination from \"../../common/Pagination\"\n  import ClinicAppointmentListing from '../../components/ClinicAppointmentListing'\n  import AdminAppointmentFilter from '../../components/AdminAppointmentFilter'\n\n  export default {\n    name: \"ClinicAppoinments\",\n    components: {\n      Pagination,\n      ClinicAppointmentListing,\n      AdminAppointmentFilter\n    },\n    data() {\n      return {\n        Const,\n        country: '',\n        appts: [],\n        currentPage: 1,\n        sortCreated: 'desc',\n        name: '',\n        totalPage: 1,\n        filter: {\n          status_ids: [],\n          type_ids: []\n        }\n      }\n    },\n    watch: {\n      country: function () {\n        this.getListing();\n      },\n      sortCreated: function () {\n        this.getListing(1);\n      }\n    },\n    computed: {\n      ...mapGetters(['countries'])\n    },\n    mounted() {\n      let self = this\n\n      self.$store.dispatch('getCountries')\n      self.getListing(self.currentPage)\n      const filtered = Object.keys(self.$route.query)\n        .filter(key => ['status_ids', 'type_ids'].includes(key))\n        .reduce((obj, key) => {\n          obj[key] = self.$route.query[key]\n          return obj\n        }, {})\n      self.filter = filtered\n    },\n    methods: {\n      getListing(page) {\n        let self = this\n        self.currentPage = page;\n        let params = {\n          page: page,\n          sort_created: this.sortCreated,\n          country: this.country\n        };\n        rf.getRequest('ClinicRequest').getAppointments(params).then((res) => {\n          this.appts = res.data.datas;\n          this.totalPage = res.data.total_page;\n        });\n      },\n      orderCreated() {\n        if (this.sortCreated === 'desc') {\n          this.sortCreated = 'asc';\n          return\n        }\n        if (this.sortCreated === 'asc') {\n          this.sortCreated = 'desc';\n        }\n      },\n    },\n  }\n</script>\n"],"sourceRoot":"src/views/clinics"}]}