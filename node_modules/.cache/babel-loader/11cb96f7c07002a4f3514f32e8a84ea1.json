{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js!/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js!/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider-stg.hera.health/src/views/admin/AdminStatements.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/views/admin/AdminStatements.vue","mtime":1595242105253},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc2VhcmNoIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IENvbnN0IGZyb20gIi4vLi4vLi4vdXRpbHMvY29uc3QiOwppbXBvcnQgcmYgZnJvbSAiLi4vLi4vYXBpL1JlcXVlc3RGYWN0b3J5IjsKaW1wb3J0IFBhZ2luYXRpb24gZnJvbSAiLi4vLi4vY29tbW9uL1BhZ2luYXRpb24iOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgUGFnaW5hdGlvbjogUGFnaW5hdGlvbgogIH0sCiAgcHJvcHM6IFsnaXNfY2xpZW50J10sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIENvbnN0OiBDb25zdCwKICAgICAgc3RhdGVtZW50czogW10sCiAgICAgIHBhZ2U6IG51bGwsCiAgICAgIHNvcnRDcmVhdGVkOiAnZGVzYycsCiAgICAgIGN1cnJlbnRQYWdlOiAwLAogICAgICB0b3RhbFBhZ2U6IDAsCiAgICAgIGlkOiBudWxsLAogICAgICBzZWFyY2g6IHsKICAgICAgICBpZDogbnVsbCwKICAgICAgICBmcm9tOiBudWxsLAogICAgICAgIHRvOiBudWxsCiAgICAgIH0KICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIHNlbGYgPSB0aGlzOwogICAgc2VsZi5nZXRMaXN0aW5nKHNlbGYuY3VycmVudFBhZ2UpOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0TGlzdGluZzogZnVuY3Rpb24gZ2V0TGlzdGluZyhwYWdlKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgc2VsZiA9IHRoaXM7CiAgICAgIHNlbGYuY3VycmVudFBhZ2UgPSBwYWdlOwogICAgICB2YXIgcGFyYW1zID0gewogICAgICAgIHBhZ2U6IHBhZ2UsCiAgICAgICAgc29ydF9jcmVhdGVkOiBzZWxmLnNvcnRDcmVhdGVkLAogICAgICAgIGlkOiBzZWxmLnNlYXJjaC5pZCwKICAgICAgICBmcm9tOiBzZWxmLnNlYXJjaC5mcm9tLAogICAgICAgIHRvOiBzZWxmLnNlYXJjaC50bwogICAgICB9OwoKICAgICAgaWYgKHNlbGYuaXNfY2xpZW50KSB7CiAgICAgICAgcGFyYW1zLnR5cGUgPSAnY2xpZW50JzsKICAgICAgfSBlbHNlIHsKICAgICAgICBwYXJhbXMudHlwZSA9ICdjbGluaWMnOwogICAgICB9CgogICAgICByZi5nZXRSZXF1ZXN0KCdBZG1pblJlcXVlc3QnKS5nZXRTdGF0ZW1lbnRzKHBhcmFtcykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMuc3RhdGVtZW50cyA9IHJlcy5kYXRhLmRhdGFzOwogICAgICAgIF90aGlzLnRvdGFsUGFnZSA9IHJlcy5kYXRhLnRvdGFsX3BhZ2U7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["AdminStatements.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA,OAAA,KAAA,MAAA,qBAAA;AACA,OAAA,EAAA,MAAA,0BAAA;AACA,OAAA,UAAA,MAAA,yBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GADA;AAIA,EAAA,KAAA,EAAA,CAAA,WAAA,CAJA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,KADA;AAEA,MAAA,UAAA,EAAA,EAFA;AAGA,MAAA,IAAA,EAAA,IAHA;AAIA,MAAA,WAAA,EAAA,MAJA;AAKA,MAAA,WAAA,EAAA,CALA;AAMA,MAAA,SAAA,EAAA,CANA;AAOA,MAAA,EAAA,EAAA,IAPA;AAQA,MAAA,MAAA,EAAA;AACA,QAAA,EAAA,EAAA,IADA;AAEA,QAAA,IAAA,EAAA,IAFA;AAGA,QAAA,EAAA,EAAA;AAHA;AARA,KAAA;AAcA,GApBA;AAqBA,EAAA,OArBA,qBAqBA;AACA,QAAA,IAAA,GAAA,IAAA;AACA,IAAA,IAAA,CAAA,UAAA,CAAA,IAAA,CAAA,WAAA;AACA,GAxBA;AAyBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,IADA,EACA;AAAA;;AACA,UAAA,IAAA,GAAA,IAAA;AACA,MAAA,IAAA,CAAA,WAAA,GAAA,IAAA;AACA,UAAA,MAAA,GAAA;AACA,QAAA,IAAA,EAAA,IADA;AAEA,QAAA,YAAA,EAAA,IAAA,CAAA,WAFA;AAGA,QAAA,EAAA,EAAA,IAAA,CAAA,MAAA,CAAA,EAHA;AAIA,QAAA,IAAA,EAAA,IAAA,CAAA,MAAA,CAAA,IAJA;AAKA,QAAA,EAAA,EAAA,IAAA,CAAA,MAAA,CAAA;AALA,OAAA;;AAOA,UAAA,IAAA,CAAA,SAAA,EAAA;AACA,QAAA,MAAA,CAAA,IAAA,GAAA,QAAA;AACA,OAFA,MAEA;AACA,QAAA,MAAA,CAAA,IAAA,GAAA,QAAA;AACA;;AAEA,MAAA,EAAA,CAAA,UAAA,CAAA,cAAA,EAAA,aAAA,CAAA,MAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,UAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,GAAA,CAAA,IAAA,CAAA,UAAA;AACA,OAHA;AAIA;AArBA;AAzBA,CAAA","sourcesContent":["<template>\n  <div class=\"content\">\n    <p class=\"title title-22 title-color\">Payments</p>\n\n    <div class=\"row\">\n      <div class=\"col-sm-3\">\n        <input type=\"text\" class=\"form-control\" v-model=\"search.id\" placeholder=\"Clinic\">\n      </div>\n      <div class=\"col-sm-3\">\n        <input type=\"date\" class=\"form-control\" v-model=\"search.from\" placeholder=\"From\">\n      </div>\n      <div class=\"col-sm-3\">\n        <input type=\"date\" class=\"form-control\" v-model=\"search.to\" placeholder=\"To\">\n      </div>\n      <div class=\"col-sm-3\">\n        <button class=\"btn btn-pink btn-block btn-rounded\" @click=\"getListing\">Search</button>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-sm-6\"></div>\n      <div class=\"col-sm-6 text-right\">\n        <router-link to=\"/statements-add\" class=\"btn btn-dark\">Create Statement</router-link>\n      </div>\n    </div>\n\n    <div class=\"row list-content\">\n      <div class=\"col-md-12\">\n        <div class=\"table-responsive\">\n          <table class=\"m-t-25 table table-striped custom-table\">\n            <thead>\n            <tr>\n              <th>Statement No.</th>\n              <th>Clinic</th>\n              <th>Period</th>\n              <th>Amount</th>\n              <th>Status</th>\n              <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr :key=\"statement.id\" v-for=\"statement in statements\">\n              <td>\n                <router-link :to=\"'/statements/' + statement.id\">\n                  <span class=\"text-blue desc-12\">{{ statement.id | convertHeraID }}</span>\n                </router-link>\n              </td>\n              <td>{{ statement.to.name }}</td>\n              <td>{{ statement.sale_period | convertTimeSecondToDate }}</td>\n              <td>{{ statement.net }}</td>\n              <td>\n                <p :class=\"Const.STATUS.intToPaymentStatus(statement.status)\" class=\"alert appt--status\">\n                  {{Const.STATUS.paymentStatusString( statement.status )}}\n                </p>\n              </td>\n              <td>\n                <router-link :to=\"'/statements/' + statement.id\">\n                  <i class=\"fa fa-pencil\"></i> Edit\n                </router-link>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"page\">\n      <Pagination :current-page=\"currentPage\" :total-page=\"totalPage\"\n                  @pageData=\"getListing\"></Pagination>\n    </div>\n  </div>\n</template>\n\n<script>\n  import Const from \"./../../utils/const\"\n  import rf from \"../../api/RequestFactory\"\n  import Pagination from \"../../common/Pagination\"\n\n  export default {\n    components: {\n      Pagination\n    },\n    props: ['is_client'],\n    data() {\n      return {\n        Const,\n        statements: [],\n        page: null,\n        sortCreated: 'desc',\n        currentPage: 0,\n        totalPage: 0,\n        id: null,\n        search: {\n          id: null,\n          from: null,\n          to: null\n        }\n      }\n    },\n    mounted() {\n      let self = this\n      self.getListing(self.currentPage)\n    },\n    methods: {\n      getListing(page) {\n        let self = this\n        self.currentPage = page;\n        let params = {\n          page: page,\n          sort_created: self.sortCreated,\n          id: self.search.id,\n          from: self.search.from,\n          to: self.search.to\n        }\n        if (self.is_client) {\n          params.type = 'client'\n        } else {\n          params.type = 'clinic'\n        }\n\n        rf.getRequest('AdminRequest').getStatements(params).then((res) => {\n          this.statements = res.data.datas;\n          this.totalPage = res.data.total_page;\n        });\n      }\n    }\n  }\n</script>\n\n<style></style>\n"],"sourceRoot":"src/views/admin"}]}