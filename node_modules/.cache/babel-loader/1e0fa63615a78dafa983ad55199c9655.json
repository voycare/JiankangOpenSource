{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js!/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js!/var/www/provider-stg.hera.health/node_modules/eslint-loader/index.js??ref--13-0!/var/www/provider-stg.hera.health/src/api/RequestFactory.js","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/api/RequestFactory.js","mtime":1596062465192},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvdmFyL3d3dy9wcm92aWRlci1zdGcuaGVyYS5oZWFsdGgvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvdmFyL3d3dy9wcm92aWRlci1zdGcuaGVyYS5oZWFsdGgvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IFVzZXJSZXF1ZXN0IGZyb20gIi4vcmVxdWVzdC9Vc2VyUmVxdWVzdCI7CmltcG9ydCB1dGlscyBmcm9tICIuLi91dGlscy91dGlscyI7CmltcG9ydCBDb21tb25SZXF1ZXN0IGZyb20gIi4vcmVxdWVzdC9Db21tb25SZXF1ZXN0IjsKaW1wb3J0IEFkbWluUmVxdWVzdCBmcm9tICcuL3JlcXVlc3QvQWRtaW5SZXF1ZXN0JzsKaW1wb3J0IENsaW5pY1JlcXVlc3QgZnJvbSAnLi9yZXF1ZXN0L0NsaW5pY1JlcXVlc3QnOwppbXBvcnQgeyBhcHBIZWxwZXIgfSBmcm9tICIuLy4uL3V0aWxzL2FwcEhlbHBlciI7CnZhciByZXF1ZXN0TWFwID0gewogIEFkbWluUmVxdWVzdDogQWRtaW5SZXF1ZXN0LAogIFVzZXJSZXF1ZXN0OiBVc2VyUmVxdWVzdCwKICBDb21tb25SZXF1ZXN0OiBDb21tb25SZXF1ZXN0LAogIENsaW5pY1JlcXVlc3Q6IENsaW5pY1JlcXVlc3QKfTsKdmFyIGluc3RhbmNlcyA9IHt9OwoKdmFyIFJlcXVlc3RGYWN0b3J5ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBSZXF1ZXN0RmFjdG9yeSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSZXF1ZXN0RmFjdG9yeSk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoUmVxdWVzdEZhY3RvcnksIG51bGwsIFt7CiAgICBrZXk6ICJnZXRSZXF1ZXN0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRSZXF1ZXN0KGNsYXNzbmFtZSkgewogICAgICBpZiAodXRpbHMuZ2V0TG9jYWxVc2VyKCkgJiYgYXBwSGVscGVyLmlzQ2xpZW50KCkpIHsKICAgICAgICB3aW5kb3cuYXhpb3MuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bJ0F1dGhvcml6YXRpb24nXSA9IHV0aWxzLmdldExvY2FsVXNlcigpLnRva2VuOwogICAgICB9CgogICAgICBpZiAodXRpbHMuZ2V0TG9jYWxBZG1pbigpICYmIGFwcEhlbHBlci5pc0FkbWluKCkpIHsKICAgICAgICB3aW5kb3cuYXhpb3MuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bJ0F1dGhvcml6YXRpb24nXSA9IHV0aWxzLmdldExvY2FsQWRtaW4oKS50b2tlbjsKICAgICAgfQoKICAgICAgaWYgKHV0aWxzLmdldExvY2FsQ2xpbmljKCkgJiYgYXBwSGVscGVyLmlzQ2xpbmljKCkpIHsKICAgICAgICB3aW5kb3cuYXhpb3MuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bJ0F1dGhvcml6YXRpb24nXSA9IHV0aWxzLmdldExvY2FsQ2xpbmljKCkudG9rZW47CiAgICAgIH0KCiAgICAgIHdpbmRvdy5heGlvcy5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vblsnQ29udGVudC1UeXBlJ10gPSAnYXBwbGljYXRpb24vanNvbic7CiAgICAgIHZhciBSZXF1ZXN0Q2xhc3MgPSByZXF1ZXN0TWFwW2NsYXNzbmFtZV07CgogICAgICBpZiAoIVJlcXVlc3RDbGFzcykgewogICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCByZXF1ZXN0IGNsYXNzIG5hbWU6ICcgKyBjbGFzc25hbWUpOwogICAgICB9CgogICAgICB2YXIgcmVxdWVzdEluc3RhbmNlID0gaW5zdGFuY2VzW2NsYXNzbmFtZV07CgogICAgICBpZiAoIXJlcXVlc3RJbnN0YW5jZSkgewogICAgICAgIHJlcXVlc3RJbnN0YW5jZSA9IG5ldyBSZXF1ZXN0Q2xhc3MoKTsKICAgICAgICBpbnN0YW5jZXNbY2xhc3NuYW1lXSA9IHJlcXVlc3RJbnN0YW5jZTsKICAgICAgfQoKICAgICAgcmV0dXJuIHJlcXVlc3RJbnN0YW5jZTsKICAgIH0KICB9XSk7CgogIHJldHVybiBSZXF1ZXN0RmFjdG9yeTsKfSgpOwoKZXhwb3J0IHsgUmVxdWVzdEZhY3RvcnkgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["/var/www/provider-stg.hera.health/src/api/RequestFactory.js"],"names":["UserRequest","utils","CommonRequest","AdminRequest","ClinicRequest","appHelper","requestMap","instances","RequestFactory","classname","getLocalUser","isClient","window","axios","defaults","headers","common","token","getLocalAdmin","isAdmin","getLocalClinic","isClinic","RequestClass","Error","requestInstance"],"mappings":";;AAAA,OAAOA,WAAP,MAAwB,uBAAxB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,SAAQC,SAAR,QAAwB,sBAAxB;AAEA,IAAMC,UAAU,GAAG;AACjBH,EAAAA,YAAY,EAAZA,YADiB;AAEjBH,EAAAA,WAAW,EAAXA,WAFiB;AAGjBE,EAAAA,aAAa,EAAbA,aAHiB;AAIjBE,EAAAA,aAAa,EAAbA;AAJiB,CAAnB;AAMA,IAAMG,SAAS,GAAG,EAAlB;;IAGqBC,c;;;;;;;+BAEDC,S,EAAW;AAC3B,UAAIR,KAAK,CAACS,YAAN,MAAwBL,SAAS,CAACM,QAAV,EAA5B,EAAkD;AAChDC,QAAAA,MAAM,CAACC,KAAP,CAAaC,QAAb,CAAsBC,OAAtB,CAA8BC,MAA9B,CAAqC,eAArC,IAAwDf,KAAK,CAACS,YAAN,GAAqBO,KAA7E;AACD;;AACD,UAAIhB,KAAK,CAACiB,aAAN,MAAyBb,SAAS,CAACc,OAAV,EAA7B,EAAkD;AAChDP,QAAAA,MAAM,CAACC,KAAP,CAAaC,QAAb,CAAsBC,OAAtB,CAA8BC,MAA9B,CAAqC,eAArC,IAAwDf,KAAK,CAACiB,aAAN,GAAsBD,KAA9E;AACD;;AACD,UAAIhB,KAAK,CAACmB,cAAN,MAA0Bf,SAAS,CAACgB,QAAV,EAA9B,EAAoD;AAClDT,QAAAA,MAAM,CAACC,KAAP,CAAaC,QAAb,CAAsBC,OAAtB,CAA8BC,MAA9B,CAAqC,eAArC,IAAwDf,KAAK,CAACmB,cAAN,GAAuBH,KAA/E;AACD;;AAEDL,MAAAA,MAAM,CAACC,KAAP,CAAaC,QAAb,CAAsBC,OAAtB,CAA8BC,MAA9B,CAAqC,cAArC,IAAuD,kBAAvD;AACA,UAAIM,YAAY,GAAGhB,UAAU,CAACG,SAAD,CAA7B;;AACA,UAAI,CAACa,YAAL,EAAmB;AACjB,cAAM,IAAIC,KAAJ,CAAU,iCAAiCd,SAA3C,CAAN;AACD;;AAED,UAAIe,eAAe,GAAGjB,SAAS,CAACE,SAAD,CAA/B;;AACA,UAAI,CAACe,eAAL,EAAsB;AACpBA,QAAAA,eAAe,GAAG,IAAIF,YAAJ,EAAlB;AACAf,QAAAA,SAAS,CAACE,SAAD,CAAT,GAAuBe,eAAvB;AACD;;AACD,aAAOA,eAAP;AACD;;;;;;SAzBkBhB,c","sourcesContent":["import UserRequest from \"./request/UserRequest\";\nimport utils from \"../utils/utils\";\nimport CommonRequest from \"./request/CommonRequest\";\nimport AdminRequest from './request/AdminRequest'\nimport ClinicRequest from './request/ClinicRequest'\nimport {appHelper} from \"./../utils/appHelper\";\n\nconst requestMap = {\n  AdminRequest,\n  UserRequest,\n  CommonRequest,\n  ClinicRequest\n}\nconst instances = {};\n\n\nexport default class RequestFactory {\n\n  static getRequest(classname) {\n    if (utils.getLocalUser() && appHelper.isClient()) {\n      window.axios.defaults.headers.common['Authorization'] = utils.getLocalUser().token;\n    }\n    if (utils.getLocalAdmin() && appHelper.isAdmin()) {\n      window.axios.defaults.headers.common['Authorization'] = utils.getLocalAdmin().token;\n    }\n    if (utils.getLocalClinic() && appHelper.isClinic()) {\n      window.axios.defaults.headers.common['Authorization'] = utils.getLocalClinic().token;\n    }\n\n    window.axios.defaults.headers.common['Content-Type'] = 'application/json';\n    let RequestClass = requestMap[classname];\n    if (!RequestClass) {\n      throw new Error('Invalid request class name: ' + classname);\n    }\n\n    let requestInstance = instances[classname];\n    if (!requestInstance) {\n      requestInstance = new RequestClass();\n      instances[classname] = requestInstance;\n    }\n    return requestInstance;\n  }\n\n}\n"]}]}