{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider-stg.hera.health/src/views/admin/AdminSettingNotification.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/views/admin/AdminSettingNotification.vue","mtime":1594682356248},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7YXBwSGVscGVyfSBmcm9tICIuLi8uLi91dGlscy9hcHBIZWxwZXIiOwppbXBvcnQgcmYgZnJvbSAiLi4vLi4vYXBpL1JlcXVlc3RGYWN0b3J5IjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU2V0dGluZyIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFwcEhlbHBlciwKICAgICAgYXBwb2ludG1lbnRzOiBmYWxzZSwKICAgICAgbWVzc2FnZTogZmFsc2UsCiAgICAgIGNoYXQ6IGZhbHNlLAogICAgICBjYWxsOiBmYWxzZSwKICAgICAgcmV2aWV3OiBmYWxzZSwKICAgICAgY2xpbmljX2FwcGxpY2FudHM6IGZhbHNlCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBvbkNoYW5nZU5vdGlmaWNhdGlvbigpIHsKICAgICAgbGV0IHNlbGYgPSB0aGlzCiAgICAgIGxldCBwYXJhbXMgPSB7CiAgICAgICAgYXBwb2ludG1lbnRzOiBzZWxmLmFwcG9pbm1lbnRzLAogICAgICAgIG1lc3NhZ2U6IHNlbGYubWVzc2FnZSwKICAgICAgICBjaGF0OiBzZWxmLmNoYXQsCiAgICAgICAgY2FsbDogc2VsZi5jYWxsCiAgICAgIH0KCiAgICAgIHJldHVybiByZi5nZXRSZXF1ZXN0KCdDb21tb25SZXF1ZXN0JykudXBkYXRlU2V0dGluZ05vdGlmaWNhdGlvbnMocGFyYW1zKS50aGVuKChyZXMpID0+IHsKICAgICAgICBzZWxmLiRzdG9yZS5kaXNwYXRjaCgnYXBwL3Nob3dNb2RhbCcsIHttZXNzYWdlOiByZXMubWVzc2FnZX0pCiAgICAgIH0pOwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIGxldCBzZWxmID0gdGhpcwoKICAgIHJmLmdldFJlcXVlc3QoJ0NvbW1vblJlcXVlc3QnKS5nZXRTZXR0aW5nTm90aWZpY2F0aW9uKCkudGhlbigocmVzKSA9PiB7CiAgICAgIGlmIChyZXMuZGF0YSkgewogICAgICAgIGNvbnN0IHthcHBvaW50bWVudHMsIG1lc3NhZ2UsIGNoYXQsIGNhbGx9ID0gcmVzLmRhdGEKICAgICAgICBzZWxmLmFwcG9pbnRtZW50cyA9IGFwcG9pbnRtZW50cwogICAgICAgIHNlbGYubWVzc2FnZSA9IG1lc3NhZ2UKICAgICAgICBzZWxmLmNoYXQgPSBjaGF0CiAgICAgICAgc2VsZi5jYWxsID0gY2FsbAogICAgICB9CiAgICB9KTsKICB9Cn0K"},{"version":3,"sources":["AdminSettingNotification.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AdminSettingNotification.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div class=\"container pt-5\">\n    <div class=\"row\">\n      <div class=\"col-sm-2\"></div>\n      <div class=\"col-sm-8\">\n        <h2 class=\"title-22 pb-4\" style=\"color: #020644\">Notification Settings</h2>\n\n        <ul class=\"list-group notification-list\">\n          <li class=\"list-group-item notification-title\">\n            Appointments\n            <div class=\"material-switch float-right\">\n              <input\n                  @change=\"onChangeNotification\"\n                  id=\"sw_appointments\"\n                  type=\"checkbox\"\n                  v-model=\"appointments\">\n              <label class=\"badge-primary\" for=\"sw_appointments\"></label>\n            </div>\n          </li>\n          <li class=\"list-group-item justify-content-between notification-title\">\n            Chat\n            <div class=\"material-switch float-right\">\n              <input\n                  @change=\"onChangeNotification\"\n                  id=\"sw_chat\"\n                  type=\"checkbox\"\n                  v-model=\"chat\">\n              <label class=\"badge-primary\" for=\"sw_chat\"></label>\n            </div>\n          </li>\n          <li class=\"list-group-item justify-content-between notification-title\">\n            Call\n            <div class=\"material-switch float-right\">\n              <input\n                  @change=\"onChangeNotification\"\n                  id=\"sw_call\"\n                  type=\"checkbox\"\n                  v-model=\"call\">\n              <label class=\"badge-primary\" for=\"sw_call\"></label>\n            </div>\n          </li>\n\n          <li class=\"list-group-item justify-content-between notification-title\" v-if=\"appHelper.isAdmin()\">\n            Review\n            <div class=\"material-switch float-right\">\n              <input\n                  @change=\"onChangeNotification\"\n                  id=\"sw_review\"\n                  type=\"checkbox\"\n                  v-model=\"review\">\n              <label class=\"badge-primary\" for=\"sw_review\"></label>\n            </div>\n          </li>\n\n          <li class=\"list-group-item justify-content-between notification-title\" v-if=\"appHelper.isAdmin()\">\n            Clinic Applicants\n            <div class=\"material-switch float-right\">\n              <input\n                  @change=\"onChangeNotification\"\n                  id=\"sw_clinic_applicants\"\n                  type=\"checkbox\"\n                  v-model=\"clinic_applicants\">\n              <label class=\"badge-primary\" for=\"sw_clinic_applicants\"></label>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div class=\"col-sm-2\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import {appHelper} from \"../../utils/appHelper\";\n  import rf from \"../../api/RequestFactory\";\n\n  export default {\n    name: \"Setting\",\n    data() {\n      return {\n        appHelper,\n        appointments: false,\n        message: false,\n        chat: false,\n        call: false,\n        review: false,\n        clinic_applicants: false\n      }\n    },\n    methods: {\n      onChangeNotification() {\n        let self = this\n        let params = {\n          appointments: self.appoinments,\n          message: self.message,\n          chat: self.chat,\n          call: self.call\n        }\n\n        return rf.getRequest('CommonRequest').updateSettingNotifications(params).then((res) => {\n          self.$store.dispatch('app/showModal', {message: res.message})\n        });\n      }\n    },\n    mounted() {\n      let self = this\n\n      rf.getRequest('CommonRequest').getSettingNotification().then((res) => {\n        if (res.data) {\n          const {appointments, message, chat, call} = res.data\n          self.appointments = appointments\n          self.message = message\n          self.chat = chat\n          self.call = call\n        }\n      });\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>\n"]}]}