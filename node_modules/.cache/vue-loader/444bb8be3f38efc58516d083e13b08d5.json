{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider-stg.hera.health/src/views/clients/AppointmentDetail.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/views/clients/AppointmentDetail.vue","mtime":1593907636670},{"path":"/var/www/provider-stg.hera.health/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmFwcHQtLWRldGFpbCB0ZCB7CiAgY29sb3I6ICM0MzQzNDM7CiAgYm9yZGVyLXRvcDogMHB4OwogIHBhZGRpbmctdG9wOiAxMHB4OwogIHBhZGRpbmctYm90dG9tOiAxMHB4Owp9CgouYXBwdC0tbGFiZWxzIHsKICBjb2xvcjogIzAyMDY0NCAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["AppointmentDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"AppointmentDetail.vue","sourceRoot":"src/views/clients","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-sm-12\">\n        <router-link to=\"/appointments\"><h4 class=\"page-title\"><i class=\"fa fa-arrow-left mr-3\"></i>Back to\n          Appointments</h4></router-link>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-sm-8\">\n        <div class=\"card\" v-if=\"appt\">\n          <div class=\"card-body\">\n            <div class=\"text-center mb-4 mt-4 title-15 text-danger\">New available appointment times provided\n              by clinic. Please select one before time expires.\n            </div>\n            <div class=\"title-15 mb-3\">Rescheduled time:</div>\n            <div class=\"row\">\n              <div class=\"col-sm-3\"></div>\n              <div class=\"col-sm-6\">\n                <div :key=\"schedule_item.id\" class=\"row mb-3\"\n                     v-for=\"schedule_item in appt.schedule_times\">\n                  <div class=\"col-sm-4\">\n                    <input :id=\"'rd__' + schedule_item.id\" :value=\"schedule_item.id\" class=\"mr-2\"\n                           type=\"radio\" v-model=\"schedule_selected\">\n                    <label :for=\"'rd__' + schedule_item.id\" class=\"title-15\">{{ schedule_item.name\n                      }}</label>\n                  </div>\n                  <div class=\"col-sm-4\">{{ schedule_item.reschedule_time | convertTimeSecondToDate}}\n                  </div>\n                  <div class=\"col-sm-4\">{{ schedule_item.reschedule_time | convertDateToTime}}</div>\n                </div>\n              </div>\n              <div class=\"col-sm-3\"></div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"card\" v-if=\"appt\">\n          <AppointmentDetailTable :isClient=\"true\" @onRefresh=\"onRefresh\"></AppointmentDetailTable>\n\n          <div v-if=\"Const.STATUS.isPending(appt.status) || Const.STATUS.isSchedule(appt.status)\">\n            <div class=\"text-center mt-3 pb-20\">\n              <input class=\"mr-2\" id=\"chk__policy\" type=\"checkbox\" v-model=\"policy\"><label\n                for=\"chk__policy\">I agree to the Cancellation Policy</label>\n            </div>\n          </div>\n          <div v-if=\"Const.STATUS.isPending(appt.status)\">\n            <div class=\"text-center mb-5\">\n              <button :disabled=\"! policy\" @click=\"onCancellAppointment()\"\n                      class=\"btn btn-lg btn-rounded btn-primary\">Cancel Appointment\n              </button>\n            </div>\n          </div>\n          <div class=\"text-center mb-5\" v-if=\"Const.STATUS.isConfirmed(appt.status)\">\n            <button :disabled=\"! policy\" @click=\"onCancellAppointmentConfirmed()\"\n                    class=\"btn btn-lg btn-rounded btn-light\">Cancel Appointment\n            </button>\n          </div>\n          <div class=\"text-center mb-5\" v-if=\"Const.STATUS.isSchedule(appt.status)\">\n            <button :disabled=\"! schedule_selected\" @click=\"onAcceptAppointment()\"\n                    class=\"btn btn-lg btn-rounded btn-primary mr-5\">Accept\n            </button>\n            <button :disabled=\"! policy\" @click=\"onCancellAppointmentSchedule()\"\n                    class=\"btn btn-lg btn-rounded btn-light\">Cancel Appointment\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  import rf from \"../../api/RequestFactory\";\n  import Const from \"./../../utils/const\"\n  import AppointmentDetailTable from './../../components/AppointmentDetailTable'\n\n  export default {\n    components: {\n      AppointmentDetailTable\n    },\n    data() {\n      return {\n        Const,\n        appt: null,\n        policy: false,\n        schedule_selected: false,\n        id: null\n      }\n    },\n    mounted() {\n      let self = this\n      self.id = parseInt(this.$route.params.id)\n\n      self.onRefresh()\n    },\n    methods: {\n      onRefresh() {\n        let self = this\n        rf.getRequest('UserRequest').getAppointmentDetail(self.id).then((res) => {\n          self.appt = res.data;\n          self.$store.commit('updateAppt', res.data)\n        })\n      },\n      onCancellAppointment() {\n        let self = this\n\n        if (!self.policy) {\n          return\n        }\n\n        let params = {\n          status: Const.STATUS.stringToInt('canceled')\n        }\n\n        rf.getRequest('UserRequest').postAppointmentStatus(self.appt.id, params).then((res) => {\n          self.appt = res.data\n\n          if (self.appt.status == Const.STATUS.stringToInt('canceled')) {\n            self.$store.dispatch('app/showModal', {message: res.message})\n          }\n        })\n      },\n      onCancellAppointmentSchedule() {\n        let self = this\n\n        if (!self.policy) {\n          return\n        }\n\n        return self.$router.push({path: '/appointment/' + self.appt.id + '/cancel'})\n      },\n      onCancellAppointmentConfirmed() {\n        let self = this\n\n        if (!self.policy) {\n          return\n        }\n\n        rf.getRequest('UserRequest').postCheckCancelable(self.appt.id).then((res) => {\n          if (res.data) {\n            return self.$router.push({path: '/appointment/' + self.appt.id + '/cancel'})\n          }\n        })\n      },\n      onAcceptAppointment() {\n        let self = this\n\n        if (!self.schedule_selected) {\n          return\n        }\n\n        let params = {\n          status: Const.STATUS.stringToInt('confirmed'),\n          schedule_item_id: self.schedule_selected\n        }\n\n        rf.getRequest('UserRequest').postAppointmentStatus(self.appt.id, params).then((res) => {\n          self.appt = res.data\n\n          if (self.appt.status == Const.STATUS.stringToInt('confirmed')) {\n            self.$store.dispatch('app/showModal', {message: res.message})\n          }\n        })\n      }\n    }\n  }\n</script>\n<style>\n  .appt--detail td {\n    color: #434343;\n    border-top: 0px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  .appt--labels {\n    color: #020644 !important;\n  }\n</style>\n"]}]}