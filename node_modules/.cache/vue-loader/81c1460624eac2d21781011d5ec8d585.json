{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider-stg.hera.health/src/views/clients/Payments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/views/clients/Payments.vue","mtime":1593800348670},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCByZiBmcm9tICIuLi8uLi9hcGkvUmVxdWVzdEZhY3RvcnkiCmltcG9ydCBQYWdpbmF0aW9uIGZyb20gIi4uLy4uL2NvbW1vbi9QYWdpbmF0aW9uIgoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFBhZ2luYXRpb24KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwYXltZW50czogW10sCiAgICAgIHBhZ2U6IG51bGwsCiAgICAgIHNvcnRDcmVhdGVkOiAnZGVzYycsCiAgICAgIGN1cnJlbnRQYWdlOiAwLAogICAgICB0b3RhbFBhZ2U6IDAsCiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgbGV0IHNlbGYgPSB0aGlzCiAgICBzZWxmLmdldFBheW1lbnRzKHNlbGYuY3VycmVudFBhZ2UpOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0UGF5bWVudHMocGFnZSkgewogICAgICBsZXQgc2VsZiA9IHRoaXMKICAgICAgc2VsZi5jdXJyZW50UGFnZSA9IHBhZ2U7CiAgICAgIGxldCBwYXJhbXMgPSB7CiAgICAgICAgcGFnZTogcGFnZSwKICAgICAgICBzb3J0X2NyZWF0ZWQ6IHNlbGYuc29ydENyZWF0ZWQsCiAgICAgIH0KCiAgICAgIHJmLmdldFJlcXVlc3QoJ1VzZXJSZXF1ZXN0JykuZ2V0UGF5bWVudHMocGFyYW1zKS50aGVuKChyZXMpID0+IHsKICAgICAgICB0aGlzLnBheW1lbnRzID0gcmVzLmRhdGEuZGF0YXM7CiAgICAgICAgdGhpcy50b3RhbFBhZ2UgPSByZXMuZGF0YS50b3RhbF9wYWdlOwogICAgICB9KTsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Payments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Payments.vue","sourceRoot":"src/views/clients","sourcesContent":["<template>\n    <div class=\"content\">\n        <p class=\"title title-22 title-color\">Payments</p>\n\n        <div class=\"row list-content\">\n            <div class=\"col-md-12\">\n                <div class=\"table-responsive\">\n                    <table class=\"m-t-25 table table-striped custom-table\">\n                        <thead>\n                        <tr>\n                            <th>\n                                <span class=\"title-date\">Invoice No.</span>\n                                <img class=\"img-down\" src=\"/assets/img/icon_down.png\">\n                                <img src=\"/assets/img/icon_up.png\">\n                            </th>\n                            <th>Clinic</th>\n                            <th>Consulation Type</th>\n                            <th>Payment Type</th>\n                            <th>Paid Date</th>\n                            <th>Paid Amount</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr :key=\"payment.id\" v-for=\"payment in payments\">\n                            <td>\n                                <router-link :to=\"'payment/' + payment.id\">\n                                    <span class=\"text-blue desc-12\">{{ payment.id | convertInvoiceID }}</span>\n                                </router-link>\n                            </td>\n                            <td>{{ payment.clinic.name }}</td>\n                            <td>{{ payment.consulation_type_name }}</td>\n                            <td>{{ payment.payment_type_name }}</td>\n                            <td>{{ payment.paid_date | convertTimeSecondToDateTime }}</td>\n                            <td>{{ payment.paid_amount }}</td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"page\">\n            <Pagination :current-page=\"currentPage\" :total-page=\"totalPage\"\n                        @pageData=\"getPayments\"></Pagination>\n        </div>\n    </div>\n</template>\n\n<script>\n  import rf from \"../../api/RequestFactory\"\n  import Pagination from \"../../common/Pagination\"\n\n  export default {\n    components: {\n      Pagination\n    },\n    data() {\n      return {\n        payments: [],\n        page: null,\n        sortCreated: 'desc',\n        currentPage: 0,\n        totalPage: 0,\n      }\n    },\n    mounted() {\n      let self = this\n      self.getPayments(self.currentPage);\n    },\n    methods: {\n      getPayments(page) {\n        let self = this\n        self.currentPage = page;\n        let params = {\n          page: page,\n          sort_created: self.sortCreated,\n        }\n\n        rf.getRequest('UserRequest').getPayments(params).then((res) => {\n          this.payments = res.data.datas;\n          this.totalPage = res.data.total_page;\n        });\n      }\n    }\n  }\n</script>\n\n<style></style>\n"]}]}