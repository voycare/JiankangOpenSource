{"remainingRequest":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider.voycare.com/src/views/admin/SubsciberListing.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider.voycare.com/src/views/admin/SubsciberListing.vue","mtime":1597939243784},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/thread-loader/dist/cjs.js","mtime":1596630678838},{"path":"/var/www/provider.voycare.com/node_modules/babel-loader/lib/index.js","mtime":1596630688999},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js","mtime":1596630687836}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQYWdpbmF0aW9uIGZyb20gIi4uLy4uL2NvbW1vbi9QYWdpbmF0aW9uIgppbXBvcnQgcmYgZnJvbSAiLi4vLi4vYXBpL1JlcXVlc3RGYWN0b3J5IgoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFBhZ2luYXRpb24sCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2hvd19wb3BvdmVyX2ZpbHRlcjogZmFsc2UsCiAgICAgIGN1cnJlbnRfcGFnZTogMSwKICAgICAgc29ydF9jcmVhdGVkOiAnZGVzYycsCiAgICAgIHRvdGFsX3BhZ2U6IDEsCiAgICAgIGl0ZW1zOiBbXSwKICAgICAgbGltaXQ6IDEwLAogICAgICBsaW1pdE9wdGlvbnM6IFsKICAgICAgICB7dmFsdWU6IDEwLCB0ZXh0OiAxMH0sCiAgICAgICAge3ZhbHVlOiAyMCwgdGV4dDogMjB9LAogICAgICAgIHt2YWx1ZTogNTAsIHRleHQ6IDUwfQogICAgICBdCiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgbGV0IHNlbGYgPSB0aGlzCiAgICBzZWxmLmdldExpc3Rpbmcoc2VsZi5jdXJyZW50X3BhZ2UpCiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRMaXN0aW5nKHBhZ2UpIHsKICAgICAgbGV0IHNlbGYgPSB0aGlzCiAgICAgIGxldCBwYXJhbXMgPSB7CiAgICAgICAgcGFnZTogcGFnZSwKICAgICAgICBzb3J0X2NyZWF0ZWQ6IHRoaXMuc29ydF9jcmVhdGVkLAogICAgICAgIGxpbWl0OiB0aGlzLmxpbWl0CiAgICAgIH07CgogICAgICByZi5nZXRSZXF1ZXN0KCdBZG1pblJlcXVlc3QnKS5nZXRTdWJzY3JpYmVycyhwYXJhbXMpLnRoZW4ocmVzID0+IHsKICAgICAgICBzZWxmLml0ZW1zID0gcmVzLmRhdGEuZGF0YXMKICAgICAgICBzZWxmLnRvdGFsX3BhZ2UgPSByZXMuZGF0YS50b3RhbF9wYWdlCiAgICAgICAgc2VsZi5jdXJyZW50X3BhZ2UgPSBwYWdlCiAgICAgIH0pCiAgICB9LAogIH0KfQo="},{"version":3,"sources":["SubsciberListing.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SubsciberListing.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div >\n    <div class=\"row\">\n      <div class=\"col-sm-6\">\n        <p class=\"title title-22\">Subscribers</p>\n      </div>\n    </div>\n\n\n    <div class=\"list-content\">\n      <div class=\"table-responsive\">\n        <table class=\"table table-striped custom-table table--appt\">\n          <thead>\n          <tr>\n            <th>Email</th>\n            <th>Created</th>\n            <th></th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr v-for=\"item in items\" :key=\"item.id\">\n            <td>{{ item.email }}</td>\n            <td>{{ item.created | convertTimeSecondToDate }}</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n    <div class=\"page\">\n      <Pagination :current-page=\"current_page\" :total-page=\"total_page\"\n                  @pageData=\"getListing\"></Pagination>\n    </div>\n  </div>\n</template>\n<script>\n  import Pagination from \"../../common/Pagination\"\n  import rf from \"../../api/RequestFactory\"\n\n  export default {\n    components: {\n      Pagination,\n    },\n    data() {\n      return {\n        show_popover_filter: false,\n        current_page: 1,\n        sort_created: 'desc',\n        total_page: 1,\n        items: [],\n        limit: 10,\n        limitOptions: [\n          {value: 10, text: 10},\n          {value: 20, text: 20},\n          {value: 50, text: 50}\n        ]\n      }\n    },\n    mounted() {\n      let self = this\n      self.getListing(self.current_page)\n    },\n    methods: {\n      getListing(page) {\n        let self = this\n        let params = {\n          page: page,\n          sort_created: this.sort_created,\n          limit: this.limit\n        };\n\n        rf.getRequest('AdminRequest').getSubscribers(params).then(res => {\n          self.items = res.data.datas\n          self.total_page = res.data.total_page\n          self.current_page = page\n        })\n      },\n    }\n  }\n</script>\n<style>\n</style>\n"]}]}