{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider-stg.hera.health/src/views/admin/ClinicEdit.vue?vue&type=template&id=ed1d2e8c&scoped=true&","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/views/admin/ClinicEdit.vue","mtime":1595454825647},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}