{"remainingRequest":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider.voycare.com/src/views/admin/Appointment24H.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider.voycare.com/src/views/admin/Appointment24H.vue","mtime":1597939243736},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/thread-loader/dist/cjs.js","mtime":1596630678838},{"path":"/var/www/provider.voycare.com/node_modules/babel-loader/lib/index.js","mtime":1596630688999},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js","mtime":1596630687836}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7bWFwR2V0dGVyc30gZnJvbSAndnVleCcKCmltcG9ydCBDb25zdCBmcm9tICIuLy4uLy4uL3V0aWxzL2NvbnN0IgppbXBvcnQgcmYgZnJvbSAiLi4vLi4vYXBpL1JlcXVlc3RGYWN0b3J5IgppbXBvcnQgUGFnaW5hdGlvbiBmcm9tICIuLi8uLi9jb21tb24vUGFnaW5hdGlvbiIKaW1wb3J0IEFkbWluQXBwb2ludG1lbnRMaXN0aW5nIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQWRtaW5BcHBvaW50bWVudExpc3RpbmcnCmltcG9ydCBBZG1pbkFwcG9pbnRtZW50RmlsdGVyIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQWRtaW5BcHBvaW50bWVudEZpbHRlcicKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQXBwb2lubWVudCIsCiAgY29tcG9uZW50czogewogICAgUGFnaW5hdGlvbiwKICAgIEFkbWluQXBwb2ludG1lbnRMaXN0aW5nLAogICAgQWRtaW5BcHBvaW50bWVudEZpbHRlcgogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIENvbnN0LAogICAgICBjb3VudHJ5OiAnJywKICAgICAgYXBwb2lubWVudHM6IFtdLAogICAgICBjdXJyZW50X3BhZ2U6IDEsCiAgICAgIHBhZ2VMaW1pdDogMTAsCiAgICAgIHNvcnRfY3JlYXRlZDogJ2Rlc2MnLAogICAgICBuYW1lOiAnJywKICAgICAgdG90YWxfcGFnZTogMSwKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBjb3VudHJ5OiBmdW5jdGlvbiAoKSB7CiAgICAgIHRoaXMuZ2V0RGF0YUFwcG9pbnRtZW50cygpOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoWydjb3VudHJpZXMnLCAnYXBwdF90eXBlcycsICdhcHB0X3N0YXR1cyddKQogIH0sCiAgbWV0aG9kczogewogICAgb25Ob3RpZnlBbGwoKSB7CiAgICAgIGxldCBzZWxmID0gdGhpcwogICAgICBsZXQgcGFyYW1zID0gewogICAgICAgIHR5cGU6ICcyNGgnCiAgICAgIH0KCiAgICAgIHJmLmdldFJlcXVlc3QoJ0FkbWluUmVxdWVzdCcpLnBvc3RBcHBvaW50bWVudE5vdGlmeUFsbChwYXJhbXMpLnRoZW4ocmVzID0+IHsKICAgICAgICBzZWxmLmdldERhdGFBcHBvaW50bWVudHMoc2VsZi5jdXJyZW50X3BhZ2UpCiAgICAgIH0pCiAgICB9LAogICAgZ2V0RGF0YUFwcG9pbnRtZW50cyhwYWdlKSB7CiAgICAgIHRoaXMuY3VycmVudF9wYWdlID0gcGFnZTsKICAgICAgbGV0IHBhcmFtcyA9IHsKICAgICAgICBwYWdlOiBwYWdlLAogICAgICAgIGxpbWl0OiB0aGlzLnBhZ2VMaW1pdCwKICAgICAgICBzb3J0X2NyZWF0ZWQ6IHRoaXMuc29ydF9jcmVhdGVkLAogICAgICAgIC8vIGtleTogdGhpcy5uYW1lLAogICAgICAgIGNvdW50cnk6IHRoaXMuY291bnRyeSwKICAgICAgICB0eXBlOiAnMjRoJwogICAgICB9OwoKICAgICAgcmYuZ2V0UmVxdWVzdCgnQWRtaW5SZXF1ZXN0JykuZ2V0QXBwb2ludG1lbnRzKHBhcmFtcykudGhlbigocmVzKSA9PiB7CiAgICAgICAgdGhpcy5hcHBvaW5tZW50cyA9IHJlcy5kYXRhLmRhdGFzOwogICAgICAgIHRoaXMudG90YWxfcGFnZSA9IHJlcy5kYXRhLnRvdGFsX3BhZ2U7CiAgICAgIH0pCiAgICB9LAogICAgb25Tb3J0Q3JlYXRlZCgpIHsKICAgICAgdGhpcy5nZXREYXRhQXBwb2ludG1lbnRzKDEpOwogICAgfSwKICAgIGhhbmRsZVBhZ2VMaW1pdENoYW5nZShsaW1pdCl7CiAgICAgIHRoaXMuY3VycmVudF9wYWdlID0gMQogICAgICB0aGlzLnBhZ2VMaW1pdCA9IGxpbWl0CiAgICAgIHRoaXMuZ2V0RGF0YUFwcG9pbnRtZW50cygxKQogICAgfQogIH0sCgogIG1vdW50ZWQoKSB7CiAgICBsZXQgc2VsZiA9IHRoaXMKCiAgICBzZWxmLiRzdG9yZS5kaXNwYXRjaCgnZ2V0Q291bnRyaWVzJykKICAgIHNlbGYuJHN0b3JlLmRpc3BhdGNoKCdnZXRBcHBvaW50bWVudE1ldGFzJykKICAgIHNlbGYuZ2V0RGF0YUFwcG9pbnRtZW50cyh0aGlzLmN1cnJlbnRfcGFnZSk7CiAgfQp9Cg=="},{"version":3,"sources":["Appointment24H.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Appointment24H.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div>\n    <p class=\"title title-22\">Appointments<i class=\"fa fa-arrow-right mr-3 ml-3\"></i>24 - Hour</p>\n\n    <div class=\"list-content\">\n      <AdminAppointmentFilter  @page-limit-change=\"handlePageLimitChange\">\n        <template #more-action>\n          <button class=\"btn btn-sm p-0 btn-white px-3\" style=\"height: 27px;color: #EB6271;\">\n            Notify All\n          </button>\n        </template>\n      </AdminAppointmentFilter>\n\n      <AdminAppointmentListing :appoinments=\"appoinments\" :showNotify=\"true\"\n                               @onRefresh=\"getDataAppointments(current_page)\"\n                               @onSortCreated=\"onSortCreated\"></AdminAppointmentListing>\n    </div>\n\n    <div class=\"page\">\n      <Pagination :current-page=\"current_page\" :total-page=\"total_page\"\n                  @pageData=\"getDataAppointments\"></Pagination>\n    </div>\n  </div>\n</template>\n\n<script>\n  import {mapGetters} from 'vuex'\n\n  import Const from \"./../../utils/const\"\n  import rf from \"../../api/RequestFactory\"\n  import Pagination from \"../../common/Pagination\"\n  import AdminAppointmentListing from '../../components/AdminAppointmentListing'\n  import AdminAppointmentFilter from '../../components/AdminAppointmentFilter'\n\n  export default {\n    name: \"Appoinment\",\n    components: {\n      Pagination,\n      AdminAppointmentListing,\n      AdminAppointmentFilter\n    },\n    data() {\n      return {\n        Const,\n        country: '',\n        appoinments: [],\n        current_page: 1,\n        pageLimit: 10,\n        sort_created: 'desc',\n        name: '',\n        total_page: 1,\n      }\n    },\n    watch: {\n      country: function () {\n        this.getDataAppointments();\n      }\n    },\n    computed: {\n      ...mapGetters(['countries', 'appt_types', 'appt_status'])\n    },\n    methods: {\n      onNotifyAll() {\n        let self = this\n        let params = {\n          type: '24h'\n        }\n\n        rf.getRequest('AdminRequest').postAppointmentNotifyAll(params).then(res => {\n          self.getDataAppointments(self.current_page)\n        })\n      },\n      getDataAppointments(page) {\n        this.current_page = page;\n        let params = {\n          page: page,\n          limit: this.pageLimit,\n          sort_created: this.sort_created,\n          // key: this.name,\n          country: this.country,\n          type: '24h'\n        };\n\n        rf.getRequest('AdminRequest').getAppointments(params).then((res) => {\n          this.appoinments = res.data.datas;\n          this.total_page = res.data.total_page;\n        })\n      },\n      onSortCreated() {\n        this.getDataAppointments(1);\n      },\n      handlePageLimitChange(limit){\n        this.current_page = 1\n        this.pageLimit = limit\n        this.getDataAppointments(1)\n      }\n    },\n\n    mounted() {\n      let self = this\n\n      self.$store.dispatch('getCountries')\n      self.$store.dispatch('getAppointmentMetas')\n      self.getDataAppointments(this.current_page);\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>\n"]}]}