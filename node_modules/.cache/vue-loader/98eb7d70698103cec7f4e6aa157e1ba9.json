{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider-stg.hera.health/src/views/admin/AdminStatements.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/views/admin/AdminStatements.vue","mtime":1595456680343},{"path":"/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBDb25zdCBmcm9tICIuLy4uLy4uL3V0aWxzL2NvbnN0IgppbXBvcnQgcmYgZnJvbSAiLi4vLi4vYXBpL1JlcXVlc3RGYWN0b3J5IgppbXBvcnQgUGFnaW5hdGlvbiBmcm9tICIuLi8uLi9jb21tb24vUGFnaW5hdGlvbiIKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBQYWdpbmF0aW9uCiAgfSwKICBwcm9wczogWydpc19jbGllbnQnXSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgQ29uc3QsCiAgICAgIHN0YXRlbWVudHM6IFtdLAogICAgICBwYWdlOiBudWxsLAogICAgICBzb3J0Q3JlYXRlZDogJ2Rlc2MnLAogICAgICBjdXJyZW50UGFnZTogMCwKICAgICAgdG90YWxQYWdlOiAwLAogICAgICBpZDogbnVsbCwKICAgICAgc2VhcmNoOiB7CiAgICAgICAgaWQ6IG51bGwsCiAgICAgICAgZnJvbTogbnVsbCwKICAgICAgICB0bzogbnVsbAogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgbGV0IHNlbGYgPSB0aGlzCiAgICBzZWxmLmdldExpc3Rpbmcoc2VsZi5jdXJyZW50UGFnZSkKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldExpc3RpbmcocGFnZSkgewogICAgICBsZXQgc2VsZiA9IHRoaXMKICAgICAgc2VsZi5jdXJyZW50UGFnZSA9IHBhZ2U7CiAgICAgIGxldCBwYXJhbXMgPSB7CiAgICAgICAgcGFnZTogcGFnZSwKICAgICAgICBzb3J0X2NyZWF0ZWQ6IHNlbGYuc29ydENyZWF0ZWQsCiAgICAgICAgaWQ6IHNlbGYuc2VhcmNoLmlkLAogICAgICAgIGZyb206IHNlbGYuc2VhcmNoLmZyb20sCiAgICAgICAgdG86IHNlbGYuc2VhcmNoLnRvCiAgICAgIH0KICAgICAgaWYgKHNlbGYuaXNfY2xpZW50KSB7CiAgICAgICAgcGFyYW1zLnR5cGUgPSAnY2xpZW50JwogICAgICB9IGVsc2UgewogICAgICAgIHBhcmFtcy50eXBlID0gJ2NsaW5pYycKICAgICAgfQoKICAgICAgcmYuZ2V0UmVxdWVzdCgnQWRtaW5SZXF1ZXN0JykuZ2V0U3RhdGVtZW50cyhwYXJhbXMpLnRoZW4oKHJlcykgPT4gewogICAgICAgIHRoaXMuc3RhdGVtZW50cyA9IHJlcy5kYXRhLmRhdGFzOwogICAgICAgIHRoaXMudG90YWxQYWdlID0gcmVzLmRhdGEudG90YWxfcGFnZTsKICAgICAgfSk7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["AdminStatements.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AdminStatements.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div class=\"content\">\n    <p class=\"title title-22 title-color\">Payments</p>\n\n    <div class=\"row\">\n      <div class=\"col-sm-3\">\n        <input type=\"text\" class=\"form-control\" v-model=\"search.id\" placeholder=\"Clinic\">\n      </div>\n      <div class=\"col-sm-3\">\n        <input type=\"date\" class=\"form-control\" v-model=\"search.from\" placeholder=\"From\">\n      </div>\n      <div class=\"col-sm-3\">\n        <input type=\"date\" class=\"form-control\" v-model=\"search.to\" placeholder=\"To\">\n      </div>\n      <div class=\"col-sm-3\">\n        <button class=\"btn btn-pink btn-block btn-rounded\" @click=\"getListing\">Search</button>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-sm-6\"></div>\n      <div class=\"col-sm-6 text-right\">\n        <router-link to=\"/statements-add\" class=\"btn btn-dark\">Create Statement</router-link>\n      </div>\n    </div>\n\n    <div class=\"list-content\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"table-responsive\">\n            <table class=\"m-t-25 table table-striped custom-table\">\n              <thead>\n              <tr>\n                <th>Statement No.</th>\n                <th>Clinic</th>\n                <th>Period</th>\n                <th>Amount</th>\n                <th>Status</th>\n                <th></th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr :key=\"statement.id\" v-for=\"statement in statements\">\n                <td>\n                  <router-link :to=\"'/statements/' + statement.id\">\n                    <span class=\"text-blue desc-12\">{{ statement.id | convertHeraID }}</span>\n                  </router-link>\n                </td>\n                <td>{{ statement.to.name }}</td>\n                <td>{{ statement.sale_period | convertTimeSecondToDate }}</td>\n                <td>{{ statement.net }}</td>\n                <td>\n                  <p :class=\"Const.STATUS.intToPaymentStatus(statement.status)\" class=\"alert appt--status\">\n                    {{Const.STATUS.paymentStatusString( statement.status )}}\n                  </p>\n                </td>\n                <td>\n                  <router-link :to=\"'/statements/' + statement.id\">\n                    <i class=\"fa fa-plus mr-2\"></i> Edit\n                  </router-link>\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"page\">\n      <Pagination :current-page=\"currentPage\" :total-page=\"totalPage\"\n                  @pageData=\"getListing\"></Pagination>\n    </div>\n  </div>\n</template>\n\n<script>\n  import Const from \"./../../utils/const\"\n  import rf from \"../../api/RequestFactory\"\n  import Pagination from \"../../common/Pagination\"\n\n  export default {\n    components: {\n      Pagination\n    },\n    props: ['is_client'],\n    data() {\n      return {\n        Const,\n        statements: [],\n        page: null,\n        sortCreated: 'desc',\n        currentPage: 0,\n        totalPage: 0,\n        id: null,\n        search: {\n          id: null,\n          from: null,\n          to: null\n        }\n      }\n    },\n    mounted() {\n      let self = this\n      self.getListing(self.currentPage)\n    },\n    methods: {\n      getListing(page) {\n        let self = this\n        self.currentPage = page;\n        let params = {\n          page: page,\n          sort_created: self.sortCreated,\n          id: self.search.id,\n          from: self.search.from,\n          to: self.search.to\n        }\n        if (self.is_client) {\n          params.type = 'client'\n        } else {\n          params.type = 'clinic'\n        }\n\n        rf.getRequest('AdminRequest').getStatements(params).then((res) => {\n          this.statements = res.data.datas;\n          this.totalPage = res.data.total_page;\n        });\n      }\n    }\n  }\n</script>\n\n<style></style>\n"]}]}