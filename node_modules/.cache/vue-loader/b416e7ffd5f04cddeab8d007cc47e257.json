{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider-stg.hera.health/src/views/SettingNotification.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/views/SettingNotification.vue","mtime":1593800348666},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7YXBwSGVscGVyfSBmcm9tICIuLy4uL3V0aWxzL2FwcEhlbHBlciI7CmltcG9ydCByZiBmcm9tICIuLy4uL2FwaS9SZXF1ZXN0RmFjdG9yeSI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlNldHRpbmciLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBhcHBIZWxwZXIsCiAgICAgIGFwcG9pbnRtZW50czogZmFsc2UsCiAgICAgIG1lc3NhZ2U6IGZhbHNlLAogICAgICBjaGF0OiBmYWxzZSwKICAgICAgY2FsbDogZmFsc2UsCiAgICAgIHJldmlldzogZmFsc2UsCiAgICAgIGNsaW5pY19hcHBsaWNhbnRzOiBmYWxzZQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgb25DaGFuZ2VOb3RpZmljYXRpb24oKSB7CiAgICAgIGxldCBzZWxmID0gdGhpcwogICAgICBsZXQgcGFyYW1zID0gewogICAgICAgIGFwcG9pbnRtZW50czogc2VsZi5hcHBvaW5tZW50cywKICAgICAgICBtZXNzYWdlOiBzZWxmLm1lc3NhZ2UsCiAgICAgICAgY2hhdDogc2VsZi5jaGF0LAogICAgICAgIGNhbGw6IHNlbGYuY2FsbAogICAgICB9CgogICAgICByZXR1cm4gcmYuZ2V0UmVxdWVzdCgnQ29tbW9uUmVxdWVzdCcpLnVwZGF0ZVNldHRpbmdOb3RpZmljYXRpb25zKHBhcmFtcykudGhlbigocmVzKSA9PiB7CiAgICAgICAgc2VsZi4kc3RvcmUuZGlzcGF0Y2goJ2FwcC9zaG93TWVzc2FnZScsIHttZXNzYWdlOiByZXMubWVzc2FnZX0pCiAgICAgIH0pOwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIGxldCBzZWxmID0gdGhpcwoKICAgIHJmLmdldFJlcXVlc3QoJ0NvbW1vblJlcXVlc3QnKS5nZXRTZXR0aW5nTm90aWZpY2F0aW9uKCkudGhlbigocmVzKSA9PiB7CiAgICAgIGlmIChyZXMuZGF0YSkgewogICAgICAgIGNvbnN0IHthcHBvaW50bWVudHMsIG1lc3NhZ2UsIGNoYXQsIGNhbGx9ID0gcmVzLmRhdGEKICAgICAgICBzZWxmLmFwcG9pbnRtZW50cyA9IGFwcG9pbnRtZW50cwogICAgICAgIHNlbGYubWVzc2FnZSA9IG1lc3NhZ2UKICAgICAgICBzZWxmLmNoYXQgPSBjaGF0CiAgICAgICAgc2VsZi5jYWxsID0gY2FsbAogICAgICB9CiAgICB9KTsKICB9Cn0K"},{"version":3,"sources":["SettingNotification.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SettingNotification.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"container pt-5\">\n        <div class=\"row\">\n            <div class=\"col-sm-2\"></div>\n            <div class=\"col-sm-8\">\n                <h2 class=\"title-22 pb-4\" style=\"color: #020644\">Notification Settings</h2>\n\n                <ul class=\"list-group notification-list\">\n                    <li class=\"list-group-item notification-title\">\n                        Appointments\n                        <div class=\"material-switch float-right\">\n                            <input\n                                    @change=\"onChangeNotification\"\n                                    id=\"sw_appointments\"\n                                    type=\"checkbox\"\n                                    v-model=\"appointments\">\n                            <label class=\"badge-primary\" for=\"sw_appointments\"></label>\n                        </div>\n                    </li>\n                    <li class=\"list-group-item justify-content-between notification-title\">\n                        Chat\n                        <div class=\"material-switch float-right\">\n                            <input\n                                    @change=\"onChangeNotification\"\n                                    id=\"sw_chat\"\n                                    type=\"checkbox\"\n                                    v-model=\"chat\">\n                            <label class=\"badge-primary\" for=\"sw_chat\"></label>\n                        </div>\n                    </li>\n                    <li class=\"list-group-item justify-content-between notification-title\">\n                        Call\n                        <div class=\"material-switch float-right\">\n                            <input\n                                    @change=\"onChangeNotification\"\n                                    id=\"sw_call\"\n                                    type=\"checkbox\"\n                                    v-model=\"call\">\n                            <label class=\"badge-primary\" for=\"sw_call\"></label>\n                        </div>\n                    </li>\n                    <li class=\"list-group-item justify-content-between notification-title\" v-if=\"appHelper.isClient()\">\n                        Message\n                        <div class=\"material-switch float-right\">\n                            <input\n                                    @change=\"onChangeNotification\"\n                                    id=\"sw_message\"\n                                    type=\"checkbox\"\n                                    v-model=\"message\">\n                            <label class=\"badge-primary\" for=\"sw_message\"></label>\n                        </div>\n                    </li>\n\n                    <li class=\"list-group-item justify-content-between notification-title\" v-if=\"appHelper.isAdmin()\">\n                        Review\n                        <div class=\"material-switch float-right\">\n                            <input\n                                    @change=\"onChangeNotification\"\n                                    id=\"sw_review\"\n                                    type=\"checkbox\"\n                                    v-model=\"review\">\n                            <label class=\"badge-primary\" for=\"sw_message\"></label>\n                        </div>\n                    </li>\n\n                    <li class=\"list-group-item justify-content-between notification-title\" v-if=\"appHelper.isAdmin()\">\n                        Clinic Applicants\n                        <div class=\"material-switch float-right\">\n                            <input\n                                    @change=\"onChangeNotification\"\n                                    id=\"sw_clinic_applicants\"\n                                    type=\"checkbox\"\n                                    v-model=\"clinic_applicants\">\n                            <label class=\"badge-primary\" for=\"sw_message\"></label>\n                        </div>\n                    </li>\n                </ul>\n                <div class=\"centerBtn\">\n                    <button class=\"btn  btnSave m-t-40\">SAVE</button>\n                </div>\n            </div>\n            <div class=\"col-sm-2\"></div>\n        </div>\n    </div>\n</template>\n\n<script>\n  import {appHelper} from \"./../utils/appHelper\";\n  import rf from \"./../api/RequestFactory\";\n\n  export default {\n    name: \"Setting\",\n    data() {\n      return {\n        appHelper,\n        appointments: false,\n        message: false,\n        chat: false,\n        call: false,\n        review: false,\n        clinic_applicants: false\n      }\n    },\n    methods: {\n      onChangeNotification() {\n        let self = this\n        let params = {\n          appointments: self.appoinments,\n          message: self.message,\n          chat: self.chat,\n          call: self.call\n        }\n\n        return rf.getRequest('CommonRequest').updateSettingNotifications(params).then((res) => {\n          self.$store.dispatch('app/showMessage', {message: res.message})\n        });\n      }\n    },\n    mounted() {\n      let self = this\n\n      rf.getRequest('CommonRequest').getSettingNotification().then((res) => {\n        if (res.data) {\n          const {appointments, message, chat, call} = res.data\n          self.appointments = appointments\n          self.message = message\n          self.chat = chat\n          self.call = call\n        }\n      });\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>\n"]}]}