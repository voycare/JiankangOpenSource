{"remainingRequest":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider.voycare.com/src/views/clients/MessageListing.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider.voycare.com/src/views/clients/MessageListing.vue","mtime":1597939243785},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/thread-loader/dist/cjs.js","mtime":1596630678838},{"path":"/var/www/provider.voycare.com/node_modules/babel-loader/lib/index.js","mtime":1596630688999},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js","mtime":1596630687836}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCByZiBmcm9tICIuLi8uLi9hcGkvUmVxdWVzdEZhY3RvcnkiCmltcG9ydCBQYWdpbmF0aW9uIGZyb20gIi4uLy4uL2NvbW1vbi9QYWdpbmF0aW9uIgppbXBvcnQgTWVzc2FnZUxpc3QgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9NZXNzYWdlTGlzdCcKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBQYWdpbmF0aW9uLAogICAgTWVzc2FnZUxpc3QKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtZXNzYWdlczogW10sCiAgICAgIHBhZ2U6IG51bGwsCiAgICAgIHNvcnRfY3JlYXRlZDogJ2Rlc2MnLAogICAgICBjdXJyZW50X3BhZ2U6IDAsCiAgICAgIHRvdGFsX3BhZ2U6IDAsCiAgICAgIGtleTogJycKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICBsZXQgc2VsZiA9IHRoaXMKICAgIHNlbGYuZ2V0TWVzc2FnZXMoc2VsZi5jdXJyZW50X3BhZ2UpOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0TWVzc2FnZXMocGFnZSkgewogICAgICBsZXQgc2VsZiA9IHRoaXMKICAgICAgc2VsZi5jdXJyZW50X3BhZ2UgPSBwYWdlOwogICAgICBsZXQgcGFyYW1zID0gewogICAgICAgIHBhZ2U6IHBhZ2UsCiAgICAgICAgc29ydF9jcmVhdGVkOiBzZWxmLnNvcnRfY3JlYXRlZCwKICAgICAgICBrZXk6IHNlbGYua2V5CiAgICAgIH0KCiAgICAgIHJmLmdldFJlcXVlc3QoJ1VzZXJSZXF1ZXN0JykuZ2V0TWVzc2FnZXMocGFyYW1zKS50aGVuKChyZXMpID0+IHsKICAgICAgICB0aGlzLm1lc3NhZ2VzID0gcmVzLmRhdGEuZGF0YXM7CiAgICAgICAgdGhpcy50b3RhbF9wYWdlID0gcmVzLmRhdGEudG90YWxfcGFnZTsKICAgICAgfSk7CiAgICB9LAoKICAgIG9uTWFya1JlYWRzKCkgewogICAgICBsZXQgc2VsZiA9IHRoaXMKICAgICAgbGV0IHBhcmFtcyA9IHsKICAgICAgICBtZXNzYWdlX2lkczogc2VsZi5zZWxlY3RlZElkcwogICAgICB9CgogICAgICByZi5nZXRSZXF1ZXN0KCdVc2VyUmVxdWVzdCcpLnBvc3RNYXJrUmVhZHMocGFyYW1zKS50aGVuKChyZXMpID0+IHsKICAgICAgICBzZWxmLmdldE1lc3NhZ2VzKCkKICAgICAgfSk7CiAgICB9LAoKICAgIG9uTWFya1VucmVhZHMoKSB7CiAgICAgIGxldCBzZWxmID0gdGhpcwogICAgICBsZXQgcGFyYW1zID0gewogICAgICAgIG1lc3NhZ2VfaWRzOiBzZWxmLnNlbGVjdGVkSWRzCiAgICAgIH0KCiAgICAgIHJmLmdldFJlcXVlc3QoJ1VzZXJSZXF1ZXN0JykucG9zdE1hcmtVblJlYWRzKHBhcmFtcykudGhlbigocmVzKSA9PiB7CiAgICAgICAgc2VsZi5nZXRNZXNzYWdlcygpCiAgICAgIH0pOwogICAgfSwKCiAgICBvbkRlbGV0ZXMoKSB7CiAgICAgIGxldCBzZWxmID0gdGhpcwogICAgICBsZXQgcGFyYW1zID0gewogICAgICAgIG1lc3NhZ2VfaWRzOiBzZWxmLnNlbGVjdGVkSWRzCiAgICAgIH0KCiAgICAgIHJmLmdldFJlcXVlc3QoJ1VzZXJSZXF1ZXN0JykucG9zdE1lc3NhZ2VEZWxldGVzKHBhcmFtcykudGhlbigocmVzKSA9PiB7CiAgICAgICAgc2VsZi5nZXRNZXNzYWdlcygpCiAgICAgIH0pOwogICAgfQogIH0KfQo="},{"version":3,"sources":["MessageListing.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"MessageListing.vue","sourceRoot":"src/views/clients","sourcesContent":["<template>\n  <div >\n    <p class=\"title title-22 title-color \">Messages</p>\n\n    <div class=\"list-content\">\n      <div class=\"row\">\n        <div class=\"col-md-12 m-t-25\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-sm-6\">\n                  <ul class=\"list-unstyled list--actions\">\n                    <li>\n                      <a @click=\"getMessages\" href=\"#\">\n                        <img src=\"/assets/img/icon-refresh.svg\">\n                      </a>\n                    </li>\n                    <li>\n                      <a @click=\"onMarkReads\" href=\"#\">\n                        <img src=\"/assets/img/icon-mail-box.svg\">\n                        <span>Mark as Read</span>\n                      </a>\n                    </li>\n                    <li>\n                      <a @click=\"onMarkUnreads\" href=\"#\">\n                        <img src=\"/assets/img/icon-mail-box-o.svg\">\n                        <span>Mark as Unread</span>\n                      </a>\n                    </li>\n                    <li>\n                      <a @click=\"onDeletes\" href=\"#\">\n                        <img src=\"/assets/img/icon-trash.svg\">\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n                <div class=\"col-sm-6\">\n                  <input class=\"hera-control\" placeholder=\"Search\" type=\"text\" v-model=\"key\">\n                </div>\n              </div>\n\n              <MessageList :messages=\"messages\"></MessageList>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"page\">\n      <Pagination :current-page=\"current_page\" :total-page=\"total_page\"\n                  @pageData=\"getMessages\"></Pagination>\n    </div>\n  </div>\n</template>\n\n<script>\n  import rf from \"../../api/RequestFactory\"\n  import Pagination from \"../../common/Pagination\"\n  import MessageList from '../../components/MessageList'\n\n  export default {\n    components: {\n      Pagination,\n      MessageList\n    },\n    data() {\n      return {\n        messages: [],\n        page: null,\n        sort_created: 'desc',\n        current_page: 0,\n        total_page: 0,\n        key: ''\n      }\n    },\n    mounted() {\n      let self = this\n      self.getMessages(self.current_page);\n    },\n    methods: {\n      getMessages(page) {\n        let self = this\n        self.current_page = page;\n        let params = {\n          page: page,\n          sort_created: self.sort_created,\n          key: self.key\n        }\n\n        rf.getRequest('UserRequest').getMessages(params).then((res) => {\n          this.messages = res.data.datas;\n          this.total_page = res.data.total_page;\n        });\n      },\n\n      onMarkReads() {\n        let self = this\n        let params = {\n          message_ids: self.selectedIds\n        }\n\n        rf.getRequest('UserRequest').postMarkReads(params).then((res) => {\n          self.getMessages()\n        });\n      },\n\n      onMarkUnreads() {\n        let self = this\n        let params = {\n          message_ids: self.selectedIds\n        }\n\n        rf.getRequest('UserRequest').postMarkUnReads(params).then((res) => {\n          self.getMessages()\n        });\n      },\n\n      onDeletes() {\n        let self = this\n        let params = {\n          message_ids: self.selectedIds\n        }\n\n        rf.getRequest('UserRequest').postMessageDeletes(params).then((res) => {\n          self.getMessages()\n        });\n      }\n    }\n  }\n</script>\n"]}]}