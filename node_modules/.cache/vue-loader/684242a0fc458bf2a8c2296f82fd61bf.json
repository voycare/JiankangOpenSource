{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider-stg.hera.health/src/components/AdminAppointmentListing.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/components/AdminAppointmentListing.vue","mtime":1593800348660},{"path":"/var/www/provider-stg.hera.health/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmFsZXJ0LXByb2Nlc3MgewogICAgZm9udC1zdHlsZTogbm9ybWFsOwogICAgZm9udC13ZWlnaHQ6IDUwMDsKICAgIGZvbnQtc2l6ZTogMTJweDsKICAgIGxpbmUtaGVpZ2h0OiAxOHB4OwogICAgY29sb3I6ICM0MzQzNDM7CiAgICBiYWNrZ3JvdW5kOiAjRkZGRkZGOwogICAgYm9yZGVyOiAxcHggc29saWQgIzQzNDM0MzsKICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgICBib3JkZXItcmFkaXVzOiA1cHg7Cn0KCi5hbGVydC1yZWZ1bmRlZCB7CiAgICBmb250LXN0eWxlOiBub3JtYWw7CiAgICBmb250LXdlaWdodDogNTAwOwogICAgZm9udC1zaXplOiAxMnB4OwogICAgbGluZS1oZWlnaHQ6IDE4cHg7CiAgICBjb2xvcjogI0VCNjI3MTsKICAgIGJhY2tncm91bmQ6ICNGRkZGRkY7CiAgICBib3JkZXI6IDFweCBzb2xpZCAjNDM0MzQzOwogICAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICAgIGJvcmRlci1yYWRpdXM6IDVweDsKfQo="},{"version":3,"sources":["AdminAppointmentListing.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AdminAppointmentListing.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"col-md-12\">\n        <div class=\"table-responsive\">\n            <table class=\"table table-striped custom-table\">\n                <thead>\n                <tr>\n                    <th>No.</th>\n                    <th @click=\"orderCreated\" class=\"date\"><span class=\"title-date\">Order Date</span></th>\n                    <th>Client</th>\n                    <th>Clinic</th>\n                    <th>Appt.Date</th>\n                    <th>Appt.Time</th>\n                    <th>Type</th>\n                    <th>Treatment</th>\n                    <th class=\"text-center\">Status</th>\n                    <th class=\"text-center\" v-if=\"showNotify\">Notify</th>\n                    <th class=\"text-center\" v-else-if=\"! isCR\">Extras</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr :key=\"appt.id\" v-for=\"appt in appoinments\">\n                    <td>\n                        <router-link\n                                :to=\"'/appointments/' + appt.id\">\n                            <span class=\"text-blue desc-12\">{{ appt.id | convertAppointmentID }}</span>\n                        </router-link>\n                    </td>\n                    <td>{{appt.created|convertTimeSecondToDate}}</td>\n                    <td><span v-if=\"appt.client\">{{appt.client.first_name}} {{ appt.client.last_name }}</span></td>\n                    <td>{{appt.doctor.clinic}}</td>\n                    <td>{{appt.date|convertTimeSecondToDate}}</td>\n                    <td class=\"text-center\">{{appt.date|convertDateToTime}}</td>\n                    <td>{{appt.mode|convertModeAppointment}}</td>\n                    <td>Surrogacy</td>\n                    <td v-if=\"isCR\">\n                        <p class=\"alert appt--status alert-process\" v-if=\"appt.status == 2 && appt.state == 1\">\n                            Processing</p>\n                        <p class=\"alert appt--status alert-refunded\" v-if=\"appt.status == 2 && appt.state == 2\">\n                            Refunded</p>\n                    </td>\n                    <td v-else>\n                        <p :class=\"Const.STATUS.intToStatusClass(appt.status)\" class=\"alert appt--status\">\n                            {{Const.STATUS.intToString( appt.status )}}\n                        </p>\n                    </td>\n                    <td class=\"text-center\" v-if=\"showNotify\">\n                        <a @click=\"onToggleNotify(appt.id)\" href=\"javascript:void(0)\">\n                            <i :class=\"isBellActive(appt.admin_notify_ids)\" class=\"fa\"></i>\n                        </a>\n                    </td>\n                    <td class=\"text-center\" v-else-if=\"! isCR\">\n                        <p :class=\"Const.STATUS.intToExtraClass(appt.status)\">\n                            <i :class=\"Const.STATUS.intToExtraString( appt.status )\"></i>\n                        </p>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\n  import Utils from \"./../utils/utils\";\n  import Const from \"./../utils/const\"\n  import rf from \"./../api/RequestFactory\"\n\n  export default {\n    props: ['appoinments', 'showNotify', 'isCR'],\n    data() {\n      return {\n        Const,\n        sortCreated: 'desc'\n      }\n    },\n    methods: {\n      onToggleNotify(id) {\n        let self = this\n        rf.getRequest('AdminRequest').postAppointmentNotify(id).then((res) => {\n          self.$emit('onRefresh')\n        })\n      },\n      orderCreated() {\n        if (this.sortCreated === 'desc') {\n          this.sortCreated = 'asc';\n          return\n        }\n        if (this.sortCreated === 'asc') {\n          this.sortCreated = 'desc';\n          return;\n        }\n\n        this.$emit('onSortCreated', this.sortCreated)\n      },\n      isBellActive(admin_notify_ids) {\n        let self = this\n\n        let arr_admin_notify_ids = admin_notify_ids ? JSON.parse(admin_notify_ids) : []\n        let user = Utils.getLocalUser();\n\n        if (arr_admin_notify_ids.indexOf(user.id)) {\n          return 'fa-bell'\n        } else {\n          return 'fa-bell-o'\n        }\n      }\n    }\n  }\n</script>\n\n<style>\n    .alert-process {\n        font-style: normal;\n        font-weight: 500;\n        font-size: 12px;\n        line-height: 18px;\n        color: #434343;\n        background: #FFFFFF;\n        border: 1px solid #434343;\n        box-sizing: border-box;\n        border-radius: 5px;\n    }\n\n    .alert-refunded {\n        font-style: normal;\n        font-weight: 500;\n        font-size: 12px;\n        line-height: 18px;\n        color: #EB6271;\n        background: #FFFFFF;\n        border: 1px solid #434343;\n        box-sizing: border-box;\n        border-radius: 5px;\n    }\n</style>\n"]}]}