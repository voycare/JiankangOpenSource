{"remainingRequest":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider.voycare.com/src/views/clinics/AppointmentReschedule.vue?vue&type=style&index=0&id=6d72ef8a&scoped=true&lang=css&","dependencies":[{"path":"/var/www/provider.voycare.com/src/views/clinics/AppointmentReschedule.vue","mtime":1597939243786},{"path":"/var/www/provider.voycare.com/node_modules/css-loader/dist/cjs.js","mtime":1596630687928},{"path":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1596630687835},{"path":"/var/www/provider.voycare.com/node_modules/postcss-loader/src/index.js","mtime":1596630674284},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js","mtime":1596630687836}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi50aW1lLWJsb2NrIHsKICB3aWR0aDogMjVweDsKICBoZWlnaHQ6IDI1cHg7CiAgYmFja2dyb3VuZDogIzAyMDY0NDsKICBjb2xvcjogI0ZGRkZGRjsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0K"},{"version":3,"sources":["AppointmentReschedule.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiPA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AppointmentReschedule.vue","sourceRoot":"src/views/clinics","sourcesContent":["<template>\n  <div>\n    <BackTo :to=\"'/appointments'\" :text=\"'Back to Appointments'\"/>\n\n    <div class=\"text-right mb-2\" style=\"font-size: 12px; color: #020644; line-height: 25px;\">\n      <span>Pending appointment expires in </span>\n      <span class=\"d-inline-block time-block\" v-html=\"countdown.hour\"></span> hrs\n      <span class=\"d-inline-block time-block\" v-html=\"countdown.minute\"></span> min\n      <span class=\"d-inline-block time-block\" v-html=\"countdown.second\"></span> sec\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-lg-9\">\n        <div class=\"card\" v-if=\"appt\">\n          <AppointmentDetailTable :appt=\"appt\" :isClinic=\"true\" @onRefresh=\"onRefresh\"></AppointmentDetailTable>\n        </div>\n\n        <div class=\"card\" v-if=\"appt\">\n          <div class=\"card-body\">\n            <div class=\"title-18 text-center\" style=\"color: #434343;\">\n              We know last minute changes can happen, please select three(3) new dates\n              you are available for the consulation.\n            </div>\n\n            <div class=\"row mt-4\">\n              <div class=\"col-sm-4\">\n                <div class=\"card card-pink\">\n                  <div class=\"card-body p-3\">\n                    <div class=\"desc-15 mb-3\">{{ appt.id | convertAppointmentID }}</div>\n                    <div class=\"desc-15 mb-4\">\n                      <img src=\"../../assets/appt-schedule.svg\">\n                      {{ appt.date | convertTimeSecondToDateTime }}\n                    </div>\n                    <div class=\"title-18 mb-3\">{{ appt.doctor.name }}</div>\n                    <div class=\"title-18\">{{ apptTypeName }}</div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-sm-8\">\n                <div class=\"accordion\" id=\"apptRescheduleAccordion\">\n                  <div class=\"mb-2\" v-for=\"(option, index) in options\" :key=\"index\">\n                    <div\n                        style=\"border-bottom: 0.5px solid #979797; border-top: 0.5px solid #979797;\"\n                    >\n                      <button\n                          class=\"font-18 btn btn-block text-left font-weight-500 p-0\"\n                          type=\"button\"\n                          data-toggle=\"collapse\"\n                          style=\"color: #020644;\"\n                          :data-target=\"'#option_' + index\"\n                      >\n                        <div class=\"row\">\n                          <span class=\"col-sm-4 py-1\">\n                            <i style=\"color: #93E9BE;\" class=\"fa fa-circle mr-3\"/>\n                            Option {{ index + 1 }}\n                          </span>\n                          <span\n                              class=\"col-sm-4 py-1\"\n                              style=\"color: #434343; background: #F5F8FA;\"\n                          >{{ option.reschedule_time | convertTimeSecondToDate }}</span>\n                          <span\n                              class=\"col-sm-4 py-1\"\n                              style=\"color: #434343; background: #F5F8FA;\"\n                          >{{ option.reschedule_time | convertTimeHHmmZ }}</span>\n                        </div>\n                      </button>\n                    </div>\n\n                    <div\n                        :id=\"'option_' + index\"\n                        class=\"collapse\"\n                        data-parent=\"#apptRescheduleAccordion\"\n                    >\n                      <div class=\"p-3\">\n                        <ClinicRescheduleDateTimePicker\n                            @change=\"handleDateTimeChange\"\n                            :index=\"index\"\n                            :datetime-prop=\"option.reschedule_time\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row mb-5\" v-if=\"appt && appt.status == Const.STATUS.stringToInt('pending')\">\n          <div class=\"col-sm-6 text-center\">\n            <button class=\"btn btn-dark btn-round\" @click=\"onSave\">Reschedule</button>\n          </div>\n          <div class=\"col-sm-6 text-center\">\n            <button class=\"btn btn-round btn-danger\" @click=\"onCancel\">Cancel</button>\n          </div>\n        </div>\n\n        <div class=\"row mb-5\" v-if=\"appt && appt.status == Const.STATUS.stringToInt('confirmed')\">\n          <div class=\"col-12 text-center\">\n            <button class=\"btn btn-danger btn-round pl-5 pr-5\" @click=\"onSave\">Save</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  import DatePicker from \"vue2-datepicker\";\n  import rf from \"../../api/RequestFactory\";\n  import Const from \"./../../utils/const\";\n  import AppointmentDetailTable from \"./../../components/AppointmentDetailTable\";\n  import utils from \"../../utils/utils\";\n  import Multiselect from \"vue-multiselect\";\n  import ClinicRescheduleDateTimePicker from \"../../components/ClinicRescheduleDateTimePicker\";\n  import {mapGetters} from \"vuex\";\n  import BackTo from '../../components/BackTo'\n\n  export default {\n    components: {\n      AppointmentDetailTable,\n      DatePicker,\n      Multiselect,\n      ClinicRescheduleDateTimePicker,\n      BackTo\n    },\n    data() {\n      return {\n        Const,\n        appt: null,\n        id: null,\n        options: [\n          {\n            reschedule_time: new Date().getTime() / 1000,\n          },\n          {\n            reschedule_time: new Date().getTime() / 1000,\n          },\n          {\n            reschedule_time: new Date().getTime() / 1000,\n          },\n        ],\n        countdown_time: 0,\n        countdown: {\n          hour: 0,\n          minute: 0,\n          second: 0\n        }\n      };\n    },\n    computed: {\n      ...mapGetters({\n        appt_types: \"appt_types\",\n      }),\n      apptTypeName() {\n        return this.appt_types[this.appt.type_id];\n      },\n    },\n    mounted() {\n      let self = this;\n      self.id = parseInt(this.$route.params.id);\n\n      self.onRefresh();\n    },\n    methods: {\n      onRefresh() {\n        let self = this;\n\n        rf.getRequest(\"ClinicRequest\")\n          .getAppointmentDetail(self.id)\n          .then((res) => {\n            self.appt = res.data\n            let now = new Date().getTime() / 1000\n            if (now < self.appt.expire_time) {\n              self.countdown_time = self.appt.expire_time - now\n            }\n            if (self.countdown_time) {\n              self.startCountDown()\n            }\n\n            if (self.appt.schedule_times.length) {\n              self.options = self.appt.schedule_times;\n            }\n          });\n      },\n      startCountDown() {\n        let self = this\n\n        setInterval(function () {\n          if (self.countdown_time >= 0) {\n            self.countdown_time--\n\n            self.countdown.hour = Math.floor(self.countdown_time / 60 * 60) % 24\n            self.countdown.minute = Math.floor(self.countdown_time / 60) % 60\n            self.countdown.second = Math.floor(self.countdown_time / 1) % 60\n          }\n        }, 1000);\n      },\n      onSave() {\n        let self = this;\n        let params = {\n          options: self.options,\n        };\n\n        rf.getRequest(\"ClinicRequest\")\n          .postAppointmentReschedule(self.id, params)\n          .then((res) => {\n            self.$store.dispatch(\"app/showModal\", {message: res.message});\n            self.onRefresh();\n          });\n      },\n      onCancel() {\n        let self = this;\n\n        var r = confirm(\"Do you want to cancel this appointment?\");\n        if (!r) return;\n\n        let params = {\n          status: Const.STATUS.stringToInt(\"cancelled\"),\n        };\n\n        rf.getRequest(\"ClinicRequest\")\n          .postAppointmentStatus(self.appt.id, params)\n          .then((res) => {\n            self.appt = res.data;\n\n            if (self.appt.status == Const.STATUS.stringToInt(\"cancelled\")) {\n              self.$store.dispatch(\"app/showModal\", {message: res.message});\n              self.onRefresh();\n            }\n          });\n      },\n      handleDateTimeChange(obj) {\n        let {index, timestamp} = obj;\n        if (this.options[index]) {\n          this.options[index].reschedule_time = timestamp;\n        }\n      },\n    },\n  };\n</script>\n<style scoped>\n  .time-block {\n    width: 25px;\n    height: 25px;\n    background: #020644;\n    color: #FFFFFF;\n    text-align: center;\n  }\n</style>\n"]}]}