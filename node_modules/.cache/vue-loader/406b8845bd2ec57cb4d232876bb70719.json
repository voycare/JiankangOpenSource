{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider-stg.hera.health/src/views/clients/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/views/clients/Dashboard.vue","mtime":1591654825589},{"path":"/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBVVElMUyBmcm9tICIuLy4uLy4uL3V0aWxzL3V0aWxzIgppbXBvcnQgcmYgZnJvbSAiLi8uLi8uLi9hcGkvUmVxdWVzdEZhY3RvcnkiCmltcG9ydCBBcHBvaW50bWVudFdpZGdldCBmcm9tICcuLy4uLy4uL2NvbXBvbmVudHMvQXBwb2ludG1lbnRXaWRnZXQnCmltcG9ydCBUb3BXaWRnZXQgZnJvbSAnLi8uLi8uLi9jb21wb25lbnRzL1RvcFdpZGdldCcKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQ2xpZW50RGFzaGJvYXJkIiwKICBjb21wb25lbnRzOiB7CiAgICBBcHBvaW50bWVudFdpZGdldCwKICAgIFRvcFdpZGdldAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFjY2VwdF9hcHB0czogW10sCiAgICAgIGFjY2VwdF9hcHB0c190b3RhbDogMCwKICAgICAgcGVuZGluZ19hcHB0czogW10sCiAgICAgIHBlbmRpbmdfYXBwdHNfdG90YWw6IDAsCiAgICAgIHRvcF9jbGluaWNzOiBbXSwKICAgICAgdG9wX2Zhdm91cml0ZXM6IFtdLAogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIGxldCBzZWxmID0gdGhpcwoKICAgIC8vIENoZWNrIGxvZ2luLgogICAgaWYgKCFVVElMUy5nZXRMb2NhbFVzZXIoKSkgewogICAgICByZXR1cm4gc2VsZi4kcm91dGVyLnB1c2goe3BhdGg6ICcvbG9naW4nfSkKICAgIH0KCiAgICAvLyBJbml0LgogICAgc2VsZi5nZXRBY2NlcHRBcHB0cygpCiAgICBzZWxmLmdldFBlbmRpbmdBcHB0cygpCiAgICBzZWxmLmdldFRvcENsaW5pY3MoKQogICAgc2VsZi5nZXRNeUZhdm91cml0ZXMoKQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0QWNjZXB0QXBwdHMoKSB7CiAgICAgIGxldCBzZWxmID0gdGhpcwogICAgICBsZXQgcGFyYW1zID0ge2xpbWl0OiA1fQogICAgICBwYXJhbXMuc3RhdHVzX2luID0gJzEsNCcKCiAgICAgIHJmLmdldFJlcXVlc3QoJ1VzZXJSZXF1ZXN0JykuZ2V0QXBwb2ludG1lbnRzKHBhcmFtcykudGhlbigocmVzKSA9PiB7CiAgICAgICAgc2VsZi5hY2NlcHRfYXBwdHMgPSByZXMuZGF0YS5kYXRhcwogICAgICAgIHNlbGYuYWNjZXB0X2FwcHRzX3RvdGFsID0gcmVzLmRhdGEudG90YWxfcGFnZQogICAgICB9KTsKICAgIH0sCiAgICBnZXRQZW5kaW5nQXBwdHMoKSB7CiAgICAgIGxldCBzZWxmID0gdGhpcwogICAgICBsZXQgcGFyYW1zID0ge2xpbWl0OiA1fQogICAgICBwYXJhbXMuc3RhdHVzX2luID0gJzAsMicKCiAgICAgIHJmLmdldFJlcXVlc3QoJ1VzZXJSZXF1ZXN0JykuZ2V0QXBwb2ludG1lbnRzKHBhcmFtcykudGhlbigocmVzKSA9PiB7CiAgICAgICAgc2VsZi5wZW5kaW5nX2FwcHRzID0gcmVzLmRhdGEuZGF0YXMKICAgICAgICBzZWxmLnBlbmRpbmdfYXBwdHNfdG90YWwgPSByZXMuZGF0YS50b3RhbF9wYWdlCiAgICAgIH0pOwogICAgfSwKICAgIGdldFRvcENsaW5pY3MoKSB7CiAgICAgIGxldCBzZWxmID0gdGhpcwogICAgICBsZXQgcGFyYW1zID0ge2xpbWl0OiA1fQoKICAgICAgcmYuZ2V0UmVxdWVzdCgnVXNlclJlcXVlc3QnKS5nZXRUb3BDbGluaWNzKHBhcmFtcykudGhlbigocmVzKSA9PiB7CiAgICAgICAgc2VsZi50b3BfY2xpbmljcyA9IHJlcy5kYXRhLmRhdGFzCiAgICAgIH0pCiAgICB9LAogICAgZ2V0TXlGYXZvdXJpdGVzKCkgewogICAgICBsZXQgc2VsZiA9IHRoaXMKICAgICAgbGV0IHBhcmFtcyA9IHtsaW1pdDogNX0KCiAgICAgIHJmLmdldFJlcXVlc3QoJ1VzZXJSZXF1ZXN0JykuZ2V0TXlGYXZvdXJpdGVzKHBhcmFtcykudGhlbigocmVzKSA9PiB7CiAgICAgICAgc2VsZi50b3BfZmF2b3VyaXRlcyA9IHJlcy5kYXRhLmRhdGFzCiAgICAgIH0pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/views/clients","sourcesContent":["<template>\n    <div>\n        <div class=\"row\">\n            <div class=\"col-12 col-md-6 col-lg-8 col-xl-8\">\n                <appointment-widget :title=\"'Appointment'\" :appts=\"accept_appts\" :disableView=\"true\"></appointment-widget>\n                <appointment-widget :title=\"'My Site Visits'\" :appts=\"pending_appts\" :disableView=\"true\"></appointment-widget>\n            </div>\n            <div class=\"col-12 col-md-6 col-lg-4 col-xl-4\">\n                <top-widget :title=\"'Top Providers'\" :clinics=\"top_clinics\"></top-widget>\n                <top-widget :title=\"'My Favourites'\" :clinic=\"top_favourites\"></top-widget>\n            </div>\n        </div>\n    </div>\n\n</template>\n\n<script>\n  import UTILS from \"./../../utils/utils\"\n  import rf from \"./../../api/RequestFactory\"\n  import AppointmentWidget from './../../components/AppointmentWidget'\n  import TopWidget from './../../components/TopWidget'\n\n  export default {\n    name: \"ClientDashboard\",\n    components: {\n      AppointmentWidget,\n      TopWidget\n    },\n    data() {\n      return {\n        accept_appts: [],\n        accept_appts_total: 0,\n        pending_appts: [],\n        pending_appts_total: 0,\n        top_clinics: [],\n        top_favourites: [],\n      }\n    },\n    mounted() {\n      let self = this\n\n      // Check login.\n      if (!UTILS.getLocalUser()) {\n        return self.$router.push({path: '/login'})\n      }\n\n      // Init.\n      self.getAcceptAppts()\n      self.getPendingAppts()\n      self.getTopClinics()\n      self.getMyFavourites()\n    },\n    methods: {\n      getAcceptAppts() {\n        let self = this\n        let params = {limit: 5}\n        params.status_in = '1,4'\n\n        rf.getRequest('UserRequest').getAppointments(params).then((res) => {\n          self.accept_appts = res.data.datas\n          self.accept_appts_total = res.data.total_page\n        });\n      },\n      getPendingAppts() {\n        let self = this\n        let params = {limit: 5}\n        params.status_in = '0,2'\n\n        rf.getRequest('UserRequest').getAppointments(params).then((res) => {\n          self.pending_appts = res.data.datas\n          self.pending_appts_total = res.data.total_page\n        });\n      },\n      getTopClinics() {\n        let self = this\n        let params = {limit: 5}\n\n        rf.getRequest('UserRequest').getTopClinics(params).then((res) => {\n          self.top_clinics = res.data.datas\n        })\n      },\n      getMyFavourites() {\n        let self = this\n        let params = {limit: 5}\n\n        rf.getRequest('UserRequest').getMyFavourites(params).then((res) => {\n          self.top_favourites = res.data.datas\n        })\n      }\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"]}]}