{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider-stg.hera.health/src/views/AdminTranslator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/views/AdminTranslator.vue","mtime":1590709514503},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBUEkgZnJvbSAiLi4vdXRpbHMvYXBpIjsKaW1wb3J0IFV0aWxzIGZyb20gIi4uL3V0aWxzL3V0aWxzIjsKaW1wb3J0IENsaWVudFV0aWxzIGZyb20gIi4uL3V0aWxzL2NsaWVudFV0aWxzIjsKaW1wb3J0IENvbnN0IGZyb20gIi4uL3V0aWxzL2NvbnN0IgoKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJBZG1pbnRyYW5zbGF0b3IiLAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBVdGlsczogQ2xpZW50VXRpbHMsCiAgICAgICAgICAgIENvbnN0OiBDb25zdCwKICAgICAgICAgICAgdHJhbnNsYXRvcjogewogICAgICAgICAgICAgICAgaWQ6IDAsCiAgICAgICAgICAgICAgICBmaXJzdF9uYW1lOiAiIiwKICAgICAgICAgICAgICAgIGxhc3RfbmFtZTogIiIsCiAgICAgICAgICAgICAgICBlbWFpbDogIiIsCiAgICAgICAgICAgICAgICBhZGRyZXNzOiAiIiwKICAgICAgICAgICAgICAgIGF2YXRhcjogIiIsCiAgICAgICAgICAgICAgICBwaG9uZTogIiIsCiAgICAgICAgICAgICAgICBiaXJ0aGRheTogMAogICAgICAgICAgICB9LAogICAgICAgICAgICB0cmFuc2xhdG9yczogW10sCiAgICAgICAgfQogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgdGhpcy5nZXR0cmFuc2xhdG9yKCkKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgZ2V0dHJhbnNsYXRvcigpIHsKICAgICAgICAgICAgZmV0Y2goQVBJLmdldEFwaShBUEkuQURNSU4uQ0xJRU5ULkxJU1QpLCB7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAgICAgICAgICAgYXV0aG9yaXphdGlvbjogVXRpbHMuZ2V0TG9jYWxVc2VyKCkudG9rZW4KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICAgICAgICAgICAgdHlwZTogMSwKICAgICAgICAgICAgICAgICAgICBzb3J0X2NyZWF0ZWQ6ICJhc2MiCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9KS50aGVuKHJlcyA9PiByZXMuanNvbigpKS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLnRyYW5zbGF0b3JzID0gcmVzLmRhdGEuZGF0YXM7CiAgICAgICAgICAgIH0pLmNhdGNoKGUgPT4gewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZSkKICAgICAgICAgICAgfSk7CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["AdminTranslator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AdminTranslator.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"content\">\n        <div class=\"row\">\n            <div class=\"col-sm-8\">\n                <h4 class=\"page-title bold\">Translators</h4>\n            </div>\n            <div class=\"col-sm-4 text-right\">\n                <button class=\"btn btn-pink btn-rounded\">Add translator</button>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <span class=\"fa fa-filter\"></span>\n                <select style=\"margin-left: 10px\">\n                    <option>10</option>\n                </select>\n            </div>\n            <div class=\"col-sm-12\">\n                <div class=\"table-responsive table table-bordered table-striped\">\n                    <table class=\"table mb-0\">\n                        <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Phone</th>\n                            <th>Email</th>\n                            <th></th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr v-for=\"(translator, index) in translators\" :key=\"index\">\n                            <td>{{Utils.getName( translator)}}</td>\n                            <td>{{translator.phone}}</td>\n                            <td>{{translator.email}}</td>\n                            <td>\n                                <a href=\"#\">\n                                    <svg class=\"bi bi-three-dots-vertical\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"\n                                         fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path fill-rule=\"evenodd\"\n                                              d=\"M9.5 13a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm0-5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm0-5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z\"\n                                              clip-rule=\"evenodd\"/>\n                                    </svg>\n                                </a>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import API from \"../utils/api\";\n    import Utils from \"../utils/utils\";\n    import ClientUtils from \"../utils/clientUtils\";\n    import Const from \"../utils/const\"\n\n\n    export default {\n        name: \"Admintranslator\",\n        data() {\n            return {\n                Utils: ClientUtils,\n                Const: Const,\n                translator: {\n                    id: 0,\n                    first_name: \"\",\n                    last_name: \"\",\n                    email: \"\",\n                    address: \"\",\n                    avatar: \"\",\n                    phone: \"\",\n                    birthday: 0\n                },\n                translators: [],\n            }\n        },\n        mounted() {\n            this.gettranslator()\n        },\n        methods: {\n            gettranslator() {\n                fetch(API.getApi(API.ADMIN.CLIENT.LIST), {\n                    method: 'post',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                        authorization: Utils.getLocalUser().token\n                    },\n                    body: JSON.stringify({\n                        type: 1,\n                        sort_created: \"asc\"\n                    })\n                }).then(res => res.json()).then(res => {\n                    this.translators = res.data.datas;\n                }).catch(e => {\n                    console.log(e)\n                });\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>"]}]}