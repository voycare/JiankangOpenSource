{"remainingRequest":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider.voycare.com/src/views/admin/ClinicApplicants.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider.voycare.com/src/views/admin/ClinicApplicants.vue","mtime":1597939243772},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/thread-loader/dist/cjs.js","mtime":1596630678838},{"path":"/var/www/provider.voycare.com/node_modules/babel-loader/lib/index.js","mtime":1596630688999},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js","mtime":1596630687836}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7bWFwR2V0dGVyc30gZnJvbSAndnVleCcKCmltcG9ydCBDb25zdCBmcm9tICIuLy4uLy4uL3V0aWxzL2NvbnN0IgppbXBvcnQgcmYgZnJvbSAiLi4vLi4vYXBpL1JlcXVlc3RGYWN0b3J5IgppbXBvcnQgUGFnaW5hdGlvbiBmcm9tICIuLi8uLi9jb21tb24vUGFnaW5hdGlvbiIKaW1wb3J0IEFkbWluQ2xpbmljTGlzdGluZyBmcm9tICcuLi8uLi9jb21wb25lbnRzL0FkbWluQ2xpbmljTGlzdGluZycKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBQYWdpbmF0aW9uLAogICAgQWRtaW5DbGluaWNMaXN0aW5nCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgQ29uc3QsCiAgICAgIGNsaW5pY3M6IFtdLAogICAgICBjdXJyZW50X3BhZ2U6IDEsCiAgICAgIHNvcnRfY3JlYXRlZDogJ2Rlc2MnLAogICAgICBuYW1lOiAnJywKICAgICAgdG90YWxfcGFnZTogMSwKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBHZXR0ZXJzKFsnY291bnRyaWVzJywgJ2FwcHRfdHlwZXMnLCAnYXBwdF9zdGF0dXMnXSkKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldENsaW5pY0FwcGxpY2FudHMocGFnZSkgewogICAgICB0aGlzLmN1cnJlbnRfcGFnZSA9IHBhZ2U7CiAgICAgIGxldCBwYXJhbXMgPSB7CiAgICAgICAgcGFnZTogcGFnZQogICAgICB9OwogICAgICByZi5nZXRSZXF1ZXN0KCdBZG1pblJlcXVlc3QnKS5nZXRDbGluaWNBcHBsaWNhbnRzKHBhcmFtcykudGhlbigocmVzKSA9PiB7CiAgICAgICAgdGhpcy5jbGluaWNzID0gcmVzLmRhdGEuZGF0YXM7CiAgICAgICAgdGhpcy50b3RhbF9wYWdlID0gcmVzLmRhdGEudG90YWxfcGFnZTsKICAgICAgfSk7CiAgICB9LAogICAgb25Tb3J0Q3JlYXRlZCgpIHsKICAgICAgdGhpcy5nZXRDbGluaWNBcHBsaWNhbnRzKDEpOwogICAgfQogIH0sCgogIG1vdW50ZWQoKSB7CiAgICBsZXQgc2VsZiA9IHRoaXMKCiAgICBzZWxmLiRzdG9yZS5kaXNwYXRjaCgnZ2V0Q291bnRyaWVzJykKICAgIHNlbGYuJHN0b3JlLmRpc3BhdGNoKCdnZXRBcHBvaW50bWVudE1ldGFzJykKICAgIHNlbGYuZ2V0Q2xpbmljQXBwbGljYW50cyh0aGlzLmN1cnJlbnRfcGFnZSk7CiAgfQp9Cg=="},{"version":3,"sources":["ClinicApplicants.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ClinicApplicants.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div>\n    <p class=\"title title-22\">Clinic Applicants</p>\n\n    <div class=\"list-content\">\n      <AdminClinicListing :clinics=\"clinics\" @onRefresh=\"getClinicApplicants(current_page)\"></AdminClinicListing>\n    </div>\n\n    <div class=\"page\">\n      <Pagination :current-page=\"current_page\" :total-page=\"total_page\"\n                  @pageData=\"getClinicApplicants\"></Pagination>\n    </div>\n  </div>\n</template>\n\n<script>\n  import {mapGetters} from 'vuex'\n\n  import Const from \"./../../utils/const\"\n  import rf from \"../../api/RequestFactory\"\n  import Pagination from \"../../common/Pagination\"\n  import AdminClinicListing from '../../components/AdminClinicListing'\n\n  export default {\n    components: {\n      Pagination,\n      AdminClinicListing\n    },\n    data() {\n      return {\n        Const,\n        clinics: [],\n        current_page: 1,\n        sort_created: 'desc',\n        name: '',\n        total_page: 1,\n      }\n    },\n    computed: {\n      ...mapGetters(['countries', 'appt_types', 'appt_status'])\n    },\n    methods: {\n      getClinicApplicants(page) {\n        this.current_page = page;\n        let params = {\n          page: page\n        };\n        rf.getRequest('AdminRequest').getClinicApplicants(params).then((res) => {\n          this.clinics = res.data.datas;\n          this.total_page = res.data.total_page;\n        });\n      },\n      onSortCreated() {\n        this.getClinicApplicants(1);\n      }\n    },\n\n    mounted() {\n      let self = this\n\n      self.$store.dispatch('getCountries')\n      self.$store.dispatch('getAppointmentMetas')\n      self.getClinicApplicants(this.current_page);\n    }\n  }\n</script>\n"]}]}