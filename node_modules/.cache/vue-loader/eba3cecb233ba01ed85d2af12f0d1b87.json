{"remainingRequest":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider.voycare.com/src/views/clients/Messages.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/var/www/provider.voycare.com/src/views/clients/Messages.vue","mtime":1596630773559},{"path":"/var/www/provider.voycare.com/node_modules/css-loader/dist/cjs.js","mtime":1596630687928},{"path":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1596630687835},{"path":"/var/www/provider.voycare.com/node_modules/postcss-loader/src/index.js","mtime":1596630674284},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js","mtime":1596630687836}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmxpc3QtLWFjdGlvbnMgbGkgewogIGRpc3BsYXk6IGlubGluZTsKICBjb2xvcjogI0VCNjI3MTsKICBtYXJnaW4tcmlnaHQ6IDQwcHg7CiAgbGluZS1oZWlnaHQ6IDQwcHg7Cn0KCi5saXN0LS1hY3Rpb25zIGxpIGEgewogIGNvbG9yOiAjRUI2MjcxOwp9CgoubGlzdC0tYWN0aW9ucyBpbWcgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB0b3A6IC0ycHg7CiAgbWFyZ2luLXJpZ2h0OiAxMHB4Owp9Cg=="},{"version":3,"sources":["Messages.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgJA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Messages.vue","sourceRoot":"src/views/clients","sourcesContent":["<template>\n  <div class=\"content\">\n    <p class=\"title title-22 title-color \">Messages</p>\n\n    <div class=\"list-content\">\n      <div class=\"row\">\n        <div class=\"col-md-12 m-t-25\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-sm-6\">\n                  <ul class=\"list-unstyled list--actions\">\n                    <li>\n                      <a @click=\"getMessages\" href=\"#\">\n                        <img src=\"/assets/img/icon-refresh.svg\">\n                      </a>\n                    </li>\n                    <li>\n                      <a @click=\"onMarkReads\" href=\"#\">\n                        <img src=\"/assets/img/icon-mail-box.svg\">\n                        <span>Mark as Read</span>\n                      </a>\n                    </li>\n                    <li>\n                      <a @click=\"onMarkUnreads\" href=\"#\">\n                        <img src=\"/assets/img/icon-mail-box-o.svg\">\n                        <span>Mark as Unread</span>\n                      </a>\n                    </li>\n                    <li>\n                      <a @click=\"onDeletes\" href=\"#\">\n                        <img src=\"/assets/img/icon-trash.svg\">\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n                <div class=\"col-sm-6\">\n                  <input class=\"hera-control\" placeholder=\"Search\" type=\"text\" v-model=\"key\">\n                </div>\n              </div>\n\n              <MessageList :messages=\"messages\"></MessageList>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"page\">\n      <Pagination :current-page=\"currentPage\" :total-page=\"totalPage\"\n                  @pageData=\"getMessages\"></Pagination>\n    </div>\n  </div>\n</template>\n\n<script>\n  import rf from \"../../api/RequestFactory\"\n  import Pagination from \"../../common/Pagination\"\n  import MessageList from '../../components/MessageList'\n\n  export default {\n    components: {\n      Pagination,\n      MessageList\n    },\n    data() {\n      return {\n        messages: [],\n        page: null,\n        sortCreated: 'desc',\n        currentPage: 0,\n        totalPage: 0,\n        key: ''\n      }\n    },\n    mounted() {\n      let self = this\n      self.getMessages(self.currentPage);\n    },\n    methods: {\n      getMessages(page) {\n        let self = this\n        self.currentPage = page;\n        let params = {\n          page: page,\n          sort_created: self.sortCreated,\n          key: self.key\n        }\n\n        rf.getRequest('UserRequest').getMessages(params).then((res) => {\n          this.messages = res.data.datas;\n          this.totalPage = res.data.total_page;\n        });\n      },\n\n      onMarkReads() {\n        let self = this\n        let params = {\n          message_ids: self.selectedIds\n        }\n\n        rf.getRequest('UserRequest').postMarkReads(params).then((res) => {\n          self.getMessages()\n\n          if (res.message) {\n            self.$store.dispatch('app/showModal', {message: res.message})\n          }\n        });\n      },\n\n      onMarkUnreads() {\n        let self = this\n        let params = {\n          message_ids: self.selectedIds\n        }\n\n        rf.getRequest('UserRequest').postMarkUnReads(params).then((res) => {\n          self.getMessages()\n\n          if (res.message) {\n            self.$store.dispatch('app/showModal', {message: res.message})\n          }\n        });\n      },\n\n      onDeletes() {\n        let self = this\n        let params = {\n          message_ids: self.selectedIds\n        }\n\n        rf.getRequest('UserRequest').postMessageDeletes(params).then((res) => {\n          self.getMessages()\n\n          if (res.message) {\n            self.$store.dispatch('app/showModal', {message: res.message})\n          }\n        });\n      }\n    }\n  }\n</script>\n\n<style>\n  .list--actions li {\n    display: inline;\n    color: #EB6271;\n    margin-right: 40px;\n    line-height: 40px;\n  }\n\n  .list--actions li a {\n    color: #EB6271;\n  }\n\n  .list--actions img {\n    position: relative;\n    top: -2px;\n    margin-right: 10px;\n  }\n</style>\n"]}]}