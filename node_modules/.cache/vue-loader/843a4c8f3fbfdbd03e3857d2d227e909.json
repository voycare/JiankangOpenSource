{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider-stg.hera.health/src/views/admin/ClinicAvailableDetail.vue?vue&type=style&index=0&id=11c51e19&scoped=true&lang=css&","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/views/admin/ClinicAvailableDetail.vue","mtime":1595930322228},{"path":"/var/www/provider-stg.hera.health/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYXZhaWxhYmxlLS13cmFwcGVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDIwNjQ0OwogIHBhZGRpbmc6IDE1cHg7Cn0KCi5hdmFpbGFibGUtLWl0ZW0gewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICB3aWR0aDogMTQ1cHg7CiAgaGVpZ2h0OiA2MHB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiAxNXB4Owp9CgouYXZhaWxhYmxlLS1lZGl0IHsKICBwYWRkaW5nOiAxNXB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgYm9yZGVyOiAxcHggc29saWQgI0NCQ0JDQjsKfQouY29uc3VsdGF0aW9uLWRhdGV7CiAgY29sb3I6ICMwMjA2NDQ7CiAgZm9udC1zaXplOiAxcmVtOwp9Cg=="},{"version":3,"sources":["ClinicAvailableDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmRA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ClinicAvailableDetail.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div>\n    <p class=\"mt-5 title title-22\">Consulation Availability</p>\n\n    <div class=\"mb-5\">\n      <p class=\"text-danger title-20\">\n        Step 1: Online consultations\n      </p>\n      <p class=\"f-18\" style=\"font-weight: 500;\">Please use below calendar to select the available time slots you can provide online audio/video\n        consultations to patients on the Hera platform. For China clients, please consider time difference accordingly.</p>\n\n      <div class=\"available--wrapper\">\n        <div :key=\"item.id\" class=\"available--item\" v-for=\"item in online_consulations\">\n          <div @click=\"onEditAvailable(item)\">\n            <span class=\"consultation-date\">{{ item.date | convertTimeSecondToDate }}</span>\n            <b-dropdown no-caret toggle-class=\"text-decoration-none action-icon dropdown-toggle\"\n                        toggle-tag=\"a\" variant=\"link\">\n              <template v-slot:button-content>\n                <i class=\"fa fa-ellipsis-v\"></i>\n              </template>\n              <b-dropdown-item @click=\"onDelete(item.id)\" href=\"#\"><i class=\"fa fa-trash\"></i>Delete\n              </b-dropdown-item>\n            </b-dropdown>\n          </div>\n        </div>\n        <div @click=\"onAddOnlineConsulation\" class=\"available--item\" \n          style=\"line-height: 60px; cursor: pointer;\">\n          <i class=\"fa fa-plus\" style=\"color: #020644;\"></i>\n        </div>\n      </div>\n      <div class=\"available--edit\" v-if=\"toggle_edit && date_selected\">\n        <div class=\"row\">\n          <div class=\"col-sm-6\">\n            <date-picker :inline=\"true\" @change=\"onChangeCalendar(false)\" v-model=\"date_selected\"\n                         value-type=\"timestamp\"></date-picker>\n          </div>\n          <div class=\"col-sm-6 text-center\">\n            <p>Available appointments on <strong>{{ (date_selected / 1000) | convertTimeSecondToDate\n              }}</strong>.</p>\n            <p>Please select as many available times as you wish.</p>\n\n            <select @change=\"onChangeTime(false)\" class=\"form-control\" v-model=\"time_selected\">\n              <option :key=\"time.id\" :value=\"time.id\" v-for=\"time in time_ranges\">{{\n                time.hour.toString().padStart(2, '0') }}:{{ time.minute.toString().padStart(2, '0') }}\n              </option>\n            </select>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"mb-5\">\n      <p class=\"text-danger title-20\">\n        Step 2: Site visit appointments\n      </p>\n      <p>Please use below calendar to select the available time slots you can provide site visit appointment to\n        patients on the\n        Hera platform. For China clients, please consider time difference accordingly.</p>\n\n      <div class=\"available--wrapper\">\n        <div :key=\"item.id\" class=\"available--item\" v-for=\"item in site_visits\">\n          <div @click=\"onEditAvailable(item, true)\">\n            <span>{{ item.date | convertTimeSecondToDate }}</span>\n            <b-dropdown no-caret toggle-class=\"text-decoration-none action-icon dropdown-toggle\"\n                        toggle-tag=\"a\" variant=\"link\">\n              <template v-slot:button-content>\n                <i class=\"fa fa-ellipsis-v\"></i>\n              </template>\n              <b-dropdown-item href=\"#\"><i class=\"fa fa-trash\"></i>Delete</b-dropdown-item>\n            </b-dropdown>\n          </div>\n        </div>\n\n        <div @click=\"onAddSiteVisit\" class=\"available--item\">\n          <i class=\"fa fa-plus mr-2\"></i>\n        </div>\n      </div>\n\n      <div class=\"available--edit\" v-if=\"toggle_edit_site && date_selected_site\">\n        <div class=\"row\">\n          <div class=\"col-sm-6\">\n            <date-picker :inline=\"true\" @change=\"onChangeCalendar(true)\" v-model=\"date_selected_site\"\n                         value-type=\"timestamp\"></date-picker>\n          </div>\n          <div class=\"col-sm-6 text-center\">\n            <p>Available appointments on <strong>{{ (date_selected_site / 1000) | convertTimeSecondToDate\n              }}</strong>.</p>\n            <p>Please select as many available times as you wish.</p>\n\n            <select @change=\"onChangeTime(true)\" class=\"form-control\" v-model=\"time_selected_site\">\n              <option :key=\"time.id\" :value=\"time.id\" v-for=\"time in time_ranges\">{{\n                time.hour.toString().padStart(2, '0') }}:{{ time.minute.toString().padStart(2, '0') }}\n              </option>\n            </select>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import utils from '../../utils/utils'\n  import DatePicker from 'vue2-datepicker'\n  import Const from \"./../../utils/const\"\n  import rf from \"../../api/RequestFactory\"\n\n  export default {\n    components: {\n      DatePicker\n    },\n    data() {\n      let self = this\n\n      return {\n        Const,\n        id: null,\n        online_consulations: [],\n        site_visits: [],\n        toggle_edit: false,\n        toggle_edit_site: false,\n        date_selected: null,\n        date_selected_site: null,\n        time_selected: null,\n        time_selected_site: null,\n        item_selected: null,\n        time_ranges: []\n      }\n    },\n    methods: {\n      getDetail() {\n        let self = this\n\n        rf.getRequest('AdminRequest').getClinicAvailables(self.id).then(res => {\n          self.online_consulations = res.data.online_consulations\n          self.site_visits = res.data.site_visits\n        })\n      },\n      onAddOnlineConsulation() {\n        let self = this\n\n        // Hide edit calendar\n        self.toggle_edit = !self.toggle_edit\n\n        self.online_consulations.push({\n          id: utils.randomStr(6),\n          clinic_id: self.id,\n          type: 1,\n          date: (new Date()).getTime() / 1000\n        })\n      },\n      onAddSiteVisit() {\n        let self = this\n\n        // Hide edit calendar\n        self.toggle_edit_site = !self.toggle_edit_site\n\n        self.site_visits.push({\n          id: utils.randomStr(6),\n          clinic_id: self.id,\n          type: 2,\n          date: (new Date()).getTime() / 1000\n        })\n      },\n      onDelete(idStr) {\n        let self = this\n        let id = parseInt(idStr)\n        var r = confirm(\"Are you want to remove this clinic available?\");\n        if (r != true) {\n          return\n        }\n        if (id > 0) {\n          rf.getRequest('AdminRequest').postClinicAvailableRemove(self.id, {id}).then(res => {\n            window.$store.dispatch('app/showModal', {message: res.message})\n          })\n        }\n\n        for (var i = 0; i < self.online_consulations.length; i++) {\n          if (self.online_consulations[i].id == idStr) {\n            delete self.online_consulations[i]\n          }\n        }\n        for (var j = 0; j < self.site_visits.length; j++) {\n          if (self.site_visits[j].id == idStr) {\n            delete self.site_visits[j]\n          }\n        }\n      },\n      onEditAvailable(item, is_site = false) {\n        let self = this\n\n        // Show calendar edit.\n        if (!is_site) {\n          self.toggle_edit = !self.toggle_edit\n        } else {\n          self.toggle_edit_site = !self.toggle_edit_site\n        }\n\n        let date = new Date(item.date * 1000)\n        if (!is_site) {\n          self.date_selected = date.getTime()\n          self.time_selected = date.getHours() + '_' + date.getMinutes()\n        } else {\n          self.date_selected_site = date.getTime()\n          self.time_selected_site = date.getHours() + '_' + date.getMinutes()\n        }\n        self.item_selected = item\n      },\n      onChangeTime(is_site = false) {\n        let self = this\n\n        self.onChangeCalendar(is_site)\n        if (self.item_selected) {\n          let params = {\n            clinic_available: self.item_selected\n          }\n\n          rf.getRequest('AdminRequest').postClinicAvailableAdd(self.id, params).then(res => {\n            window.$store.dispatch('app/showModal', {message: res.message})\n          })\n        }\n      },\n      onChangeCalendar(is_site = false) {\n        let self = this\n        const date_selected = (!is_site) ? self.date_selected : self.date_selected_site\n        const time_selected = (!is_site) ? self.time_selected : self.time_selected_site\n        let date = new Date(date_selected)\n        if (time_selected) {\n          const times = time_selected.split('_')\n          date.setHours(times[0])\n          date.setMinutes(times[1])\n        }\n\n        for (var i = 0; i < self.online_consulations.length; i++) {\n          if (self.online_consulations[i].id == self.item_selected.id) {\n            self.online_consulations[i].date = date.getTime() / 1000\n            self.item_selected = self.online_consulations[i]\n          }\n        }\n        for (var j = 0; j < self.site_visits.length; j++) {\n          if (self.site_visits[j].id == self.item_selected.id) {\n            self.site_visits[j].date = date.getTime() / 1000\n            self.item_selected = self.site_visits[j]\n          }\n        }\n      }\n    },\n\n    mounted() {\n      let self = this\n\n      self.id = self.$route.params.id\n\n      self.time_ranges = []\n      for (let i = 0; i <= 23; i++) {\n        let minute = 0\n        self.time_ranges.push({\n          id: i + '_' + minute,\n          hour: i,\n          minute\n        })\n        minute = 30\n        self.time_ranges.push({\n          id: i + '_' + minute,\n          hour: i,\n          minute\n        })\n      }\n\n      self.getDetail()\n    }\n  }\n</script>\n\n<style scoped>\n  .available--wrapper {\n    background-color: #020644;\n    padding: 15px;\n  }\n\n  .available--item {\n    display: inline-block;\n    width: 145px;\n    height: 60px;\n    background-color: #fff;\n    vertical-align: middle;\n    text-align: center;\n    margin: 15px;\n  }\n\n  .available--edit {\n    padding: 15px;\n    background-color: #fff;\n    border: 1px solid #CBCBCB;\n  }\n  .consultation-date{\n    color: #020644;\n    font-size: 1rem;\n  }\n</style>\n"]}]}