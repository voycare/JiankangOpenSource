{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider-stg.hera.health/src/views/AdminAppointment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/views/AdminAppointment.vue","mtime":1590709568408},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBUEkgZnJvbSAiLi4vdXRpbHMvYXBpIjsKaW1wb3J0IFV0aWxzIGZyb20gIi4uL3V0aWxzL3V0aWxzIjsKaW1wb3J0IENsaWVudFV0aWxzIGZyb20gIi4uL3V0aWxzL2NsaWVudFV0aWxzIjsKaW1wb3J0IENvbnN0IGZyb20gIi4uL3V0aWxzL2NvbnN0IgoKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJBZG1pbkFwcG9pbnRtZW50IiwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgVXRpbHM6IENsaWVudFV0aWxzLAogICAgICAgICAgICBDb25zdDogQ29uc3QsCiAgICAgICAgICAgIGFwcG9pbnRtZW50OiB7CiAgICAgICAgICAgICAgICBpZDogMCwKICAgICAgICAgICAgICAgIGRhdGU6IDAsCiAgICAgICAgICAgICAgICB0aW1lOiAwLAogICAgICAgICAgICAgICAgbW9kZTogMCwKICAgICAgICAgICAgICAgIHN0YXR1czogMCwKICAgICAgICAgICAgICAgIGNyZWF0ZWQ6IDAsCiAgICAgICAgICAgICAgICBjbGllbnQ6IHsKICAgICAgICAgICAgICAgICAgICBmaXJzdF9uYW1lOiAiIiwKICAgICAgICAgICAgICAgICAgICBsYXN0X25hbWU6ICIiLAogICAgICAgICAgICAgICAgICAgIGJpcnRoZGF5OiAwLAogICAgICAgICAgICAgICAgICAgIGFkZHJlc3M6ICIiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZG9jdG9yOiB7CiAgICAgICAgICAgICAgICAgICAgZmlyc3RfbmFtZTogIiIsCiAgICAgICAgICAgICAgICAgICAgbGFzdF9uYW1lOiAiIiwKICAgICAgICAgICAgICAgICAgICBjbGluaWM6ICIiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9LAogICAgICAgICAgICBhcHBvaW50bWVudHM6IFtdLAogICAgICAgIH0KICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICAgIHRoaXMuZ2V0QXBwb2ludG1lbnQoKQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBnZXRBcHBvaW50bWVudCgpIHsKICAgICAgICAgICAgZmV0Y2goQVBJLmdldEFwaShBUEkuQURNSU4uQVBQT0lOVE1FTlQuTElTVCksIHsKICAgICAgICAgICAgICAgIG1ldGhvZDogJ2dldCcsCiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAgICAgICAgIGF1dGhvcml6YXRpb246IFV0aWxzLmdldExvY2FsVXNlcigpLnRva2VuCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoewogICAgICAgICAgICAgICAgICAgIHR5cGU6IDEsCiAgICAgICAgICAgICAgICAgICAgc29ydF9jcmVhdGVkOiAiYXNjIgogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfSkudGhlbihyZXMgPT4gcmVzLmpzb24oKSkudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgdGhpcy5hcHBvaW50bWVudHMgPSByZXMuZGF0YS5kYXRhczsKICAgICAgICAgICAgfSkuY2F0Y2goZSA9PiB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKQogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["AdminAppointment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AdminAppointment.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"content\">\n        <div class=\"row\">\n            <div class=\"col-sm-8\">\n                <h4 class=\"page-title bold\">Appointments</h4>\n            </div>\n            <div class=\"col-sm-4 text-right\">\n                <button class=\"btn btn-pink btn-rounded\">Add Appointment</button>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <span class=\"fa fa-filter\"></span>\n                <select style=\"margin-left: 10px\">\n                    <option>10</option>\n                </select>\n            </div>\n            <div class=\"col-sm-12\">\n                <div class=\"table-responsive table table-bordered table-striped\">\n                    <table class=\"table mb-0\">\n                        <thead>\n                        <tr>\n                            <th>No</th>\n                            <th>Date</th>\n                            <th>Client</th>\n                            <th>Age</th>\n                            <th>Country</th>\n                            <th>Clinic</th>\n                            <th>Appt. Date</th>\n                            <th>Appt. Time</th>\n                            <th>Type</th>\n                            <th>Status</th>\n                            <th>\n\n                            </th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr v-for=\"(appointment, index) in appointments\" :key=\"index\">\n                            <td>{{\"APT\" + (appointment.id + \"\").padStart(4,\"0\")}}</td>\n                            <td>{{Utils.intToDate(appointment.created, \"YYYY-MM-DD hh:mm A\")}}</td>\n                            <td>{{appointment.client.last_name + \" \" + appointment.client.first_name}}</td>\n                            <td>{{Utils.intToAge( appointment.client.birthday)}}</td>\n                            <td>{{appointment.client.address}}</td>\n                            <td>{{appointment.doctor.clinic}}</td>\n                            <td>{{Utils.intToDate( appointment.date, \"YYYY-MM-DD\")}}</td>\n                            <td>{{Utils.intToHour( appointment.time)}}</td>\n                            <td>{{Const.APPOINTMENT.MODE.intToString( appointment.mode)}}</td>\n                            <td><p class=\"alert\" :class=\"Const.STATUS.intToStatusClass(appointment.status)\"\n                                   style=\"margin-bottom: 0px; padding-top: 2px; padding: 2px 10px\">\n                                {{Const.STATUS.intToString( appointment.status)}}</p>\n                            </td>\n                            <td>\n                                <a href=\"#\">\n                                    <svg class=\"bi bi-three-dots-vertical\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"\n                                         fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path fill-rule=\"evenodd\"\n                                              d=\"M9.5 13a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm0-5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm0-5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z\"\n                                              clip-rule=\"evenodd\"/>\n                                    </svg>\n                                </a>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import API from \"../utils/api\";\n    import Utils from \"../utils/utils\";\n    import ClientUtils from \"../utils/clientUtils\";\n    import Const from \"../utils/const\"\n\n\n    export default {\n        name: \"AdminAppointment\",\n        data() {\n            return {\n                Utils: ClientUtils,\n                Const: Const,\n                appointment: {\n                    id: 0,\n                    date: 0,\n                    time: 0,\n                    mode: 0,\n                    status: 0,\n                    created: 0,\n                    client: {\n                        first_name: \"\",\n                        last_name: \"\",\n                        birthday: 0,\n                        address: \"\"\n                    },\n                    doctor: {\n                        first_name: \"\",\n                        last_name: \"\",\n                        clinic: \"\"\n                    },\n                },\n                appointments: [],\n            }\n        },\n        mounted() {\n            this.getAppointment()\n        },\n        methods: {\n            getAppointment() {\n                fetch(API.getApi(API.ADMIN.APPOINTMENT.LIST), {\n                    method: 'get',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                        authorization: Utils.getLocalUser().token\n                    },\n                    body: JSON.stringify({\n                        type: 1,\n                        sort_created: \"asc\"\n                    })\n                }).then(res => res.json()).then(res => {\n                    this.appointments = res.data.datas;\n                }).catch(e => {\n                    console.log(e)\n                });\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>"]}]}