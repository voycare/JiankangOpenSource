{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider-stg.hera.health/src/components/MessageList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/components/MessageList.vue","mtime":1594334059027},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgbWVzc2FnZXM6IEFycmF5LAogICAgc2hvd19mcm9tOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0sCiAgICBzaG93X3RvOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VsZWN0ZWRJZHM6IFtdLAogICAgICBzZWxlY3RBbGw6IFtdLAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgb25Ub2dnbGVTZWxlY3RBbGwoKSB7CiAgICAgIGxldCBzZWxmID0gdGhpcwogICAgICBpZiAoIXNlbGYuc2VsZWN0QWxsLmxlbmd0aCkgewogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2VsZi5tZXNzYWdlcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgc2VsZi5zZWxlY3RBbGwucHVzaChzZWxmLm1lc3NhZ2VzW2ldLmlkKQogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBzZWxmLnNlbGVjdEFsbCA9IFtdCiAgICAgIH0KCiAgICAgIHNlbGYuc2VsZWN0ZWRJZHMgPSBzZWxmLnNlbGVjdEFsbAogICAgfSwKICB9Cn0K"},{"version":3,"sources":["MessageList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"MessageList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"table-responsive\">\n    <table class=\"table custom-table\">\n      <tbody>\n      <tr>\n        <td><input @click=\"onToggleSelectAll\" type=\"checkbox\"></td>\n        <td colspan=\"3\">Select All</td>\n      </tr>\n      <tr :class=\"! message.read_at ? 'text-bold' : ''\" :key=\"message.id\"\n          v-for=\"message in messages\">\n        <td><input :value=\"message.id\" type=\"checkbox\" v-model=\"selectedIds\"></td>\n        <td v-if=\"! show_from\">\n          <span v-if=\"message.from\">{{ message.from.name }}</span>\n        </td>\n        <td v-if=\"! show_to\">\n          <span v-if=\"message.to\">{{ message.to.name }}</span>\n        </td>\n        <td>{{ message.content }}</td>\n        <td>{{ message.created_at }}</td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n<script>\n  export default {\n    props: {\n      messages: Array,\n      show_from: {\n        type: Boolean,\n        default: true\n      },\n      show_to: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data() {\n      return {\n        selectedIds: [],\n        selectAll: [],\n      }\n    },\n    methods: {\n      onToggleSelectAll() {\n        let self = this\n        if (!self.selectAll.length) {\n          for (let i = 0; i < self.messages.length; i++) {\n            self.selectAll.push(self.messages[i].id)\n          }\n        } else {\n          self.selectAll = []\n        }\n\n        self.selectedIds = self.selectAll\n      },\n    }\n  }\n</script>\n"]}]}