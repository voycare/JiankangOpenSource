{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider-stg.hera.health/src/views/admin/SubsciberListing.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/views/admin/SubsciberListing.vue","mtime":1596585807172},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQYWdpbmF0aW9uIGZyb20gIi4uLy4uL2NvbW1vbi9QYWdpbmF0aW9uIgppbXBvcnQgcmYgZnJvbSAiLi4vLi4vYXBpL1JlcXVlc3RGYWN0b3J5IgoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFBhZ2luYXRpb24sCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2hvd19wb3BvdmVyX2ZpbHRlcjogZmFsc2UsCiAgICAgIGN1cnJlbnRQYWdlOiAxLAogICAgICBzb3J0Q3JlYXRlZDogJ2Rlc2MnLAogICAgICB0b3RhbFBhZ2U6IDEsCiAgICAgIGl0ZW1zOiBbXSwKICAgICAgbGltaXQ6IDEwLAogICAgICBsaW1pdE9wdGlvbnM6IFsKICAgICAgICB7dmFsdWU6IDEwLCB0ZXh0OiAxMH0sCiAgICAgICAge3ZhbHVlOiAyMCwgdGV4dDogMjB9LAogICAgICAgIHt2YWx1ZTogNTAsIHRleHQ6IDUwfQogICAgICBdCiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgbGV0IHNlbGYgPSB0aGlzCiAgICBzZWxmLmdldExpc3Rpbmcoc2VsZi5jdXJyZW50UGFnZSkKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldExpc3RpbmcocGFnZSkgewogICAgICBsZXQgc2VsZiA9IHRoaXMKICAgICAgbGV0IHBhcmFtcyA9IHsKICAgICAgICBwYWdlOiBwYWdlLAogICAgICAgIHNvcnRfY3JlYXRlZDogdGhpcy5zb3J0Q3JlYXRlZCwKICAgICAgICBsaW1pdDogdGhpcy5saW1pdAogICAgICB9OwoKICAgICAgcmYuZ2V0UmVxdWVzdCgnQWRtaW5SZXF1ZXN0JykuZ2V0U3Vic2NyaWJlcnMocGFyYW1zKS50aGVuKHJlcyA9PiB7CiAgICAgICAgc2VsZi5pdGVtcyA9IHJlcy5kYXRhLmRhdGFzCiAgICAgICAgc2VsZi50b3RhbFBhZ2UgPSByZXMuZGF0YS50b3RhbF9wYWdlCiAgICAgICAgc2VsZi5jdXJyZW50UGFnZSA9IHBhZ2UKICAgICAgfSkKICAgIH0sCiAgfQp9Cg=="},{"version":3,"sources":["SubsciberListing.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SubsciberListing.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div class=\"content\">\n    <div class=\"row\">\n      <div class=\"col-sm-6\">\n        <p class=\"title title-22\">Subscribers</p>\n      </div>\n    </div>\n\n\n    <div class=\"list-content\">\n      <div class=\"table-responsive\">\n        <table class=\"table table-striped custom-table table--appt\">\n          <thead>\n          <tr>\n            <th>Email</th>\n            <th>Created</th>\n            <th></th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr v-for=\"item in items\" :key=\"item.id\">\n            <td>{{ item.email }}</td>\n            <td>{{ item.created | convertTimeSecondToDate }}</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n    <div class=\"page\">\n      <Pagination :current-page=\"currentPage\" :total-page=\"totalPage\"\n                  @pageData=\"getListing\"></Pagination>\n    </div>\n  </div>\n</template>\n<script>\n  import Pagination from \"../../common/Pagination\"\n  import rf from \"../../api/RequestFactory\"\n\n  export default {\n    components: {\n      Pagination,\n    },\n    data() {\n      return {\n        show_popover_filter: false,\n        currentPage: 1,\n        sortCreated: 'desc',\n        totalPage: 1,\n        items: [],\n        limit: 10,\n        limitOptions: [\n          {value: 10, text: 10},\n          {value: 20, text: 20},\n          {value: 50, text: 50}\n        ]\n      }\n    },\n    mounted() {\n      let self = this\n      self.getListing(self.currentPage)\n    },\n    methods: {\n      getListing(page) {\n        let self = this\n        let params = {\n          page: page,\n          sort_created: this.sortCreated,\n          limit: this.limit\n        };\n\n        rf.getRequest('AdminRequest').getSubscribers(params).then(res => {\n          self.items = res.data.datas\n          self.totalPage = res.data.total_page\n          self.currentPage = page\n        })\n      },\n    }\n  }\n</script>\n<style>\n</style>\n"]}]}