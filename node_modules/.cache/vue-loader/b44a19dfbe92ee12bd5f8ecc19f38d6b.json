{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider-stg.hera.health/src/views/admin/AdminStatementEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/views/admin/AdminStatementEdit.vue","mtime":1595524727414},{"path":"/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCByZiBmcm9tICIuLi8uLi9hcGkvUmVxdWVzdEZhY3RvcnkiOwoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpZDogbnVsbCwKICAgICAgc3RhdGVtZW50OiB7CiAgICAgICAgaWQ6IG51bGwsCiAgICAgICAgc3RhdGVtZW50X25vOiAnJywKICAgICAgICBzYWxlX3BlcmlvZDogJycsCiAgICAgICAgcGF5bWVudF9kYXRlOiAnJywKICAgICAgICBzdGF0dXM6ICcnLAogICAgICAgIGdyb3NzOiAnJywKICAgICAgICByZWZ1bmQ6ICcnLAogICAgICAgIGZlZTogJycsCiAgICAgICAgbmV0OiAnJywKICAgICAgICBpdGVtczogW10KICAgICAgfSwKICAgICAgY2xpbmljczogW10sCiAgICAgIHNlbGVjdGVkX3RvX2lkOiAnJywKICAgICAgaXNfbG9hZGluZzogZmFsc2UKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICBsZXQgc2VsZiA9IHRoaXMKCiAgICBzZWxmLmlkID0gc2VsZi4kcm91dGUucGFyYW1zLmlkCiAgICBpZiAoc2VsZi5pZCkgewogICAgICBzZWxmLmdldERldGFpbCgpCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBvblNlYXJjaFRvKHF1ZXJ5KSB7CiAgICAgIGxldCBzZWxmID0gdGhpcwoKICAgICAgc2VsZi5pc19sb2FkaW5nID0gdHJ1ZQoKICAgICAgcmYuZ2V0UmVxdWVzdCgnQWRtaW5SZXF1ZXN0JykuZ2V0Q2xpbmljQXBwcm92ZWQoe3NlYXJjaDogcXVlcnl9KS50aGVuKHJlcyA9PiB7CiAgICAgICAgc2VsZi5pc19sb2FkaW5nID0gZmFsc2UKICAgICAgICBzZWxmLmNsaW5pY3MgPSByZXMuZGF0YS5kYXRhcwogICAgICB9KQogICAgfSwKICAgIGdldFRvdGFsKCkgewogICAgICBsZXQgc2VsZiA9IHRoaXMKCiAgICAgIGxldCB0b3RhbCA9IDAKICAgICAgc2VsZi5zdGF0ZW1lbnQuaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4gewogICAgICAgIHRvdGFsICs9IGl0ZW0udG90YWwKICAgICAgfSkKCiAgICAgIHJldHVybiB0b3RhbAogICAgfSwKICAgIGdldERldGFpbCgpIHsKICAgICAgbGV0IHNlbGYgPSB0aGlzCgogICAgICByZi5nZXRSZXF1ZXN0KCdBZG1pblJlcXVlc3QnKS5nZXRTdGF0ZW1lbnREZXRhaWwoc2VsZi5pZCkudGhlbihyZXMgPT4gewogICAgICAgIHNlbGYuc3RhdGVtZW50ID0gcmVzLmRhdGEKICAgICAgICBzZWxmLmNsaW5pY3MgPSBbc2VsZi5zdGF0ZW1lbnQudG9dCiAgICAgICAgc2VsZi5zZWxlY3RlZF90b19pZCA9IHNlbGYuc3RhdGVtZW50LnRvCiAgICAgIH0pCiAgICB9LAogICAgb25BZGRJdGVtKCkgewogICAgICBsZXQgc2VsZiA9IHRoaXMKCiAgICAgIHNlbGYuc3RhdGVtZW50Lml0ZW1zLnB1c2goewogICAgICAgIGlkOiBudWxsLAogICAgICAgIG5hbWU6ICcnLAogICAgICAgIHByaWNlOiAnJywKICAgICAgICBxdWFudGl0eTogJycsCiAgICAgICAgdG90YWw6ICcnCiAgICAgIH0pCiAgICB9LAogICAgb25SZW1vdmVJdGVtKGl0ZW1faWQsIGluZGV4KSB7CiAgICAgIGxldCBzZWxmID0gdGhpcwoKICAgICAgdmFyIHIgPSBjb25maXJtKCJBcmUgeW91IHdhbnQgdG8gcmVtb3ZlIHRoaXMgY2xpbmljPyIpOwogICAgICBpZiAociA9PSB0cnVlKSB7CiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzZWxmLnN0YXRlbWVudC5pdGVtcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgaWYgKGkgPT0gaW5kZXgpIHsKICAgICAgICAgICAgZGVsZXRlIHNlbGYuc3RhdGVtZW50Lml0ZW1zW2ldCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgb25TYXZlRHJhZnQoKSB7CiAgICAgIGxldCBzZWxmID0gdGhpcwoKICAgICAgbGV0IHBhcmFtcyA9IHNlbGYuc3RhdGVtZW50CiAgICAgIHBhcmFtcy5pZCA9IHNlbGYuaWQKICAgICAgcGFyYW1zLnN0YXR1cyA9IDEgLy8gRHJhZnQuCiAgICAgIGlmIChzZWxmLnNlbGVjdGVkX3RvX2lkKSB7CiAgICAgICAgcGFyYW1zLnRvX2lkID0gc2VsZi5zZWxlY3RlZF90b19pZC5pZAogICAgICB9CgogICAgICByZi5nZXRSZXF1ZXN0KCdBZG1pblJlcXVlc3QnKS5wb3N0U3RhdGVtZW50cyhwYXJhbXMpLnRoZW4ocmVzID0+IHsKICAgICAgICBzZWxmLnN0YXRlbWVudCA9IHJlcy5kYXRhCiAgICAgIH0pCiAgICB9LAogICAgb25TZW5kKCkgewogICAgICBsZXQgc2VsZiA9IHRoaXMKICAgICAgbGV0IHBhcmFtcyA9IHNlbGYuc3RhdGVtZW50CiAgICAgIHBhcmFtcy5pZCA9IHNlbGYuaWQKICAgICAgcGFyYW1zLnN0YXR1cyA9IDIgLy8gUHVibGlzaC4KICAgICAgaWYgKHNlbGYuc2VsZWN0ZWRfdG9faWQpIHsKICAgICAgICBwYXJhbXMudG9faWQgPSBzZWxmLnNlbGVjdGVkX3RvX2lkLmlkCiAgICAgIH0KCiAgICAgIHJmLmdldFJlcXVlc3QoJ0FkbWluUmVxdWVzdCcpLnBvc3RTdGF0ZW1lbnRzKHBhcmFtcykudGhlbihyZXMgPT4gewogICAgICAgIHNlbGYuc3RhdGVtZW50ID0gcmVzLmRhdGEKICAgICAgfSkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["AdminStatementEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"AdminStatementEdit.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div class=\"content\" v-if=\"statement\">\n    <div class=\"row mb-3\">\n      <div class=\"col-sm-6\">\n        <router-link\n            to=\"/payments\"\n        >\n          <img src=\"/assets/img/icon_back.png\"> <span class=\"back\">Back to Clinic Statement</span>\n        </router-link>\n      </div>\n    </div>\n\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <div class=\"row mb-3\">\n          <div class=\"col-sm-3\">\n            <label>Statement NO.</label>\n            <input type=\"text\" class=\"form-control\" v-model=\"statement.statement_no\">\n          </div>\n          <div class=\"col-sm-3\">\n            <label>Sales Period</label>\n            <input type=\"date\" class=\"form-control\" v-model=\"statement.sale_period\">\n          </div>\n          <div class=\"col-sm-3\">\n            <label>Payment Date</label>\n            <input type=\"email\" class=\"form-control\" v-model=\"statement.payment_date\">\n          </div>\n        </div>\n\n        <div class=\"row mb-3\">\n          <div class=\"col-sm-3\">\n            <label>From</label>\n            <input type=\"text\" class=\"form-control\" v-model=\"statement.from_id\">\n          </div>\n          <div class=\"col-sm-3\">\n            <label>To</label>\n            <multiselect v-model=\"selected_to_id\"\n                         deselect-label=\"Can't remove this value\"\n                         label=\"name\"\n                         track-by=\"id\"\n                         placeholder=\"Select one\"\n                         :options=\"clinics\"\n                         :loading=\"is_loading\"\n                         @search-change=\"onSearchTo\"\n                         :allow-empty=\"false\">\n              <template slot=\"singleLabel\" slot-scope=\"{ option }\">\n                <div>{{ option.name }}</div>\n                <small class=\"text-muted\">ID {{ option.id }}</small> - <small>{{ option.email }}</small>\n              </template>\n            </multiselect>\n          </div>\n        </div>\n\n        <table class=\"table table--appt\">\n          <thead>\n          <tr>\n            <th>Date</th>\n            <th>Name</th>\n            <th>Appointment No</th>\n            <th style=\"width: 120px; text-align: center\">Amount</th>\n            <th></th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr v-for=\"(item, index) in statement.items\" :key=\"item.id\">\n            <td>\n              <input type=\"date\" class=\"form-control\" v-model=\"item.item_date\">\n            </td>\n            <td>\n              <input type=\"text\" class=\"form-control\" v-model=\"item.name\">\n            </td>\n            <td>\n              <input type=\"text\" class=\"form-control\" v-model=\"item.appointment_no\">\n            </td>\n            <td>\n              <input type=\"text\" class=\"form-control\" v-model=\"item.amount\">\n            </td>\n            <td>\n              <button class=\"btn btn-link\" @click=\"onRemoveItem(item.id, index)\"><i class=\"fa fa-trash\"></i></button>\n            </td>\n          </tr>\n          <tr>\n            <td colspan=\"3\" class=\"text-right\">Gross Sales</td>\n            <td><input type=\"number\" class=\"form-control\" v-model=\"statement.gross\"></td>\n            <td>\n              <button class=\"btn btn-link\" @click=\"onAddItem\"><i class=\"fa fa-plus mr-2\"></i></button>\n            </td>\n          </tr>\n          <tr>\n            <td colspan=\"3\" class=\"text-right\">Refund Sales</td>\n            <td><input type=\"number\" class=\"form-control\" v-model=\"statement.refund\"></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td colspan=\"3\" class=\"text-right\">Hera Sales</td>\n            <td><input type=\"number\" class=\"form-control\" v-model=\"statement.fee\"></td>\n            <td></td>\n          </tr>\n          <tr>\n            <td colspan=\"3\" class=\"text-right\">Net</td>\n            <td><input type=\"number\" class=\"form-control\" v-model=\"statement.net\" readonly></td>\n          </tr>\n          </tbody>\n        </table>\n\n        <div class=\"row\">\n          <div class=\"col-sm-6\">\n            <button class=\"btn btn-success\" @click=\"onSend\">Send</button>\n          </div>\n          <div class=\"col-sm-6\">\n            <button class=\"btn btn-dark\" @click=\"onSaveDraft\">Save as Draft</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import rf from \"../../api/RequestFactory\";\n\n  export default {\n    data() {\n      return {\n        id: null,\n        statement: {\n          id: null,\n          statement_no: '',\n          sale_period: '',\n          payment_date: '',\n          status: '',\n          gross: '',\n          refund: '',\n          fee: '',\n          net: '',\n          items: []\n        },\n        clinics: [],\n        selected_to_id: '',\n        is_loading: false\n      }\n    },\n    mounted() {\n      let self = this\n\n      self.id = self.$route.params.id\n      if (self.id) {\n        self.getDetail()\n      }\n    },\n    methods: {\n      onSearchTo(query) {\n        let self = this\n\n        self.is_loading = true\n\n        rf.getRequest('AdminRequest').getClinicApproved({search: query}).then(res => {\n          self.is_loading = false\n          self.clinics = res.data.datas\n        })\n      },\n      getTotal() {\n        let self = this\n\n        let total = 0\n        self.statement.items.forEach((item) => {\n          total += item.total\n        })\n\n        return total\n      },\n      getDetail() {\n        let self = this\n\n        rf.getRequest('AdminRequest').getStatementDetail(self.id).then(res => {\n          self.statement = res.data\n          self.clinics = [self.statement.to]\n          self.selected_to_id = self.statement.to\n        })\n      },\n      onAddItem() {\n        let self = this\n\n        self.statement.items.push({\n          id: null,\n          name: '',\n          price: '',\n          quantity: '',\n          total: ''\n        })\n      },\n      onRemoveItem(item_id, index) {\n        let self = this\n\n        var r = confirm(\"Are you want to remove this clinic?\");\n        if (r == true) {\n          for (let i = 0; i < self.statement.items.length; i++) {\n            if (i == index) {\n              delete self.statement.items[i]\n            }\n          }\n        }\n      },\n      onSaveDraft() {\n        let self = this\n\n        let params = self.statement\n        params.id = self.id\n        params.status = 1 // Draft.\n        if (self.selected_to_id) {\n          params.to_id = self.selected_to_id.id\n        }\n\n        rf.getRequest('AdminRequest').postStatements(params).then(res => {\n          self.statement = res.data\n        })\n      },\n      onSend() {\n        let self = this\n        let params = self.statement\n        params.id = self.id\n        params.status = 2 // Publish.\n        if (self.selected_to_id) {\n          params.to_id = self.selected_to_id.id\n        }\n\n        rf.getRequest('AdminRequest').postStatements(params).then(res => {\n          self.statement = res.data\n        })\n      }\n    }\n  }\n</script>\n\n<style></style>\n"]}]}