{"remainingRequest":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider.voycare.com/src/views/admin/ClinicDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider.voycare.com/src/views/admin/ClinicDetail.vue","mtime":1597939243772},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/thread-loader/dist/cjs.js","mtime":1596630678838},{"path":"/var/www/provider.voycare.com/node_modules/babel-loader/lib/index.js","mtime":1596630688999},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js","mtime":1596630687836}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7bWFwR2V0dGVyc30gZnJvbSAndnVleCcKCmltcG9ydCBDb25zdCBmcm9tICIuLy4uLy4uL3V0aWxzL2NvbnN0IgppbXBvcnQgcmYgZnJvbSAiLi4vLi4vYXBpL1JlcXVlc3RGYWN0b3J5IgppbXBvcnQgQ2xpbmljRGV0YWlsRm9ybSBmcm9tICcuLi8uLi9jb21wb25lbnRzL0NsaW5pY0RldGFpbEZvcm0nCgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQ2xpbmljRGV0YWlsRm9ybQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIENvbnN0LAogICAgICBpZDogbnVsbCwKICAgICAgY2xpbmljOiBudWxsCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXREZXRhaWwoKSB7CiAgICAgIGxldCBzZWxmID0gdGhpcwogICAgICByZi5nZXRSZXF1ZXN0KCdBZG1pblJlcXVlc3QnKS5nZXRDbGluaWMoc2VsZi5pZCkudGhlbigocmVzKSA9PiB7CiAgICAgICAgc2VsZi5jbGluaWMgPSByZXMuZGF0YQogICAgICB9KTsKICAgIH0KICB9LAoKICBtb3VudGVkKCkgewogICAgbGV0IHNlbGYgPSB0aGlzCiAgICBzZWxmLmlkID0gc2VsZi4kcm91dGUucGFyYW1zLmlkCgogICAgc2VsZi4kc3RvcmUuZGlzcGF0Y2goJ2dldENvdW50cmllcycpCiAgICBzZWxmLiRzdG9yZS5kaXNwYXRjaCgnZ2V0QXBwb2ludG1lbnRNZXRhcycpCiAgICBpZihzZWxmLmlkKSB7CiAgICAgIHNlbGYuZ2V0RGV0YWlsKCk7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["ClinicDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ClinicDetail.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div class=\"\" id=\"clinic_profile\">\n    <div >\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <p class=\"title title-22\">Clinic Profile</p>\n        </div>\n        <div class=\"col-6 text-right\">\n          <router-link :to=\"'/clinics/' + id + '/edit'\" class=\"btn btn-round\" id=\"editProfileBtn\">\n            <i class=\"fa fa-plus mr-2\"></i>Edit Profile\n          </router-link>\n        </div>\n      </div>\n\n      <ClinicDetailForm :clinic=\"clinic\"></ClinicDetailForm>\n    </div>\n  </div>\n</template>\n\n<script>\n  import {mapGetters} from 'vuex'\n\n  import Const from \"./../../utils/const\"\n  import rf from \"../../api/RequestFactory\"\n  import ClinicDetailForm from '../../components/ClinicDetailForm'\n\n  export default {\n    components: {\n      ClinicDetailForm\n    },\n    data() {\n      return {\n        Const,\n        id: null,\n        clinic: null\n      }\n    },\n    methods: {\n      getDetail() {\n        let self = this\n        rf.getRequest('AdminRequest').getClinic(self.id).then((res) => {\n          self.clinic = res.data\n        });\n      }\n    },\n\n    mounted() {\n      let self = this\n      self.id = self.$route.params.id\n\n      self.$store.dispatch('getCountries')\n      self.$store.dispatch('getAppointmentMetas')\n      if(self.id) {\n        self.getDetail();\n      }\n    }\n  }\n</script>\n"]}]}