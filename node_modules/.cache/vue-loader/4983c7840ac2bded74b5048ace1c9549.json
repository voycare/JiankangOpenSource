{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider-stg.hera.health/src/views/clients/SettingNotification.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/views/clients/SettingNotification.vue","mtime":1591659830942},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCByZiBmcm9tICIuLi8uLi9hcGkvUmVxdWVzdEZhY3RvcnkiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJTZXR0aW5nIiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYXBwb2ludG1lbnRzOiBmYWxzZSwKICAgICAgbWVzc2FnZTogZmFsc2UsCiAgICAgIGNoYXQ6IGZhbHNlLAogICAgICBjYWxsOiBmYWxzZQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgb25DaGFuZ2VOb3RpZmljYXRpb24oKSB7CiAgICAgIGxldCBzZWxmID0gdGhpcwogICAgICBsZXQgcGFyYW1zID0gewogICAgICAgIGFwcG9pbnRtZW50czogc2VsZi5hcHBvaW5tZW50cywKICAgICAgICBtZXNzYWdlOiBzZWxmLm1lc3NhZ2UsCiAgICAgICAgY2hhdDogc2VsZi5jaGF0LAogICAgICAgIGNhbGw6IHNlbGYuY2FsbAogICAgICB9CgogICAgICByZXR1cm4gcmYuZ2V0UmVxdWVzdCgnVXNlclJlcXVlc3QnKS51cGRhdGVTZXR0aW5nTm90aWZpY2F0aW9ucyhwYXJhbXMpLnRoZW4oKHJlcykgPT4gewogICAgICAgIHNlbGYuJHN0b3JlLmRpc3BhdGNoKCdhcHAvc2hvd01lc3NhZ2UnLCB7bWVzc2FnZTogcmVzLm1lc3NhZ2V9KQogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICBsZXQgc2VsZiA9IHRoaXMKCiAgICByZi5nZXRSZXF1ZXN0KCdVc2VyUmVxdWVzdCcpLmdldFNldHRpbmdOb3RpZmljYXRpb24oKS50aGVuKChyZXMpID0+IHsKICAgICAgaWYgKHJlcy5kYXRhKSB7CiAgICAgICAgY29uc3Qge2FwcG9pbnRtZW50cywgbWVzc2FnZSwgY2hhdCwgY2FsbH0gPSByZXMuZGF0YS5zZXR0aW5nCiAgICAgICAgc2VsZi5hcHBvaW50bWVudHMgPSBhcHBvaW50bWVudHMKICAgICAgICBzZWxmLm1lc3NhZ2UgPSBtZXNzYWdlCiAgICAgICAgc2VsZi5jaGF0ID0gY2hhdAogICAgICAgIHNlbGYuY2FsbCA9IGNhbGwKICAgICAgfQogICAgfSk7CiAgfQp9Cg=="},{"version":3,"sources":["SettingNotification.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SettingNotification.vue","sourceRoot":"src/views/clients","sourcesContent":["<template>\n    <div class=\"container pt-5\">\n        <div class=\"row\">\n            <div class=\"col-sm-2\"></div>\n            <div class=\"col-sm-8\">\n                <h2 style=\"color: #020644\" class=\"title-22 pb-4\">Notification Settings</h2>\n\n                <ul class=\"list-group notification-list\">\n                    <li class=\"list-group-item notification-title\">\n                        Appointments\n                        <div class=\"material-switch float-right\">\n                            <input\n                                    v-model=\"appointments\"\n                                    @change=\"onChangeNotification\"\n                                    id=\"sw_appointments\"\n                                    type=\"checkbox\">\n                            <label for=\"sw_appointments\" class=\"badge-primary\"></label>\n                        </div>\n                    </li>\n                    <li class=\"list-group-item justify-content-between notification-title\">\n                        Chat\n                        <div class=\"material-switch float-right\">\n                            <input\n                                    v-model=\"chat\"\n                                    @change=\"onChangeNotification\"\n                                    id=\"sw_chat\"\n                                    type=\"checkbox\">\n                            <label for=\"sw_chat\" class=\"badge-primary\"></label>\n                        </div>\n                    </li>\n                    <li class=\"list-group-item justify-content-between notification-title\">\n                        Call\n                        <div class=\"material-switch float-right\">\n                            <input\n                                    v-model=\"call\"\n                                    @change=\"onChangeNotification\"\n                                    id=\"sw_call\"\n                                    type=\"checkbox\">\n                            <label for=\"sw_call\" class=\"badge-primary\"></label>\n                        </div>\n                    </li>\n                    <li class=\"list-group-item justify-content-between notification-title\">\n                        Message\n                        <div class=\"material-switch float-right\">\n                            <input\n                                    v-model=\"message\"\n                                    @change=\"onChangeNotification\"\n                                    id=\"sw_message\"\n                                    type=\"checkbox\">\n                            <label for=\"sw_message\" class=\"badge-primary\"></label>\n                        </div>\n                    </li>\n                </ul>\n                <div class=\"centerBtn\">\n                    <button  class=\"btn  btnSave m-t-40\" >SAVE</button>\n                </div>\n            </div>\n            <div class=\"col-sm-2\"></div>\n\n\n        </div>\n    </div>\n</template>\n\n<script>\n  import rf from \"../../api/RequestFactory\";\n\n  export default {\n    name: \"Setting\",\n    data() {\n      return {\n        appointments: false,\n        message: false,\n        chat: false,\n        call: false\n      }\n    },\n    methods: {\n      onChangeNotification() {\n        let self = this\n        let params = {\n          appointments: self.appoinments,\n          message: self.message,\n          chat: self.chat,\n          call: self.call\n        }\n\n        return rf.getRequest('UserRequest').updateSettingNotifications(params).then((res) => {\n          self.$store.dispatch('app/showMessage', {message: res.message})\n        });\n      }\n    },\n    mounted() {\n      let self = this\n\n      rf.getRequest('UserRequest').getSettingNotification().then((res) => {\n        if (res.data) {\n          const {appointments, message, chat, call} = res.data.setting\n          self.appointments = appointments\n          self.message = message\n          self.chat = chat\n          self.call = call\n        }\n      });\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"]}]}