{"remainingRequest":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider-stg.hera.health/src/views/admin/MessageCompose.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider-stg.hera.health/src/views/admin/MessageCompose.vue","mtime":1594334059028},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/provider-stg.hera.health/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7bWFwR2V0dGVyc30gZnJvbSAndnVleCcKCmltcG9ydCBDb25zdCBmcm9tICIuLy4uLy4uL3V0aWxzL2NvbnN0IgppbXBvcnQgcmYgZnJvbSAiLi4vLi4vYXBpL1JlcXVlc3RGYWN0b3J5IgoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHt9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtZXNzYWdlOiB7CiAgICAgICAgdG9faWQ6IG51bGwsCiAgICAgICAgc3ViamVjdDogbnVsbCwKICAgICAgICBjb250ZW50OiBudWxsLAogICAgICAgIGlzX2RyYWZ0OiBmYWxzZQogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBvblNlbmQoKSB7CiAgICAgIGxldCBzZWxmID0gdGhpcwogICAgICByZi5nZXRSZXF1ZXN0KCdBZG1pblJlcXVlc3QnKS5wb3N0U2F2ZU1lc3NhZ2Uoc2VsZi5tZXNzYWdlKS50aGVuKHJlcyA9PiB7CiAgICAgICAgd2luZG93LiRzdG9yZS5kaXNwYXRjaCgnYXBwL3Nob3dNb2RhbCcsIHttZXNzYWdlOiByZXMubWVzc2FnZX0pCgogICAgICAgIHJldHVybiBzZWxmLiRyb3V0ZXIucHVzaCgnL21lc3NhZ2Uvc2VudCcpCiAgICAgIH0pCiAgICB9LAogICAgb25EcmFmdCgpIHsKICAgICAgbGV0IHNlbGYgPSB0aGlzCiAgICAgIHNlbGYubWVzc2FnZS5pc19kcmFmdCA9IHRydWUKICAgICAgcmYuZ2V0UmVxdWVzdCgnQWRtaW5SZXF1ZXN0JykucG9zdFNhdmVNZXNzYWdlKHNlbGYubWVzc2FnZSkudGhlbihyZXMgPT4gewogICAgICAgIHdpbmRvdy4kc3RvcmUuZGlzcGF0Y2goJ2FwcC9zaG93TW9kYWwnLCB7bWVzc2FnZTogcmVzLm1lc3NhZ2V9KQogICAgICB9KQogICAgfQogIH0KfQo="},{"version":3,"sources":["MessageCompose.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MessageCompose.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div class=\"\" id=\"clinic_profile\">\n    <div class=\"content\">\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <p class=\"title title-22\">Message Compose</p>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-sm-9\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control\" v-model=\"message.to_id\" placeholder=\"To\">\n              </div>\n              <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control\" v-model=\"message.subject\" placeholder=\"Subject\">\n              </div>\n              <div class=\"form-group\">\n                <textarea v-model=\"message.content\" class=\"form-control\" cols=\"30\" rows=\"10\" placeholder=\"Content\"></textarea>\n              </div>\n              <div class=\"form-group\">\n                <button class=\"btn btn-primary mr-4\" @click=\"onSend\">Send</button>\n                <button class=\"btn btn-danger\" @click=\"onDraft\">Draft</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import {mapGetters} from 'vuex'\n\n  import Const from \"./../../utils/const\"\n  import rf from \"../../api/RequestFactory\"\n\n  export default {\n    components: {},\n    data() {\n      return {\n        message: {\n          to_id: null,\n          subject: null,\n          content: null,\n          is_draft: false\n        }\n      }\n    },\n    methods: {\n      onSend() {\n        let self = this\n        rf.getRequest('AdminRequest').postSaveMessage(self.message).then(res => {\n          window.$store.dispatch('app/showModal', {message: res.message})\n\n          return self.$router.push('/message/sent')\n        })\n      },\n      onDraft() {\n        let self = this\n        self.message.is_draft = true\n        rf.getRequest('AdminRequest').postSaveMessage(self.message).then(res => {\n          window.$store.dispatch('app/showModal', {message: res.message})\n        })\n      }\n    }\n  }\n</script>\n"]}]}