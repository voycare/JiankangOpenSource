{"remainingRequest":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider.voycare.com/src/views/admin/MessageTypeListing.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/var/www/provider.voycare.com/src/views/admin/MessageTypeListing.vue","mtime":1597939243784},{"path":"/var/www/provider.voycare.com/node_modules/css-loader/dist/cjs.js","mtime":1596630687928},{"path":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1596630687835},{"path":"/var/www/provider.voycare.com/node_modules/postcss-loader/src/index.js","mtime":1596630674284},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js","mtime":1596630687836}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5saXN0LS1hY3Rpb25zIGxpIHsKICBkaXNwbGF5OiBpbmxpbmU7CiAgY29sb3I6ICNFQjYyNzE7CiAgbWFyZ2luLXJpZ2h0OiA0MHB4OwogIGxpbmUtaGVpZ2h0OiA0MHB4Owp9CgoubGlzdC0tYWN0aW9ucyBsaSBhIHsKICBjb2xvcjogI0VCNjI3MTsKfQoKLmxpc3QtLWFjdGlvbnMgaW1nIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgdG9wOiAtMnB4OwogIG1hcmdpbi1yaWdodDogMTBweDsKfQo="},{"version":3,"sources":["MessageTypeListing.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoJA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"MessageTypeListing.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div>\n    <p class=\"title title-22 title-color \">{{pageTitle}}</p>\n\n    <div class=\"list-content\">\n      <div class=\"row\">\n        <div class=\"col-md-12 m-t-25\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-sm-6\">\n                  <ul class=\"list-unstyled list--actions\">\n                    <li v-if=\"isTypeSent\">\n                      <a @click=\"getMessages\" href=\"#\">\n                        <img src=\"/assets/img/icon-refresh.svg\">\n                      </a>\n                    </li>\n                    <li v-if=\"isTypeDraft\">\n                      <a @click=\"onDeletes\" href=\"#\">\n                        <img src=\"/assets/img/icon-trash.svg\"> Delete\n                      </a>\n                    </li>\n                    <li v-if=\"!isTypeDraft\">\n                      <a @click=\"onEmptyFolder\" href=\"#\">\n                        <img src=\"/assets/img/icon-trash.svg\">\n                        <span>Empty Folder</span>\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n                <div class=\"col-sm-6\">\n                  <input class=\"form-control\" placeholder=\"Search\" type=\"text\" v-model=\"key\">\n                </div>\n              </div>\n\n              <MessageList\n                  :show_from=\"false\"\n                  :show_to=\"true\"\n                  :messages=\"messages\"></MessageList>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"page\">\n      <Pagination :current-page=\"current_page\" :total-page=\"total_page\"\n                  @pageData=\"getMessages\"></Pagination>\n    </div>\n  </div>\n</template>\n\n<script>\n  import rf from \"../../api/RequestFactory\"\n  import Pagination from \"../../common/Pagination\"\n  import MessageList from '../../components/MessageList'\n\n  export default {\n    components: {\n      Pagination,\n      MessageList\n    },\n    data() {\n      return {\n        messages: [],\n        page: null,\n        sort_created: 'desc',\n        current_page: 0,\n        total_page: 0,\n        key: '',\n      }\n    },\n    computed: {\n      pageTitle(){\n        switch (this.type) {\n          case 'draft':\n            return 'Draft'\n          case 'trash':\n            return 'Trash'\n          default:\n            return 'Sent'\n        }\n      },\n      isTypeDraft(){\n        return this.type === 'draft'\n      },\n      isTypeTrash(){\n        return this.type === 'trash'\n      },\n      isTypeSent(){\n        return this.type === 'sent'\n      },\n      type(){\n        return this.$route.params.type\n      }\n\n    },\n    mounted() {\n    },\n    watch:{\n      type:{\n        immediate: true,\n        handler(){\n          this.getMessages(this.current_page)\n        }\n      }\n    },\n    methods: {\n      getMessages(page) {\n        let self = this\n        self.current_page = page;\n        let params = {\n          page: page,\n          sort_created: self.sort_created,\n          key: self.key,\n          type: self.type\n        }\n\n        rf.getRequest('AdminRequest').getMessages(params).then((res) => {\n          self.messages = res.data.datas;\n          self.total_page = res.data.total_page;\n          self.current_page = page\n        });\n      },\n\n      onDeletes() {\n        let self = this\n        let params = {\n          ids: self.selectedIds\n        }\n\n        rf.getRequest('AdminRequest').postMessageDeletes(params).then((res) => {\n          self.getMessages(self.current_page)\n        });\n      },\n\n      onEmptyFolder() {\n        let self = this\n\n        rf.getRequest('AdminRequest').postMessagesDeleteAll().then(res => {\n          self.getMessages(0)\n        })\n      }\n    }\n  }\n</script>\n\n<style>\n  .list--actions li {\n    display: inline;\n    color: #EB6271;\n    margin-right: 40px;\n    line-height: 40px;\n  }\n\n  .list--actions li a {\n    color: #EB6271;\n  }\n\n  .list--actions img {\n    position: relative;\n    top: -2px;\n    margin-right: 10px;\n  }\n</style>\n"]}]}