{"remainingRequest":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider.voycare.com/src/views/clinics/ClinicAppoinments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider.voycare.com/src/views/clinics/ClinicAppoinments.vue","mtime":1597188728165},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/thread-loader/dist/cjs.js","mtime":1596630678838},{"path":"/var/www/provider.voycare.com/node_modules/babel-loader/lib/index.js","mtime":1596630688999},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js","mtime":1596630687836}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7bWFwR2V0dGVyc30gZnJvbSAndnVleCcKCmltcG9ydCBDb25zdCBmcm9tICIuLy4uLy4uL3V0aWxzL2NvbnN0IgppbXBvcnQgcmYgZnJvbSAiLi4vLi4vYXBpL1JlcXVlc3RGYWN0b3J5IgppbXBvcnQgUGFnaW5hdGlvbiBmcm9tICIuLi8uLi9jb21tb24vUGFnaW5hdGlvbiIKaW1wb3J0IENsaW5pY0FwcG9pbnRtZW50TGlzdGluZyBmcm9tICcuLi8uLi9jb21wb25lbnRzL0NsaW5pY0FwcG9pbnRtZW50TGlzdGluZycKaW1wb3J0IEFkbWluQXBwb2ludG1lbnRGaWx0ZXIgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9BZG1pbkFwcG9pbnRtZW50RmlsdGVyJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJDbGluaWNBcHBvaW5tZW50cyIsCiAgY29tcG9uZW50czogewogICAgUGFnaW5hdGlvbiwKICAgIENsaW5pY0FwcG9pbnRtZW50TGlzdGluZywKICAgIEFkbWluQXBwb2ludG1lbnRGaWx0ZXIKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBDb25zdCwKICAgICAgY291bnRyeTogJycsCiAgICAgIGFwcHRzOiBbXSwKICAgICAgY3VycmVudFBhZ2U6IDEsCiAgICAgIHNvcnRDcmVhdGVkOiAnZGVzYycsCiAgICAgIG5hbWU6ICcnLAogICAgICB0b3RhbFBhZ2U6IDEsCiAgICAgIGZpbHRlcjogewogICAgICAgIHN0YXR1c19pZHM6IFtdLAogICAgICAgIHR5cGVfaWRzOiBbXQogICAgICB9CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgY291bnRyeTogZnVuY3Rpb24gKCkgewogICAgICB0aGlzLmdldExpc3RpbmcoKTsKICAgIH0sCiAgICBzb3J0Q3JlYXRlZDogZnVuY3Rpb24gKCkgewogICAgICB0aGlzLmdldExpc3RpbmcoMSk7CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgLi4ubWFwR2V0dGVycyhbJ2NvdW50cmllcyddKQogIH0sCiAgbW91bnRlZCgpIHsKICAgIGxldCBzZWxmID0gdGhpcwoKICAgIHNlbGYuJHN0b3JlLmRpc3BhdGNoKCdnZXRDb3VudHJpZXMnKQogICAgc2VsZi5nZXRMaXN0aW5nKHNlbGYuY3VycmVudFBhZ2UpCiAgICBjb25zdCBmaWx0ZXJlZCA9IE9iamVjdC5rZXlzKHNlbGYuJHJvdXRlLnF1ZXJ5KQogICAgICAuZmlsdGVyKGtleSA9PiBbJ3N0YXR1c19pZHMnLCAndHlwZV9pZHMnXS5pbmNsdWRlcyhrZXkpKQogICAgICAucmVkdWNlKChvYmosIGtleSkgPT4gewogICAgICAgIG9ialtrZXldID0gc2VsZi4kcm91dGUucXVlcnlba2V5XQogICAgICAgIHJldHVybiBvYmoKICAgICAgfSwge30pCiAgICBzZWxmLmZpbHRlciA9IGZpbHRlcmVkCiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRMaXN0aW5nKHBhZ2UpIHsKICAgICAgbGV0IHNlbGYgPSB0aGlzCiAgICAgIHNlbGYuY3VycmVudFBhZ2UgPSBwYWdlOwogICAgICBsZXQgcGFyYW1zID0gewogICAgICAgIHBhZ2U6IHBhZ2UsCiAgICAgICAgc29ydF9jcmVhdGVkOiB0aGlzLnNvcnRDcmVhdGVkLAogICAgICAgIGNvdW50cnk6IHRoaXMuY291bnRyeQogICAgICB9OwogICAgICByZi5nZXRSZXF1ZXN0KCdDbGluaWNSZXF1ZXN0JykuZ2V0QXBwb2ludG1lbnRzKHBhcmFtcykudGhlbigocmVzKSA9PiB7CiAgICAgICAgdGhpcy5hcHB0cyA9IHJlcy5kYXRhLmRhdGFzOwogICAgICAgIHRoaXMudG90YWxQYWdlID0gcmVzLmRhdGEudG90YWxfcGFnZTsKICAgICAgfSk7CiAgICB9LAogICAgb3JkZXJDcmVhdGVkKCkgewogICAgICBpZiAodGhpcy5zb3J0Q3JlYXRlZCA9PT0gJ2Rlc2MnKSB7CiAgICAgICAgdGhpcy5zb3J0Q3JlYXRlZCA9ICdhc2MnOwogICAgICAgIHJldHVybgogICAgICB9CiAgICAgIGlmICh0aGlzLnNvcnRDcmVhdGVkID09PSAnYXNjJykgewogICAgICAgIHRoaXMuc29ydENyZWF0ZWQgPSAnZGVzYyc7CiAgICAgIH0KICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["ClinicAppoinments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ClinicAppoinments.vue","sourceRoot":"src/views/clinics","sourcesContent":["<template>\n  <div>\n    <p class=\"title title-22\">Appointments</p>\n\n    <AdminAppointmentFilter></AdminAppointmentFilter>\n    <ClinicAppointmentListing :appts=\"appts\" @orderCreated=\"orderCreated\"></ClinicAppointmentListing>\n\n    <div class=\"page\">\n      <Pagination :current-page=\"currentPage\" :total-page=\"totalPage\"\n                  @pageData=\"getListing\"></Pagination>\n    </div>\n  </div>\n</template>\n\n<script>\n  import {mapGetters} from 'vuex'\n\n  import Const from \"./../../utils/const\"\n  import rf from \"../../api/RequestFactory\"\n  import Pagination from \"../../common/Pagination\"\n  import ClinicAppointmentListing from '../../components/ClinicAppointmentListing'\n  import AdminAppointmentFilter from '../../components/AdminAppointmentFilter'\n\n  export default {\n    name: \"ClinicAppoinments\",\n    components: {\n      Pagination,\n      ClinicAppointmentListing,\n      AdminAppointmentFilter\n    },\n    data() {\n      return {\n        Const,\n        country: '',\n        appts: [],\n        currentPage: 1,\n        sortCreated: 'desc',\n        name: '',\n        totalPage: 1,\n        filter: {\n          status_ids: [],\n          type_ids: []\n        }\n      }\n    },\n    watch: {\n      country: function () {\n        this.getListing();\n      },\n      sortCreated: function () {\n        this.getListing(1);\n      }\n    },\n    computed: {\n      ...mapGetters(['countries'])\n    },\n    mounted() {\n      let self = this\n\n      self.$store.dispatch('getCountries')\n      self.getListing(self.currentPage)\n      const filtered = Object.keys(self.$route.query)\n        .filter(key => ['status_ids', 'type_ids'].includes(key))\n        .reduce((obj, key) => {\n          obj[key] = self.$route.query[key]\n          return obj\n        }, {})\n      self.filter = filtered\n    },\n    methods: {\n      getListing(page) {\n        let self = this\n        self.currentPage = page;\n        let params = {\n          page: page,\n          sort_created: this.sortCreated,\n          country: this.country\n        };\n        rf.getRequest('ClinicRequest').getAppointments(params).then((res) => {\n          this.appts = res.data.datas;\n          this.totalPage = res.data.total_page;\n        });\n      },\n      orderCreated() {\n        if (this.sortCreated === 'desc') {\n          this.sortCreated = 'asc';\n          return\n        }\n        if (this.sortCreated === 'asc') {\n          this.sortCreated = 'desc';\n        }\n      },\n    },\n  }\n</script>\n"]}]}