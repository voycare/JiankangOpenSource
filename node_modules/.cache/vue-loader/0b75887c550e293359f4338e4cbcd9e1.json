{"remainingRequest":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider.voycare.com/src/views/clinics/AppoinmentListing.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/provider.voycare.com/src/views/clinics/AppoinmentListing.vue","mtime":1597939243786},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/thread-loader/dist/cjs.js","mtime":1596630678838},{"path":"/var/www/provider.voycare.com/node_modules/babel-loader/lib/index.js","mtime":1596630688999},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js","mtime":1596630687836}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7bWFwR2V0dGVyc30gZnJvbSAndnVleCcKCmltcG9ydCBDb25zdCBmcm9tICIuLy4uLy4uL3V0aWxzL2NvbnN0IgppbXBvcnQgcmYgZnJvbSAiLi4vLi4vYXBpL1JlcXVlc3RGYWN0b3J5IgppbXBvcnQgUGFnaW5hdGlvbiBmcm9tICIuLi8uLi9jb21tb24vUGFnaW5hdGlvbiIKaW1wb3J0IENsaW5pY0FwcG9pbnRtZW50TGlzdGluZyBmcm9tICcuLi8uLi9jb21wb25lbnRzL0NsaW5pY0FwcG9pbnRtZW50TGlzdGluZycKaW1wb3J0IEFkbWluQXBwb2ludG1lbnRGaWx0ZXIgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9BZG1pbkFwcG9pbnRtZW50RmlsdGVyJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJBcHBvaW5tZW50TGlzdGluZyIsCiAgY29tcG9uZW50czogewogICAgUGFnaW5hdGlvbiwKICAgIENsaW5pY0FwcG9pbnRtZW50TGlzdGluZywKICAgIEFkbWluQXBwb2ludG1lbnRGaWx0ZXIKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBDb25zdCwKICAgICAgY291bnRyeTogJycsCiAgICAgIGFwcHRzOiBbXSwKICAgICAgY3VycmVudF9wYWdlOiAxLAogICAgICBzb3J0X2NyZWF0ZWQ6ICdkZXNjJywKICAgICAgbmFtZTogJycsCiAgICAgIHRvdGFsX3BhZ2U6IDEsCiAgICAgIGZpbHRlcjogewogICAgICAgIHN0YXR1c19pZHM6IFtdLAogICAgICAgIHR5cGVfaWRzOiBbXSwKICAgICAgICBsaW1pdDogMTAKICAgICAgfQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGNvdW50cnk6IGZ1bmN0aW9uICgpIHsKICAgICAgdGhpcy5nZXRMaXN0aW5nKCk7CiAgICB9LAogICAgc29ydF9jcmVhdGVkOiBmdW5jdGlvbiAoKSB7CiAgICAgIHRoaXMuZ2V0TGlzdGluZygxKTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBHZXR0ZXJzKFsnY291bnRyaWVzJ10pCiAgfSwKICBtb3VudGVkKCkgewogICAgbGV0IHNlbGYgPSB0aGlzCgogICAgc2VsZi4kc3RvcmUuZGlzcGF0Y2goJ2dldENvdW50cmllcycpCiAgICBzZWxmLmdldExpc3Rpbmcoc2VsZi5jdXJyZW50X3BhZ2UpCiAgICBjb25zdCBmaWx0ZXJlZCA9IE9iamVjdC5rZXlzKHNlbGYuJHJvdXRlLnF1ZXJ5KQogICAgICAuZmlsdGVyKGtleSA9PiBbJ3N0YXR1c19pZHMnLCAndHlwZV9pZHMnXS5pbmNsdWRlcyhrZXkpKQogICAgICAucmVkdWNlKChvYmosIGtleSkgPT4gewogICAgICAgIG9ialtrZXldID0gc2VsZi4kcm91dGUucXVlcnlba2V5XQogICAgICAgIHJldHVybiBvYmoKICAgICAgfSwge30pCiAgICBzZWxmLmZpbHRlciA9IGZpbHRlcmVkCiAgfSwKICBtZXRob2RzOiB7CiAgICBvbkZpbHRlcihwYXJhbXMpIHsKICAgICAgbGV0IHNlbGYgPSB0aGlzCgogICAgICBzZWxmLmNvdW50cnkgPSBwYXJhbXMuY291bnRyeQogICAgICBzZWxmLmZpbHRlci5zdGF0dXNfaWRzID0gcGFyYW1zLnN0YXR1c19pZHMKICAgICAgc2VsZi5maWx0ZXIudHlwZV9pZHMgPSBwYXJhbXMudHlwZV9pZHMKICAgICAgc2VsZi5maWx0ZXIubGltaXQgPSBwYXJhbXMubGltaXQKCiAgICAgIHNlbGYuZ2V0TGlzdGluZygxKQogICAgfSwKICAgIGdldExpc3RpbmcocGFnZSkgewogICAgICBsZXQgc2VsZiA9IHRoaXMKICAgICAgc2VsZi5jdXJyZW50X3BhZ2UgPSBwYWdlOwogICAgICBsZXQgcGFyYW1zID0gewogICAgICAgIHBhZ2U6IHBhZ2UsCiAgICAgICAgc29ydF9jcmVhdGVkOiB0aGlzLnNvcnRfY3JlYXRlZCwKICAgICAgICBjb3VudHJ5OiB0aGlzLmNvdW50cnksCiAgICAgICAgc3RhdHVzX2lkczogc2VsZi5maWx0ZXIuc3RhdHVzX2lkcywKICAgICAgICB0eXBlX2lkczogc2VsZi5maWx0ZXIudHlwZV9pZHMsCiAgICAgICAgbGltaXQ6IHNlbGYuZmlsdGVyLmxpbWl0CiAgICAgIH0KICAgICAgcmYuZ2V0UmVxdWVzdCgnQ2xpbmljUmVxdWVzdCcpLmdldEFwcG9pbnRtZW50cyhwYXJhbXMpLnRoZW4oKHJlcykgPT4gewogICAgICAgIHRoaXMuYXBwdHMgPSByZXMuZGF0YS5kYXRhczsKICAgICAgICB0aGlzLnRvdGFsX3BhZ2UgPSByZXMuZGF0YS50b3RhbF9wYWdlOwogICAgICB9KTsKICAgIH0sCiAgICBvcmRlckNyZWF0ZWQoKSB7CiAgICAgIGlmICh0aGlzLnNvcnRfY3JlYXRlZCA9PT0gJ2Rlc2MnKSB7CiAgICAgICAgdGhpcy5zb3J0X2NyZWF0ZWQgPSAnYXNjJzsKICAgICAgICByZXR1cm4KICAgICAgfQogICAgICBpZiAodGhpcy5zb3J0X2NyZWF0ZWQgPT09ICdhc2MnKSB7CiAgICAgICAgdGhpcy5zb3J0X2NyZWF0ZWQgPSAnZGVzYyc7CiAgICAgIH0KICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["AppoinmentListing.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AppoinmentListing.vue","sourceRoot":"src/views/clinics","sourcesContent":["<template>\n  <div>\n    <p class=\"title title-22\">Appointments</p>\n\n    <AdminAppointmentFilter @filter=\"onFilter\"></AdminAppointmentFilter>\n    <ClinicAppointmentListing :appts=\"appts\" @orderCreated=\"orderCreated\"></ClinicAppointmentListing>\n\n    <div class=\"page\">\n      <Pagination :current-page=\"current_page\" :total-page=\"total_page\"\n                  @pageData=\"getListing\"></Pagination>\n    </div>\n  </div>\n</template>\n\n<script>\n  import {mapGetters} from 'vuex'\n\n  import Const from \"./../../utils/const\"\n  import rf from \"../../api/RequestFactory\"\n  import Pagination from \"../../common/Pagination\"\n  import ClinicAppointmentListing from '../../components/ClinicAppointmentListing'\n  import AdminAppointmentFilter from '../../components/AdminAppointmentFilter'\n\n  export default {\n    name: \"AppoinmentListing\",\n    components: {\n      Pagination,\n      ClinicAppointmentListing,\n      AdminAppointmentFilter\n    },\n    data() {\n      return {\n        Const,\n        country: '',\n        appts: [],\n        current_page: 1,\n        sort_created: 'desc',\n        name: '',\n        total_page: 1,\n        filter: {\n          status_ids: [],\n          type_ids: [],\n          limit: 10\n        }\n      }\n    },\n    watch: {\n      country: function () {\n        this.getListing();\n      },\n      sort_created: function () {\n        this.getListing(1);\n      }\n    },\n    computed: {\n      ...mapGetters(['countries'])\n    },\n    mounted() {\n      let self = this\n\n      self.$store.dispatch('getCountries')\n      self.getListing(self.current_page)\n      const filtered = Object.keys(self.$route.query)\n        .filter(key => ['status_ids', 'type_ids'].includes(key))\n        .reduce((obj, key) => {\n          obj[key] = self.$route.query[key]\n          return obj\n        }, {})\n      self.filter = filtered\n    },\n    methods: {\n      onFilter(params) {\n        let self = this\n\n        self.country = params.country\n        self.filter.status_ids = params.status_ids\n        self.filter.type_ids = params.type_ids\n        self.filter.limit = params.limit\n\n        self.getListing(1)\n      },\n      getListing(page) {\n        let self = this\n        self.current_page = page;\n        let params = {\n          page: page,\n          sort_created: this.sort_created,\n          country: this.country,\n          status_ids: self.filter.status_ids,\n          type_ids: self.filter.type_ids,\n          limit: self.filter.limit\n        }\n        rf.getRequest('ClinicRequest').getAppointments(params).then((res) => {\n          this.appts = res.data.datas;\n          this.total_page = res.data.total_page;\n        });\n      },\n      orderCreated() {\n        if (this.sort_created === 'desc') {\n          this.sort_created = 'asc';\n          return\n        }\n        if (this.sort_created === 'asc') {\n          this.sort_created = 'desc';\n        }\n      },\n    },\n  }\n</script>\n"]}]}