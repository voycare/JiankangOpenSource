{"remainingRequest":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/provider.voycare.com/src/views/admin/Appointments.vue?vue&type=style&index=0&id=27cd5ac3&scoped=true&lang=css&","dependencies":[{"path":"/var/www/provider.voycare.com/src/views/admin/Appointments.vue","mtime":1597188728163},{"path":"/var/www/provider.voycare.com/node_modules/css-loader/dist/cjs.js","mtime":1596630687928},{"path":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1596630687835},{"path":"/var/www/provider.voycare.com/node_modules/postcss-loader/src/index.js","mtime":1596630674284},{"path":"/var/www/provider.voycare.com/node_modules/cache-loader/dist/cjs.js","mtime":1596630677130},{"path":"/var/www/provider.voycare.com/node_modules/vue-loader/lib/index.js","mtime":1596630687836}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKbGFiZWwgewogIGZvbnQtZmFtaWx5OiBQb3BwaW5zOwogIGZvbnQtc3R5bGU6IG5vcm1hbDsKICBmb250LXdlaWdodDogbm9ybWFsOwogIGZvbnQtc2l6ZTogMTBweDsKICBsaW5lLWhlaWdodDogMTVweDsKICAvKiBpZGVudGljYWwgdG8gYm94IGhlaWdodCAqLwogIGNvbG9yOiAjNDM0MzQzOwp9CgouYnRuLWFwcGx5IHsKICB3aWR0aDogMTA4cHg7CiAgaGVpZ2h0OiAxOXB4OwogIGJhY2tncm91bmQ6ICNFQjYyNzE7CiAgYm9yZGVyLXJhZGl1czogNTBweDsKICBjb2xvcjogd2hpdGU7CiAgZm9udC1zaXplOiA5cHg7CiAgYm9yZGVyOiBub25lOwp9Cgo="},{"version":3,"sources":["Appointments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Appointments.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div class=\"content\">\n    <p class=\"title title-22\">Appointments</p>\n    <div class=\"list-content\">\n      <AdminAppointmentFilter @page-limit-change=\"handlePageLimitChange\">\n        <template #more-action>\n          <button class=\"btn btn-sm p-0 btn-white mr-2 extra-icon-btn\">\n            <i class=\"text-success fa fa-check\" /> \n          </button>\n          <button class=\"btn btn-sm p-0 btn-white mr-2 extra-icon-btn\">\n            <i class=\"text-danger fa fa-clock-o\" /> \n          </button>\n          <button class=\"btn btn-sm p-0 btn-white extra-icon-btn\">\n            <i class=\"fa fa-minus\" /> \n          </button>\n        </template>\n      </AdminAppointmentFilter>\n      <span>\n        \n      </span>\n      <AdminAppointmentListing :appoinments=\"appoinments\" @onRefresh=\"getDataAppointments(currentPage)\"\n                               @onSortCreated=\"onSortCreated\"></AdminAppointmentListing>\n    </div>\n\n    <div class=\"page\">\n      <Pagination :current-page=\"currentPage\" :total-page=\"totalPage\"\n                  @pageData=\"getDataAppointments\"></Pagination>\n    </div>\n  </div>\n</template>\n\n<script>\n  import {mapGetters} from 'vuex'\n\n  import Const from \"./../../utils/const\"\n  import rf from \"../../api/RequestFactory\"\n  import Pagination from \"../../common/Pagination\"\n  import AdminAppointmentListing from '../../components/AdminAppointmentListing'\n  import AdminAppointmentFilter from '../../components/AdminAppointmentFilter'\n\n  export default {\n    name: \"Appoinment\",\n    components: {\n      Pagination,\n      AdminAppointmentListing,\n      AdminAppointmentFilter\n    },\n    data() {\n      return {\n        Const,\n        country: '',\n        appoinments: [],\n        currentPage: 1,\n        pageLimit: 10,\n        sortCreated: 'desc',\n        name: '',\n        totalPage: 1,\n      }\n    },\n    watch: {\n      country: function () {\n        this.getDataAppointments();\n      },\n      sortCreated: function () {\n        this.getDataAppointments(1);\n      }\n    },\n    computed: {\n      ...mapGetters(['countries', 'appt_types', 'appt_status'])\n    },\n    methods: {\n      getDataAppointments(page) {\n        this.currentPage = page;\n        let params = {\n          page: page,\n          sort_created: this.sortCreated,\n          // key: this.name,\n          limit: this.pageLimit,\n          country: this.country\n        };\n        rf.getRequest('AdminRequest').getAppointments(params).then((res) => {\n          this.appoinments = res.data.datas;\n          this.totalPage = res.data.total_page;\n        });\n      },\n      onSortCreated() {\n        this.getDataAppointments(1);\n      },\n      onToggleFilter() {\n      },\n      handlePageLimitChange(limit){\n        this.currentPage = 1\n        this.pageLimit = limit\n        this.getDataAppointments(1)\n      }\n    },\n\n    mounted() {\n      let self = this\n\n      self.$store.dispatch('getCountries')\n      self.$store.dispatch('getAppointmentMetas')\n      self.getDataAppointments(this.currentPage);\n    }\n  }\n</script>\n\n<style scoped>\n  label {\n    font-family: Poppins;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 10px;\n    line-height: 15px;\n    /* identical to box height */\n    color: #434343;\n  }\n\n  .btn-apply {\n    width: 108px;\n    height: 19px;\n    background: #EB6271;\n    border-radius: 50px;\n    color: white;\n    font-size: 9px;\n    border: none;\n  }\n  \n</style>\n"]}]}