{"version":3,"sources":["webpack:///./src/assets/trash-bin-dark.svg","webpack:///./src/assets/logo-hera-main.svg","webpack:///./src/api/BaseRequest.js","webpack:///./src/api/request/UserRequest.js","webpack:///./src/api/request/CommonRequest.js","webpack:///./src/api/request/AdminRequest.js","webpack:///./src/api/request/ClinicRequest.js","webpack:///./src/api/RequestFactory.js","webpack:///./src/assets/clinic-home.svg","webpack:///./src/assets/dashboard-un.svg","webpack:///./src/assets/appt-schedule.svg","webpack:///./src/assets/trash-bin.svg","webpack:///./src/assets/hera-logo.svg","webpack:///./src/assets/avt-circle.png"],"names":["module","exports","BaseRequest","process","url","data","headers","Promise","resolve","reject","options","window","axios","post","getUrlPrefix","then","response","message","$store","dispatch","status","catch","error","_errorHandler","params","get","err","first_key","Object","keys","alert","appHelper","isClinic","Utils","removeLocalClinic","isAdmin","removeLocalAdmin","isClient","removeLocalUser","location","href","UserRequest","this","id","parseInt","CommonRequest","AdminRequest","body","ids","ClinicRequest","requestMap","instances","RequestFactory","classname","utils","getLocalUser","defaults","common","token","getLocalAdmin","getLocalClinic","RequestClass","Error","requestInstance"],"mappings":"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","file":"js/app~975f32a3.85229ba4.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/trash-bin-dark.cef00291.svg\";","module.exports = __webpack_public_path__ + \"img/logo-hera-main.229d35fe.svg\";","import Utils from \"../utils/utils\";\nimport {appHelper} from \"../utils/appHelper\"\n\nexport default class BaseRequest {\n  getUrlPrefix() {\n    return process.env.VUE_APP_BASE_URL + 'api/';\n  }\n\n  post(url, data = {}, headers = null) {\n    return new Promise((resolve, reject) => {\n      let options = {}\n      if (headers) {\n        options.headers = headers\n      }\n\n      window.axios\n        .post(this.getUrlPrefix() + url, data, options)\n        .then((response) => {\n          if (response.data.message) {\n            window.$store.dispatch('app/showModal', {message: response.data.message})\n          }\n          if (response.data.status === 200) {\n            resolve(response.data);\n            return;\n          }\n          if (response.status === 200) {\n            resolve(response)\n            return\n          }\n          if (response.data.status === 406) {\n            // window.location.href = \"/login\";\n            return;\n          }\n        })\n        .catch((error) => {\n          this._errorHandler(reject, error);\n        });\n    });\n  }\n\n  get(url, params) {\n    return new Promise((resolve, reject) => {\n      window.axios\n        .get(this.getUrlPrefix() + url, {params})\n        .then((response) => {\n          if (response.data.status === 200) {\n            resolve(response.data);\n            return;\n          }\n          if (response.status === 200) {\n            resolve(response)\n            return\n          }\n\n          // if(response.data.status === 406){\n          //     window.location.href = \"/login\";\n          //     return;\n          // }\n        })\n        .catch((error) => {\n          this._errorHandler(reject, error);\n        });\n    })\n  }\n\n  _errorHandler(reject, err) {\n    if (err.response) {\n      if (err.response.data.status === 414) {\n        let first_key = Object.keys(err.response.data.message)[0]\n        if (first_key) {\n          alert(err.response.data.message[first_key][0])\n        }\n      }\n      if (err.response.data.status === 404) {\n        alert(err.response.data.message)\n      }\n      if (err.response.status === 401) {\n        if (appHelper.isClinic()) {\n          Utils.removeLocalClinic()\n        }\n        if (appHelper.isAdmin()) {\n          Utils.removeLocalAdmin()\n        }\n        if (appHelper.isClient()) {\n          Utils.removeLocalUser()\n        }\n\n        return window.location.href = '/'\n      }\n    }\n    return reject(err);\n  }\n\n}\n","import BaseRequest from \"../BaseRequest\";\n\nexport default class UserRequest extends BaseRequest {\n\n  getAppointments(params) {\n    return this.get('user/appointments', params)\n  }\n\n  getAppointmentDetail(id) {\n    return this.get('user/appointments/' + parseInt(id))\n  }\n\n  postAppointmentStatus(id, params) {\n    return this.post('user/appointments/' + parseInt(id) + '/status', params)\n  }\n\n  postAppointmentCancellation(id, params) {\n    return this.post('user/appointments/' + parseInt(id) + '/cancel', params)\n  }\n\n  getReview(id) {\n    return this.get('user/reviews/' + id)\n  }\n\n  getReviews(params) {\n    return this.get('user/reviews', params)\n  }\n\n  postReview(params) {\n    return this.post('user/create-review/', params)\n  }\n\n  getMessages(params) {\n    return this.get('user/messages', params)\n  }\n\n  postMarkReads(params) {\n    return this.post('user/messages/reads', params)\n  }\n\n  postMarkUnReads(params) {\n    return this.post('user/messages/unreads', params)\n  }\n\n  postMessageDeletes(params) {\n    return this.post('user/messages/deletes', params)\n  }\n\n  getPayments(params) {\n    return this.get('user/payments', params)\n  }\n\n  getPaymentDetail(id) {\n    return this.get('user/payments/' + parseInt(id))\n  }\n\n  postCheckCancelable(id) {\n    return this.post('user/appointments/' + parseInt(id) + 'check_cancel')\n  }\n\n  getTopClinics(params) {\n    return this.get('user/top-clinics', params)\n  }\n\n  getMyFavourites(params) {\n    return this.get('user/my-favourites', params)\n  }\n\n  editProfile(params) {\n    return this.post('user/edit-profile', params)\n  }\n\n  getSetting() {\n    return this.get('user/setting')\n  }\n\n  getSettingLocalization() {\n    return this.get('user/setting-localization')\n  }\n\n  updateSettingLocalization(params) {\n    return this.post('user/setting-localization', params)\n  }\n\n  postForgetPassword(params) {\n    return this.post('auth/forgot-pass', params)\n  }\n}\n","import BaseRequest from \"../BaseRequest\";\n\nexport default class CommonRequest extends BaseRequest {\n  getCountries() {\n    return this.get('list-country');\n  }\n\n  getAppointmentMetas() {\n    return this.get('appointment/metas')\n  }\n\n  getSettingNotification() {\n    return this.get('auth/setting-notification')\n  }\n\n  updateSettingNotifications(params) {\n    return this.post('auth/setting-notification', params)\n  }\n\n  getSettings() {\n    return this.get('settings')\n  }\n\n  getSettingBasic() {\n    return this.get('auth/settings/basic')\n  }\n\n  updateSettingBasic(params) {\n    return this.post('settings/basic', params)\n  }\n}\n","import BaseRequest from \"../BaseRequest\";\n\nexport default class AdminRequest extends BaseRequest {\n\n  getAppointments(params) {\n    return this.get('admin/appointments', params)\n  }\n\n  getAppointmentDetail(id) {\n    return this.get('admin/appointments/' + id)\n  }\n\n  postAppointmentNotify(id) {\n    return this.post('admin/appointments/' + id + '/notify')\n  }\n\n  getAppointmentsCR(params) {\n    return this.get('admin/appointments-cr', params)\n  }\n\n  getAppointmentsTop(params) {\n    return this.get('admin/clinics-top', params)\n  }\n\n  getAppointmentsCRDetail(id) {\n    return this.get('admin/appointments-cr/' + id)\n  }\n\n  postAppointmentsCRDetail(id, params) {\n    return this.get('admin/appointments-cr/' + id, params)\n  }\n\n  postAppointmentsCRDetailRefund(id, params) {\n    return this.post('admin/appointments-cr/' + id + '/refund', params)\n  }\n\n  postAppointmentNotifyAll(params) {\n    return this.post('admin/appointment/notify-all', params)\n  }\n\n  postAppointmentNote(id, params) {\n    return this.post('admin/appointments/' + id + '/note', params)\n  }\n\n  postAppointmentNoteAdmin(id, params) {\n    return this.post('admin/appointments/' + id + '/note_admin', params)\n  }\n\n  getAppointmentDocuments(id) {\n    return this.get('admin/appointments/' + id + '/documents')\n  }\n\n  postAppointmentStatus(id, params) {\n    return this.post('admin/appointments/' + parseInt(id) + '/status', params)\n  }\n\n  postAppointmentCancellation(id, params) {\n    return this.post('admin/appointments/' + parseInt(id) + '/cancel', params)\n  }\n\n  postAppointmentUploadDocument(id, params) {\n    return this.post('admin/appointments/' + id + '/upload-document', params, {\n      'Content-Type': 'multipart/form-data'\n    })\n  }\n\n  postAppointmentRemoveDocument(id) {\n    return this.post('admin/appointment-documents/' + id + '/remove')\n  }\n\n  postAppointmentInterpreter(id, params) {\n    return this.post('admin/appointments/' + id + '/interpreter', params)\n  }\n\n  getAppointmentTotal(params) {\n    return this.get('admin/appointment-totals')\n  }\n\n  getAppointmentInterpreters(id) {\n    return this.get('admin/interpreters')\n  }\n\n  getClinicApplicants(params) {\n    return this.get('admin/clinic-applicants', params)\n  }\n\n  getClinicApproved(params) {\n    return this.get('admin/clinic-approved', params)\n  }\n\n  getDoctors(params) {\n    return this.get('admin/doctors', params)\n  }\n\n  getClinicDoctors(id) {\n    return this.get('admin/clinics/' + id + '/doctors')\n  }\n\n  postClinicDoctors(id, params) {\n    return this.post('admin/clinics/' + id + '/doctors', params)\n  }\n\n  postClinicDoctorRemove(id, params) {\n    return this.post('admin/clinics/' + id + '/doctor-remove', params)\n  }\n\n  postDoctorRemove(id, params) {\n    return this.post('admin/doctors/' + id + '/remove', params)\n  }\n\n  getClinic(id) {\n    return this.get('admin/clinics/' + id)\n  }\n\n  postClinicUpdate(id, params) {\n    return this.post('admin/clinics/' + id, params)\n  }\n\n  postClinicLanguageUpdate(id, params) {\n    return this.post('admin/clinic-languages/' + id, params)\n  }\n\n  postClinicLanguageRemove(id) {\n    return this.post('admin/clinic-languages/' + id + '/remove')\n  }\n\n  getClinicServices(id) {\n    return this.get('admin/clinics/' + id + '/services')\n  }\n\n  postClinicServices(id, params) {\n    return this.post('admin/clinics/' + id + '/services', params)\n  }\n\n  getClinicAvailables(id) {\n    return this.get('admin/clinics/' + id + '/availables')\n  }\n\n  postClinicAvailableAdd(id, params) {\n    return this.post('admin/clinics/' + id + '/availables', params)\n  }\n\n  postClinicAvailableRemove(id, params) {\n    return this.post('admin/clinics/' + id + '/availables-remove', params)\n  }\n\n  getClinicPhotos(id) {\n    return this.get('admin/clinics/' + id + '/photos')\n  }\n\n  postClinicPhotosUpload(id, params) {\n    return this.post('admin/clinics/' + id + '/photos', params, {\n      'Content-Type': 'multipart/form-data'\n    })\n  }\n\n  postClinicPhotoRemove(id, body) {\n    return this.post('admin/clinics/' + id + '/photos-remove', body)\n  }\n\n  getClients(params) {\n    return this.get('admin/clients', params)\n  }\n\n  getClientDetail(id) {\n    return this.get('admin/clients/' + id)\n  }\n\n  postClientUpdate(id, params) {\n    return this.post('admin/clients/' + id, params)\n  }\n\n  postClientRemove(id) {\n    return this.post('admin/clients/' + id + '/remove')\n  }\n\n  getTranslators(params) {\n    return this.get('admin/translators', params)\n  }\n\n  getTranslator(id) {\n    return this.get('admin/translators/' + id)\n  }\n\n  getSubscribers(params) {\n    return this.get('admin/subscribers', params)\n  }\n\n  getTranslatorLanguages(params) {\n    return this.get('admin/translator-languages', params);\n  }\n\n  postTranslatorCreate(params) {\n    return this.post('admin/translators', params)\n  }\n\n  postTranslatorRemove(id) {\n    return this.post('admin/translators/' + id + '/remove')\n  }\n\n  // postRemoveClinicService(id) {\n  //   return this.post('admin/clinics/' + id + '/service-remove')\n  // }\n\n  postClinicApprove(id) {\n    return this.post('admin/' + id + '/approve')\n  }\n\n  postClinicDecline(id) {\n    return this.post('admin/' + id + '/decline')\n  }\n\n  postClinicDelete(id) {\n    return this.post('admin/clinic' + id + '/delete')\n  }\n\n  getMessages(params) {\n    return this.get('admin/messages', params)\n  }\n\n  postSaveMessage(params) {\n    return this.post('admin/messages', params)\n  }\n\n  postMessagesDeletes({ids}) {\n    return this.post('admin/messages-deletes', {ids})\n  }\n\n  postMessagesDeleteAll() {\n    return this.post('admin/messages-delete-all');\n  }\n\n  getReviews(params) {\n    return this.get('admin/reviews', params)\n  }\n\n  getReviewDetail(id) {\n    return this.get('admin/reviews/' + id)\n  }\n\n  postReviewApprove(id) {\n    return this.post('admin/reviews/' + id + '/approve')\n  }\n\n  postReviewDecline(id) {\n    return this.post('admin/reviews/' + id + '/decline')\n  }\n\n  getNews(params) {\n    return this.get('admin/news', params)\n  }\n\n  getNewsDetail(id) {\n    return this.get('admin/news/' + id)\n  }\n\n  postNewsStore(params) {\n    return this.post('admin/news', params)\n  }\n\n  postNewsDelete(id) {\n    return this.post('admin/news/' + id + '/delete')\n  }\n\n  getSettings() {\n    return this.get('admin/settings')\n  }\n\n  getPayments(params) {\n    return this.get('admin/payments', params)\n  }\n\n  postPayments(params) {\n    return this.post('admin/payments', params)\n  }\n\n  getPaymentDetail(id) {\n    return this.get('admin/payments/' + id)\n  }\n\n  postRemovePaymentItem(id, params) {\n    return this.post('admin/payments/' + id + '/remove-item', params)\n  }\n\n  getStatements(params) {\n    return this.get('admin/statements', params)\n  }\n\n  postStatements(params) {\n    return this.post('admin/statements', params)\n  }\n\n  getStatementDetail(id) {\n    return this.get('admin/statements/' + id)\n  }\n\n  postRemoveStatementItem(id, params) {\n    return this.post('admin/statements/' + id + '/remove-item', params)\n  }\n\n  getDashboardTotals() {\n    return this.get('admin/dashboard/totals')\n  }\n\n  getFeedbacks(params) {\n    return this.get('admin/feedbacks', params)\n  }\n\n  postNewsCategoriesCreate(params){\n    return this.post('admin/news-categories', params)\n  }\n\n  getNewsCategories(){\n    return this.get('admin/news-categories')\n  }\n\n}\n","import BaseRequest from \"../BaseRequest\";\n\nexport default class ClinicRequest extends BaseRequest {\n\n  getAppointments(params) {\n    return this.get('clinic/appointments', params)\n  }\n\n  getAppointmentDetail(id) {\n    return this.get('clinic/appointments/' + id)\n  }\n\n  postAppointmentStatus(id, params) {\n    return this.post('clinic/appointments/' + id + '/status', params)\n  }\n\n  postAppointmentReschedule(id, params) {\n    return this.post('clinic/appointments/' + id + '/reschedule', params);\n  }\n\n  getAppointmentTotal(params) {\n    return this.get('clinic/appointment-totals')\n  }\n\n  getStatements(params) {\n    return this.get('clinic/statements', params)\n  }\n\n  getStatementDetail(id) {\n    return this.get('clinic/statements/' + id)\n  }\n\n  getReviews(params) {\n    return this.get('clinic/reviews', params)\n  }\n\n  getReviewDetail(id) {\n    return this.get('clinic/reviews/' + id)\n  }\n\n  getProfile() {\n    return this.get('clinic/profile')\n  }\n\n  postUpdateProfile(params) {\n    return this.post('clinic/profile', params)\n  }\n\n  postProfileLanguageUpdate(params) {\n    return this.post('clinic/profile-languages', params)\n  }\n\n  postProfileLanguageRemove(id) {\n    return this.post('clinic/profile-languages/' + id + '/remove')\n  }\n\n  getDoctors() {\n    return this.get('clinic/profile-doctors')\n  }\n\n  postDoctors(params) {\n    return this.post('clinic/profile-doctors', params)\n  }\n\n  postDoctorRemove(id, params) {\n    return this.post('clinic/profile-doctors/' + id + '/remove', params)\n  }\n\n  getServices() {\n    return this.get('clinic/profile-services')\n  }\n\n  postServices(params) {\n    return this.post('clinic/profile-services', params)\n  }\n\n  getAvailables() {\n    return this.get('clinic/profile-availables')\n  }\n\n  postAvailableAdd(params) {\n    return this.post('clinic/profile-availables', params)\n  }\n\n  postAvailableRemove(params) {\n    return this.post('clinic/profile-availables/remove', params)\n  }\n\n  getClinicPhotos() {\n    return this.get('clinic/profile-photos')\n  }\n\n  postClinicPhotosUpload(params) {\n    return this.post('clinic/profile-photos', params, {\n      'Content-Type': 'multipart/form-data'\n    })\n  }\n\n  postClinicPhotoRemove(body) {\n    return this.post('clinic/profile-photos/remove', body)\n  }\n\n  getDashboardTotals() {\n    return this.get('clinic/dashboard/totals')\n  }\n\n  getMessages(params) {\n    return this.get('clinic/messages', params)\n  }\n\n  postMessageMarkRead() {\n    return this.post('clinic/messages-read')\n  }\n\n  postMessageMarkUnread() {\n    return this.post('clinic/messages-unread')\n  }\n\n}\n","import UserRequest from \"./request/UserRequest\";\nimport utils from \"../utils/utils\";\nimport CommonRequest from \"./request/CommonRequest\";\nimport AdminRequest from './request/AdminRequest'\nimport ClinicRequest from './request/ClinicRequest'\nimport {appHelper} from \"./../utils/appHelper\";\n\nconst requestMap = {\n  AdminRequest,\n  UserRequest,\n  CommonRequest,\n  ClinicRequest\n}\nconst instances = {};\n\n\nexport default class RequestFactory {\n\n  static getRequest(classname) {\n    if (utils.getLocalUser() && appHelper.isClient()) {\n      window.axios.defaults.headers.common['Authorization'] = utils.getLocalUser().token;\n    }\n    if (utils.getLocalAdmin() && appHelper.isAdmin()) {\n      window.axios.defaults.headers.common['Authorization'] = utils.getLocalAdmin().token;\n    }\n    if (utils.getLocalClinic() && appHelper.isClinic()) {\n      window.axios.defaults.headers.common['Authorization'] = utils.getLocalClinic().token;\n    }\n\n    window.axios.defaults.headers.common['Content-Type'] = 'application/json';\n    let RequestClass = requestMap[classname];\n    if (!RequestClass) {\n      throw new Error('Invalid request class name: ' + classname);\n    }\n\n    let requestInstance = instances[classname];\n    if (!requestInstance) {\n      requestInstance = new RequestClass();\n      instances[classname] = requestInstance;\n    }\n    return requestInstance;\n  }\n\n}\n","module.exports = __webpack_public_path__ + \"img/clinic-home.1e692ff9.svg\";","module.exports = __webpack_public_path__ + \"img/dashboard-un.f715ad33.svg\";","module.exports = __webpack_public_path__ + \"img/appt-schedule.9e973258.svg\";","module.exports = __webpack_public_path__ + \"img/trash-bin.306343c6.svg\";","module.exports = __webpack_public_path__ + \"img/hera-logo.ef9ea03a.svg\";","module.exports = __webpack_public_path__ + \"img/avt-circle.ac23257e.png\";"],"sourceRoot":""}